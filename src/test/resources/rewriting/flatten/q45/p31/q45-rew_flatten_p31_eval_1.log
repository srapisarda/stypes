WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 073d6cfc_9410_4949_8a1b_50de81d35940

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalUnion(all=[false])
   :  :        :  :  :- LogicalUnion(all=[false])
   :  :        :  :  :  :- LogicalProject(X0=[$9], X1=[$1])
   :  :        :  :  :  :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :  :  :  :     :- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :  :     :  :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :  :     :  :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  :     +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :        :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :  :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :        :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$11], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $12)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($9, $10)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $9)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalUnion(all=[false])
   :           :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
   :           :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :           :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :  +- LogicalUnion(all=[false])
   :           :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalUnion(all=[false])
   :           :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$9])
   :           :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :           :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :- LogicalUnion(all=[false])
   :           :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :           :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :           :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :- LogicalUnion(all=[false])
   :                 :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalUnion(all=[false])
            :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     +- LogicalUnion(all=[false])
            :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
            :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
            :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :  +- LogicalUnion(all=[false])
            :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  +- LogicalProject(X0=[$1], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalUnion(all=[false])
            :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$9])
            :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
            :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :- LogicalUnion(all=[false])
            :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
            :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
            :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
                  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :- LogicalUnion(all=[false])
                  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1255.1097922695362, cumulative cost = {2.966262028326205E7 rows, 8.215528054337207E8 cpu, 4.31302512E8 io, 1.000725504266968E8 network, 6.217028994812149E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 1255.1097922695362, cumulative cost = {2.9661365173469782E7 rows, 8.215327236770444E8 cpu, 4.31302512E8 io, 1.000725504266968E8 network, 6.208996292141624E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1255.1097922695362, cumulative cost = {2.9660110063677512E7 rows, 8.213118243536049E8 cpu, 4.31302512E8 io, 1.0004242779168233E8 network, 6.208996292141624E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 6924.008421624231, cumulative cost = {2.9658854953885242E7 rows, 8.21201040218859E8 cpu, 4.31302512E8 io, 1.0004242779168233E8 network, 6.200963589471099E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 6743.514794675607, cumulative cost = {1.9504816327916328E7 rows, 5.537705753605107E8 cpu, 2.834265E8 io, 6.778672215840751E7 network, 4.124466010251081E7 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 208.51012603242285, cumulative cost = {8989840.641259 rows, 2.837457379572218E8 cpu, 1.29390492E8 io, 3.541354247561533E7 network, 2.02084115518148E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 208.51012603242285, cumulative cost = {8989632.131132968 rows, 2.837457379572218E8 cpu, 1.29390492E8 io, 3.541354247561533E7 network, 2.02084115518148E7 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 445.4122611594813, cumulative cost = {2520814.3790747495 rows, 6.1048688279101476E7 cpu, 3.6970476E7 io, 7552459.564062622 network, 4563099.867393531 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2520368.96681359 rows, 6.097742231731596E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4563099.867393531 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.4122611594813, cumulative cost = {2519923.5545524303 rows, 6.0970295721137404E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4534593.482679324 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2519478.1422912707 rows, 6.089190316317333E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4534593.482679324 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2457.186029746663, cumulative cost = {2519032.730030111 rows, 6.0852588186697386E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4506087.097965118 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 182.3404327501608, cumulative cost = {715587.3151934725 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.3404327501608, cumulative cost = {715404.9747607224 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 164.53128364844173, cumulative cost = {360718.2195239143 rows, 644389.2502483395 cpu, 6162684.0 io, 29805.75619131328 network, 136188.02871333694 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 164.53128364844173, cumulative cost = {360553.6882402658 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 164.53128364844173, cumulative cost = {360389.1569566174 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 2274.845596996502, cumulative cost = {1800988.228806892 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 2274.845596996502, cumulative cost = {1798713.3832098953 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 157.63128364844172, cumulative cost = {360605.5195239142 rows, 628200.1236780789 cpu, 6162144.0 io, 29100.15619131328 network, 134524.02871333694 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 157.63128364844172, cumulative cost = {360447.8882402658 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 157.63128364844172, cumulative cost = {360290.25695661735 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 944.6552457233377, cumulative cost = {6468609.241932186 rows, 2.2268592913806528E8 cpu, 9.2420016E7 io, 2.786108291155271E7 network, 1.5620368597796336E7 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 944.6552457233377, cumulative cost = {6467664.586686463 rows, 2.2268592913806528E8 cpu, 9.2420016E7 io, 2.786108291155271E7 network, 1.5620368597796336E7 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6250.701638155585, cumulative cost = {6466625.93144074 rows, 2.2262802752496004E8 cpu, 9.2419452E7 io, 2.786051891155271E7 network, 1.5618676597796336E7 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6250.701638155585, cumulative cost = {6460375.229802584 rows, 2.2252801629874957E8 cpu, 9.2419452E7 io, 2.786051891155271E7 network, 1.5218631692954378E7 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6250.701638155585, cumulative cost = {6454124.528164429 rows, 2.214278928104342E8 cpu, 9.2419452E7 io, 2.7710502072236974E7 network, 1.5218631692954378E7 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 34482.96798433013, cumulative cost = {6447873.826526273 rows, 2.208761653226849E8 cpu, 9.2419452E7 io, 2.7710502072236974E7 network, 1.481858678811242E7 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 26973.302734330126, cumulative cost = {5285352.4230419425 rows, 2.006579518747006E8 cpu, 7.3935972E7 io, 2.5583683632236972E7 network, 1.201195282811242E7 memory}
         :  :           :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 19333.841734330126, cumulative cost = {3481358.0783076123 rows, 1.2913531065196626E8 cpu, 4.9292256E7 io, 1.6213293072236974E7 network, 7002245.788112419 memory}
         :  :           :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 7777.588575, cumulative cost = {2339152.181975 rows, 1.1051235951257502E8 cpu, 3.0806724E7 io, 1.4332550285999998E7 network, 4694181.334 memory}
         :  :           :           :  :  :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 6773.1442875, cumulative cost = {1341589.144325 rows, 5.606273608200001E7 cpu, 1.848348E7 io, 7245796.686 network, 2532438.934 memory}
         :  :           :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, x0, y00], isBroadcast=[true], build=[right]): rowcount = 6773.1442875, cumulative cost = {1334816.0000375 rows, 5.606273608200001E7 cpu, 1.848348E7 io, 7245796.686 network, 2532438.934 memory}
         :  :           :           :  :  :  :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 6649.29525, cumulative cost = {994331.85575 rows, 5.5444642720000006E7 cpu, 1.232268E7 io, 7245772.686 network, 2160050.4 memory}
         :  :           :           :  :  :  :        +- Calc(select=[x, y0]): rowcount = 6649.29525, cumulative cost = {987682.5605 rows, 5.4380755480000004E7 cpu, 1.232268E7 io, 7086189.6 network, 2160050.4 memory}
         :  :           :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 6649.29525, cumulative cost = {981033.26525 rows, 5.4380755480000004E7 cpu, 1.232268E7 io, 7086189.6 network, 2160050.4 memory}
         :  :           :           :  :  :  :              :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :           :           :  :  :  :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :           :           :  :  :  :              :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :           :  :  :  :              :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :  :  :              :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :  :  :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 1004.4442875, cumulative cost = {989785.449075 rows, 5.444184584200001E7 cpu, 1.2323244E7 io, 7086753.6 network, 2161742.4 memory}
         :  :           :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 1004.4442875, cumulative cost = {988781.0047875 rows, 5.444184584200001E7 cpu, 1.2323244E7 io, 7086753.6 network, 2161742.4 memory}
         :  :           :           :  :  :        :- Calc(select=[x, y0]): rowcount = 6649.29525, cumulative cost = {987682.5605 rows, 5.4380755480000004E7 cpu, 1.232268E7 io, 7086189.6 network, 2160050.4 memory}
         :  :           :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 6649.29525, cumulative cost = {981033.26525 rows, 5.4380755480000004E7 cpu, 1.232268E7 io, 7086189.6 network, 2160050.4 memory}
         :  :           :           :  :  :        :     :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :           :           :  :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :           :           :  :  :        :     :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :           :  :  :        :     :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :  :        :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :  :        :     :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  +- Calc(select=[X0, x AS X1]): rowcount = 11556.253159330126, cumulative cost = {1122872.054598282 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :           :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 11556.253159330126, cumulative cost = {1111315.8014389519 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :           :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :           :  :        :  +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 38529.787728867515, cumulative cost = {727430.8482796218 rows, 9455796.595825966 cpu, 1.2324192E7 io, 955893.1862369755 network, 149706.05411241902 memory}
         :  :           :           :  :           +- Calc(select=[x, X0]): rowcount = 38529.787728867515, cumulative cost = {688901.0605507543 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :           :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.787728867515, cumulative cost = {650371.2728218868 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :           :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :  :           :           :  :                    +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :           :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :           :           :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :  :           :           :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :  :           :           :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :  :           :           :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :  :           :           :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :           :           :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :           :           :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :           :           :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :           :           :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[y01 AS X0, x AS X1]): rowcount = 7639.461, cumulative cost = {1777021.0420000001 rows, 7.149566792E7 cpu, 2.4643716E7 io, 9370390.56 network, 5009707.04 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y01], isBroadcast=[true], build=[right]): rowcount = 7639.461, cumulative cost = {1769381.5810000002 rows, 7.149566792E7 cpu, 2.4643716E7 io, 9370390.56 network, 5009707.04 memory}
         :  :           :           :        :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[broadcast]): rowcount = 12417.84, cumulative cost = {1427925.32 rows, 6.9026742E7 cpu, 1.8482376E7 io, 9369826.56 network, 4312616.0 memory}
         :  :           :           :           +- Calc(select=[x0, y0 AS y01]): rowcount = 12417.84, cumulative cost = {1415507.48 rows, 6.7039887599999994E7 cpu, 1.8482376E7 io, 9071798.4 network, 4312616.0 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 12417.84, cumulative cost = {1403089.64 rows, 6.7039887599999994E7 cpu, 1.8482376E7 io, 9071798.4 network, 4312616.0 memory}
         :  :           :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :  :           :           :                 :  +- Calc(select=[y, x0]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :           :                 :        :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :           :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :        +- Exchange(distribution=[hash[y0]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :           :           :                 :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :           :           :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7509.665249999999, cumulative cost = {1128038.4355000004 rows, 2.018373048E7 cpu, 1.848348E7 io, 2126818.44 network, 2806633.96 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], isBroadcast=[true], build=[right]): rowcount = 7509.665249999999, cumulative cost = {1120528.7702500003 rows, 2.018373048E7 cpu, 1.848348E7 io, 2126818.44 network, 2806633.96 memory}
         :  :           :                 :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[broadcast]): rowcount = 11552.534999999998, cumulative cost = {779202.3050000002 rows, 1.7721727E7 cpu, 1.232214E7 io, 2126254.44 network, 2158000.0 memory}
         :  :           :                    +- Calc(select=[x, y0 AS y00]): rowcount = 11552.534999999998, cumulative cost = {767649.7700000001 rows, 1.5873321399999999E7 cpu, 1.232214E7 io, 1848993.6 network, 2158000.0 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 11552.534999999998, cumulative cost = {756097.2350000001 rows, 1.5873321399999999E7 cpu, 1.232214E7 io, 1848993.6 network, 2158000.0 memory}
         :  :           :                          :- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :                          :  +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                          :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                          :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                          :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :                          :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :           :                             +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 6535.004668643184, cumulative cost = {1.0508232171862653E7 rows, 2.7001809388849425E8 cpu, 1.54036008E8 io, 3.2373179682792183E7 network, 2.1036248550696008E7 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right]): rowcount = 6535.004668643184, cumulative cost = {1.0501697167194009E7 rows, 2.7001809388849425E8 cpu, 1.54036008E8 io, 3.2373179682792183E7 network, 2.1036248550696008E7 memory}
         :        :- Calc(select=[y, X0]): rowcount = 38571.66183917392, cumulative cost = {2854656.7027530978 rows, 6.310584357719075E7 cpu, 4.3131252E7 io, 7552459.564062622 network, 4588042.9540184615 memory}
         :        :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38571.66183917392, cumulative cost = {2816085.0409139236 rows, 6.310584357719075E7 cpu, 4.3131252E7 io, 7552459.564062622 network, 4588042.9540184615 memory}
         :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :     +- Exchange(distribution=[broadcast]): rowcount = 445.4122611594813, cumulative cost = {2520814.3790747495 rows, 6.1048688279101476E7 cpu, 3.6970476E7 io, 7552459.564062622 network, 4563099.867393531 memory}
         :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2520368.96681359 rows, 6.097742231731596E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4563099.867393531 memory}
         :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.4122611594813, cumulative cost = {2519923.5545524303 rows, 6.0970295721137404E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4534593.482679324 memory}
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2519478.1422912707 rows, 6.089190316317333E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4534593.482679324 memory}
         :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 2457.186029746663, cumulative cost = {2519032.730030111 rows, 6.0852588186697386E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4506087.097965118 memory}
         :        :                    :- Calc(select=[X0, X00 AS X1]): rowcount = 182.3404327501608, cumulative cost = {715587.3151934725 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.3404327501608, cumulative cost = {715404.9747607224 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :        :                    :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :        :                    :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :        :                    :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :        :                    :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :        :                    :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 164.53128364844173, cumulative cost = {360718.2195239143 rows, 644389.2502483395 cpu, 6162684.0 io, 29805.75619131328 network, 136188.02871333694 memory}
         :        :                    :        +- Calc(select=[X0, X1]): rowcount = 164.53128364844173, cumulative cost = {360553.6882402658 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :        :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 164.53128364844173, cumulative cost = {360389.1569566174 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :        :                    :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                    :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                    :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                    :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                    :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                    :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    +- Calc(select=[X0, X00 AS X1]): rowcount = 2274.845596996502, cumulative cost = {1800988.228806892 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 2274.845596996502, cumulative cost = {1798713.3832098953 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :        :                          :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                          :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 157.63128364844172, cumulative cost = {360605.5195239142 rows, 628200.1236780789 cpu, 6162144.0 io, 29100.15619131328 network, 134524.02871333694 memory}
         :        :                             +- Calc(select=[X0, x]): rowcount = 157.63128364844172, cumulative cost = {360447.8882402658 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 157.63128364844172, cumulative cost = {360290.25695661735 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 4995.03595178064, cumulative cost = {7640505.459772268 rows, 2.0656371672897586E8 cpu, 1.10904756E8 io, 2.482072011872956E7 network, 1.616848358337783E7 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4995.03595178064, cumulative cost = {7635510.423820487 rows, 2.0576451097669095E8 cpu, 1.10904756E8 io, 2.4700839255886827E7 network, 1.616848358337783E7 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4995.03595178064, cumulative cost = {7630515.387868706 rows, 2.0568459040146247E8 cpu, 1.10904756E8 io, 2.4700839255886827E7 network, 1.584880128246387E7 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4995.03595178064, cumulative cost = {7625520.351916925 rows, 2.0480546407394907E8 cpu, 1.10904756E8 io, 2.458095839304409E7 network, 1.584880128246387E7 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 27555.892886395115, cumulative cost = {7620525.315965144 rows, 2.0436456978776675E8 cpu, 1.10904756E8 io, 2.458095839304409E7 network, 1.5529118981549907E7 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 21441.40525072773, cumulative cost = {5804334.577005082 rows, 1.430090695792082E8 cpu, 8.6260356E7 io, 1.7080541826625433E7 network, 1.1321938559104068E7 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 9839.272355377621, cumulative cost = {3571657.17725432 rows, 6.810564679440786E7 cpu, 5.545572E7 io, 7724323.996950755 network, 4960142.13665823 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 8942.055494347187, cumulative cost = {2858688.293291065 rows, 6.4612747179643914E7 cpu, 4.3131204E7 io, 7671592.560085828 network, 4759948.962009346 memory}
         :                       :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :                       :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :                       :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                       :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                       :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                       :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                       :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :                       :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :                       :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :                       :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :                       :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :                       :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :                       :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :                       :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6665.916861030434, cumulative cost = {1054218.4573480804 rows, 4989574.660841034 cpu, 1.8484752E7 io, 194618.13462979574 network, 530858.1361002461 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], isBroadcast=[true], build=[right]): rowcount = 6665.916861030434, cumulative cost = {1047552.5404870498 rows, 4989574.660841034 cpu, 1.8484752E7 io, 194618.13462979574 network, 530858.1361002461 memory}
         :                       :  :  :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 5934.445740202895, cumulative cost = {707175.6236260193 rows, 4377200.0949194105 cpu, 1.2323952E7 io, 194594.13462979574 network, 198501.17464888399 memory}
         :                       :  :  :           +- Calc(select=[y, X0]): rowcount = 5934.445740202895, cumulative cost = {701241.1778858164 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 5934.445740202895, cumulative cost = {695306.7321456135 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
         :                       :  :  :                 :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
         :                       :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :                       :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :                       :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :                       :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :                       :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y AS X1]): rowcount = 897.2168610304342, cumulative cost = {703129.6116078773 rows, 3483060.3424085705 cpu, 1.2324516E7 io, 52731.436864926254 network, 200193.17464888399 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 897.2168610304342, cumulative cost = {702232.3947468469 rows, 3483060.3424085705 cpu, 1.2324516E7 io, 52731.436864926254 network, 200193.17464888399 memory}
         :                       :  :        :- Calc(select=[y, X0]): rowcount = 5934.445740202895, cumulative cost = {701241.1778858164 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 5934.445740202895, cumulative cost = {695306.7321456135 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
         :                       :  :        :     :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
         :                       :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :                       :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :                       :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :                       :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :                       :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 11602.132895350107, cumulative cost = {2211235.994500034 rows, 7.488198137954961E7 cpu, 3.0804636E7 io, 9356217.829674678 network, 6361796.422445838 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 11602.132895350107, cumulative cost = {2199633.861604684 rows, 7.488198137954961E7 cpu, 3.0804636E7 io, 9356217.829674678 network, 6361796.422445838 memory}
         :                       :        :- Exchange(distribution=[hash[y]]): rowcount = 38842.55263566739, cumulative cost = {1815815.728709334 rows, 6.753750195846426E7 cpu, 2.4643836E7 io, 8432073.829674678 network, 4205488.422445838 memory}
         :                       :        :  +- Calc(select=[y, X1]): rowcount = 38842.55263566739, cumulative cost = {1776973.1760736667 rows, 6.101195311567215E7 cpu, 2.4643836E7 io, 7499852.56641866 network, 4205488.422445838 memory}
         :                       :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 38842.55263566739, cumulative cost = {1738130.6234379993 rows, 6.101195311567215E7 cpu, 2.4643836E7 io, 7499852.56641866 network, 4205488.422445838 memory}
         :                       :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442589.070802332 rows, 5.894035030843656E7 cpu, 1.848306E7 io, 7499852.56641866 network, 4079412.771796681 memory}
         :                       :        :           +- Calc(select=[X1, y]): rowcount = 2251.350904449236, cumulative cost = {1440337.7198978828 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
         :                       :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438086.3689934337 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
         :                       :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                       :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                       :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                       :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                       :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :        :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 6114.487635667386, cumulative cost = {1788634.8460736668 rows, 6.132794431567215E7 cpu, 2.46444E7 io, 7500416.56641866 network, 4207180.422445838 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 6114.487635667386, cumulative cost = {1782520.3584379994 rows, 6.132794431567215E7 cpu, 2.46444E7 io, 7500416.56641866 network, 4207180.422445838 memory}
         :                             :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                             :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                             :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442589.070802332 rows, 5.894035030843656E7 cpu, 1.848306E7 io, 7499852.56641866 network, 4079412.771796681 memory}
         :                                +- Calc(select=[X1, y]): rowcount = 2251.350904449236, cumulative cost = {1440337.7198978828 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438086.3689934337 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                                      :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 180.49362694862387, cumulative cost = {1.0147114617547287E7 rows, 2.6742354084992665E8 cpu, 1.47876012E8 io, 3.2255705633274823E7 network, 2.076497579220018E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 180.49362694862387, cumulative cost = {1.0146934123920338E7 rows, 2.6742354084992665E8 cpu, 1.47876012E8 io, 3.2255705633274823E7 network, 2.076497579220018E7 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 445.48545355706335, cumulative cost = {2509613.5956873684 rows, 6.159986725885085E7 cpu, 3.6970572E7 io, 7554182.377387997 network, 4569493.023423157 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2509168.110233811 rows, 6.152858958628172E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4569493.023423157 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.48545355706335, cumulative cost = {2508722.624780254 rows, 6.15214618190248E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4540981.954395505 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2508277.1393266967 rows, 6.144305637919876E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4540981.954395505 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2457.589806994182, cumulative cost = {2507831.6538731395 rows, 6.140373494228686E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4512470.885367853 memory}
               :              :- Calc(select=[X0, X10 AS X1]): rowcount = 2275.047485620262, cumulative cost = {1795387.4888397823 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2275.047485620262, cumulative cost = {1793112.441354162 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :              :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :              :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :              :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :              :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :              :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 158.97720780683773, cumulative cost = {355004.37577955716 rows, 903731.127293892 cpu, 6162192.0 io, 29959.80623645814 network, 137640.55066183486 memory}
               :              :        +- Calc(select=[X1, x]): rowcount = 158.97720780683773, cumulative cost = {354845.3985717503 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 158.97720780683773, cumulative cost = {354686.4213639435 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :              :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :              :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :              :              :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :              :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :              :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, X10 AS X1]): rowcount = 182.5423213739202, cumulative cost = {709986.575226363 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.5423213739202, cumulative cost = {709804.0329049891 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
               :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
               :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
               :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
               :                    :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                    :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                    :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                    :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                    :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 165.87720780683773, cumulative cost = {355117.0757795572 rows, 919983.063658211 cpu, 6162732.0 io, 30665.40623645814 network, 139304.55066183486 memory}
               :                       +- Calc(select=[X0, X1]): rowcount = 165.87720780683773, cumulative cost = {354951.19857175037 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.87720780683773, cumulative cost = {354785.3213639435 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :                             :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                             :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                             :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                             :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[X0, X1]): rowcount = 757.805392767096, cumulative cost = {7637140.034606022 rows, 2.058140472643052E8 cpu, 1.1090544E8 io, 2.4701523255886827E7 network, 1.617053558337783E7 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 757.805392767096, cumulative cost = {7636382.2292132545 rows, 2.058140472643052E8 cpu, 1.1090544E8 io, 2.4701523255886827E7 network, 1.617053558337783E7 memory}
                     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4995.03595178064, cumulative cost = {7635510.423820487 rows, 2.0576451097669095E8 cpu, 1.10904756E8 io, 2.4700839255886827E7 network, 1.616848358337783E7 memory}
                     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4995.03595178064, cumulative cost = {7630515.387868706 rows, 2.0568459040146247E8 cpu, 1.10904756E8 io, 2.4700839255886827E7 network, 1.584880128246387E7 memory}
                     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4995.03595178064, cumulative cost = {7625520.351916925 rows, 2.0480546407394907E8 cpu, 1.10904756E8 io, 2.458095839304409E7 network, 1.584880128246387E7 memory}
                     :        +- Union(all=[true], union=[X0, X1]): rowcount = 27555.892886395115, cumulative cost = {7620525.315965144 rows, 2.0436456978776675E8 cpu, 1.10904756E8 io, 2.458095839304409E7 network, 1.5529118981549907E7 memory}
                     :           :- Union(all=[true], union=[X0, X1]): rowcount = 21441.40525072773, cumulative cost = {5804334.577005082 rows, 1.430090695792082E8 cpu, 8.6260356E7 io, 1.7080541826625433E7 network, 1.1321938559104068E7 memory}
                     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 9839.272355377621, cumulative cost = {3571657.17725432 rows, 6.810564679440786E7 cpu, 5.545572E7 io, 7724323.996950755 network, 4960142.13665823 memory}
                     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 8942.055494347187, cumulative cost = {2858688.293291065 rows, 6.4612747179643914E7 cpu, 4.3131204E7 io, 7671592.560085828 network, 4759948.962009346 memory}
                     :           :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                     :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                     :           :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                     :           :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                     :           :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                     :           :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                     :           :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :           :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :           :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                     :           :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :           :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :           :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :           :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                     :           :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
                     :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                     :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                     :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
                     :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
                     :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
                     :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
                     :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                     :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                     :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                     :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                     :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6665.916861030434, cumulative cost = {1054218.4573480804 rows, 4989574.660841034 cpu, 1.8484752E7 io, 194618.13462979574 network, 530858.1361002461 memory}
                     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], isBroadcast=[true], build=[right]): rowcount = 6665.916861030434, cumulative cost = {1047552.5404870498 rows, 4989574.660841034 cpu, 1.8484752E7 io, 194618.13462979574 network, 530858.1361002461 memory}
                     :           :  :  :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 5934.445740202895, cumulative cost = {707175.6236260193 rows, 4377200.0949194105 cpu, 1.2323952E7 io, 194594.13462979574 network, 198501.17464888399 memory}
                     :           :  :  :           +- Calc(select=[y, X0]): rowcount = 5934.445740202895, cumulative cost = {701241.1778858164 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
                     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 5934.445740202895, cumulative cost = {695306.7321456135 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
                     :           :  :  :                 :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
                     :           :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
                     :           :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
                     :           :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
                     :           :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
                     :           :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                     :           :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                     :           :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :  +- Calc(select=[X0, y AS X1]): rowcount = 897.2168610304342, cumulative cost = {703129.6116078773 rows, 3483060.3424085705 cpu, 1.2324516E7 io, 52731.436864926254 network, 200193.17464888399 memory}
                     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 897.2168610304342, cumulative cost = {702232.3947468469 rows, 3483060.3424085705 cpu, 1.2324516E7 io, 52731.436864926254 network, 200193.17464888399 memory}
                     :           :  :        :- Calc(select=[y, X0]): rowcount = 5934.445740202895, cumulative cost = {701241.1778858164 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
                     :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 5934.445740202895, cumulative cost = {695306.7321456135 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
                     :           :  :        :     :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :           :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :           :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
                     :           :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
                     :           :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
                     :           :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
                     :           :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
                     :           :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                     :           :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                     :           :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 11602.132895350107, cumulative cost = {2211235.994500034 rows, 7.488198137954961E7 cpu, 3.0804636E7 io, 9356217.829674678 network, 6361796.422445838 memory}
                     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 11602.132895350107, cumulative cost = {2199633.861604684 rows, 7.488198137954961E7 cpu, 3.0804636E7 io, 9356217.829674678 network, 6361796.422445838 memory}
                     :           :        :- Exchange(distribution=[hash[y]]): rowcount = 38842.55263566739, cumulative cost = {1815815.728709334 rows, 6.753750195846426E7 cpu, 2.4643836E7 io, 8432073.829674678 network, 4205488.422445838 memory}
                     :           :        :  +- Calc(select=[y, X1]): rowcount = 38842.55263566739, cumulative cost = {1776973.1760736667 rows, 6.101195311567215E7 cpu, 2.4643836E7 io, 7499852.56641866 network, 4205488.422445838 memory}
                     :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 38842.55263566739, cumulative cost = {1738130.6234379993 rows, 6.101195311567215E7 cpu, 2.4643836E7 io, 7499852.56641866 network, 4205488.422445838 memory}
                     :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442589.070802332 rows, 5.894035030843656E7 cpu, 1.848306E7 io, 7499852.56641866 network, 4079412.771796681 memory}
                     :           :        :           +- Calc(select=[X1, y]): rowcount = 2251.350904449236, cumulative cost = {1440337.7198978828 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
                     :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438086.3689934337 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
                     :           :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                     :           :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                     :           :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                     :           :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                     :           :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :           :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :           :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                     :           :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :           :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :           :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :           :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                     :           :        :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                     :           :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 6114.487635667386, cumulative cost = {1788634.8460736668 rows, 6.132794431567215E7 cpu, 2.46444E7 io, 7500416.56641866 network, 4207180.422445838 memory}
                     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 6114.487635667386, cumulative cost = {1782520.3584379994 rows, 6.132794431567215E7 cpu, 2.46444E7 io, 7500416.56641866 network, 4207180.422445838 memory}
                     :                 :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :                 +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442589.070802332 rows, 5.894035030843656E7 cpu, 1.848306E7 io, 7499852.56641866 network, 4079412.771796681 memory}
                     :                    +- Calc(select=[X1, y]): rowcount = 2251.350904449236, cumulative cost = {1440337.7198978828 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
                     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438086.3689934337 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
                     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                     :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                     :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                     :                          :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,1,1,0,0,2,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#9] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right])\n:        :- Calc(select=[y, X0])\n:        :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:        :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        :     +- [#2] Exchange(distribution=[broadcast])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[X0, X1])\n         +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n            :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n            +- [#5] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[10])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[12])
         :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[2])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[13])
         :              :                 :- Exchange(distribution=[hash[x]])(reuse_id=[26])
         :              :                 :  +- Reused(reference_id=[1])
         :              :                 +- Exchange(distribution=[hash[y]])
         :              :                    +- Calc(select=[y, x0])(reuse_id=[3])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :              :                          :- Reused(reference_id=[1])
         :              :                          +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X1, x])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[x AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[2])
         :              :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :        :                 :- Reused(reference_id=[3])
         :              :        :                 +- Reused(reference_id=[4])
         :              :        +- Reused(reference_id=[5])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[16])
         :              :           :     :- Reused(reference_id=[2])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[6])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[9])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = y)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[15])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[6])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, X1])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[7])
         :                       +- Reused(reference_id=[6])
         :- Exchange(distribution=[broadcast])(reuse_id=[22])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- Reused(reference_id=[8])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[9])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[3])
         :              :        :           +- Reused(reference_id=[5])
         :              :        +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[11])
         :                       +- Reused(reference_id=[5])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[2,1,1,0,1,0,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, y, X0], isBroadcast=[true], build=[right])\n:  :  :        :- [#9] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :        +- [#10] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, y AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[y, X0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X1 AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X1, x, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right])\n      :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Calc(select=[x, y])(reuse_id=[23])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[6])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[14])
         :              :  +- Calc(select=[X1, y])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[12])
         :              :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :        :              +- Reused(reference_id=[13])
         :              :        +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]])
         :              :  +- Calc(select=[y, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[14])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[25])
         :              :  +- Calc(select=[x, y0])(reuse_id=[18])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[5])
         :              :- Calc(select=[y, X0])(reuse_id=[20])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :     :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :     :  +- Calc(select=[x, y])(reuse_id=[24])
         :              :     :     +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :     :        :- Reused(reference_id=[1])
         :              :     :        +- Reused(reference_id=[6])
         :              :     +- Exchange(distribution=[broadcast])
         :              :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :              :           +- Exchange(distribution=[hash[X0, X1]])
         :              :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 +- Union(all=[true], union=[X0, X1])
         :              :                    :- Calc(select=[x0 AS X0, x AS X1])
         :              :                    :  +- Reused(reference_id=[15])
         :              :                    +- Calc(select=[x AS X0, x AS X1])(reuse_id=[19])
         :              :                       +- Reused(reference_id=[16])
         :              :- Reused(reference_id=[6])
         :              :- Reused(reference_id=[17])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[28])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[18])
         :              :                 :     +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[19])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[18])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Reused(reference_id=[20])
         :- Reused(reference_id=[21])
         :- Reused(reference_id=[4])
         :- Reused(reference_id=[6])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Reused(reference_id=[22])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,0,1,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[y0 AS X0, x0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, x0, y00], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[y0 AS X0, x AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :- Calc(select=[x, y0])\n:  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :     :- [#10] Calc(select=[x, y0])\n:  :  :        :     +- [#9] Exchange(distribution=[broadcast])\n:  :  :        +- [#9] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, x AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:  :        :- [#5] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[y01 AS X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y01], isBroadcast=[true], build=[right])\n:        :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], isBroadcast=[true], build=[right])\n      :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#2] Exchange(distribution=[broadcast])\n])
                  :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :  +- Reused(reference_id=[23])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[x, y0 AS y00])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])(reuse_id=[27])
                  :        :  +- Reused(reference_id=[24])
                  :        +- Reused(reference_id=[25])
                  :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :  +- Reused(reference_id=[24])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[x0, y0 AS y01])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])
                  :        :  +- Calc(select=[y, x0])
                  :        :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
                  :        :        :- Reused(reference_id=[26])
                  :        :        +- Exchange(distribution=[hash[y0]])
                  :        :           +- Reused(reference_id=[18])
                  :        +- Reused(reference_id=[25])
                  :- Reused(reference_id=[27])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[28])
                  :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :  +- Reused(reference_id=[18])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[x, y0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
                  :        :- Calc(select=[x, y0])(reuse_id=[29])
                  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :     :- Exchange(distribution=[hash[y]])
                  :        :     :  +- Reused(reference_id=[1])
                  :        :     +- Exchange(distribution=[hash[x]])
                  :        :        +- Reused(reference_id=[24])
                  :        +- Reused(reference_id=[6])
                  :- Reused(reference_id=[6])
                  :- Reused(reference_id=[29])
                  +- Reused(reference_id=[6])

Job has been submitted with JobID f223ec0ef68996ba46a3fe6a8113d992
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 5b9a74a2_c603_4c99_9316_782236d59cbe

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalUnion(all=[false])
   :  :        :  :  :- LogicalUnion(all=[false])
   :  :        :  :  :  :- LogicalProject(X0=[$9], X1=[$1])
   :  :        :  :  :  :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :  :  :  :     :- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :  :     :  :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :  :     :  :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  :     +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :        :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :  :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :        :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$11], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $12)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($9, $10)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $9)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalUnion(all=[false])
   :           :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
   :           :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :           :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :  +- LogicalUnion(all=[false])
   :           :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalUnion(all=[false])
   :           :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$9])
   :           :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :           :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :- LogicalUnion(all=[false])
   :           :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :           :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :           :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :- LogicalUnion(all=[false])
   :                 :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalUnion(all=[false])
            :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     +- LogicalUnion(all=[false])
            :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
            :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
            :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :  +- LogicalUnion(all=[false])
            :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  +- LogicalProject(X0=[$1], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalUnion(all=[false])
            :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$9])
            :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
            :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :- LogicalUnion(all=[false])
            :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
            :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
            :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
                  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :- LogicalUnion(all=[false])
                  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1255.1097922695362, cumulative cost = {2.966262028326205E7 rows, 8.215528054337207E8 cpu, 4.31302512E8 io, 1.000725504266968E8 network, 6.217028994812149E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 1255.1097922695362, cumulative cost = {2.9661365173469782E7 rows, 8.215327236770444E8 cpu, 4.31302512E8 io, 1.000725504266968E8 network, 6.208996292141624E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1255.1097922695362, cumulative cost = {2.9660110063677512E7 rows, 8.213118243536049E8 cpu, 4.31302512E8 io, 1.0004242779168233E8 network, 6.208996292141624E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 6924.008421624231, cumulative cost = {2.9658854953885242E7 rows, 8.21201040218859E8 cpu, 4.31302512E8 io, 1.0004242779168233E8 network, 6.200963589471099E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 6743.514794675607, cumulative cost = {1.9504816327916328E7 rows, 5.537705753605107E8 cpu, 2.834265E8 io, 6.778672215840751E7 network, 4.124466010251081E7 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 208.51012603242285, cumulative cost = {8989840.641259 rows, 2.837457379572218E8 cpu, 1.29390492E8 io, 3.541354247561533E7 network, 2.02084115518148E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 208.51012603242285, cumulative cost = {8989632.131132968 rows, 2.837457379572218E8 cpu, 1.29390492E8 io, 3.541354247561533E7 network, 2.02084115518148E7 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 445.4122611594813, cumulative cost = {2520814.3790747495 rows, 6.1048688279101476E7 cpu, 3.6970476E7 io, 7552459.564062622 network, 4563099.867393531 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2520368.96681359 rows, 6.097742231731596E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4563099.867393531 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.4122611594813, cumulative cost = {2519923.5545524303 rows, 6.0970295721137404E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4534593.482679324 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2519478.1422912707 rows, 6.089190316317333E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4534593.482679324 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2457.186029746663, cumulative cost = {2519032.730030111 rows, 6.0852588186697386E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4506087.097965118 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 182.3404327501608, cumulative cost = {715587.3151934725 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.3404327501608, cumulative cost = {715404.9747607224 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 164.53128364844173, cumulative cost = {360718.2195239143 rows, 644389.2502483395 cpu, 6162684.0 io, 29805.75619131328 network, 136188.02871333694 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 164.53128364844173, cumulative cost = {360553.6882402658 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 164.53128364844173, cumulative cost = {360389.1569566174 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 2274.845596996502, cumulative cost = {1800988.228806892 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 2274.845596996502, cumulative cost = {1798713.3832098953 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 157.63128364844172, cumulative cost = {360605.5195239142 rows, 628200.1236780789 cpu, 6162144.0 io, 29100.15619131328 network, 134524.02871333694 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 157.63128364844172, cumulative cost = {360447.8882402658 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 157.63128364844172, cumulative cost = {360290.25695661735 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 944.6552457233377, cumulative cost = {6468609.241932186 rows, 2.2268592913806528E8 cpu, 9.2420016E7 io, 2.786108291155271E7 network, 1.5620368597796336E7 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 944.6552457233377, cumulative cost = {6467664.586686463 rows, 2.2268592913806528E8 cpu, 9.2420016E7 io, 2.786108291155271E7 network, 1.5620368597796336E7 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6250.701638155585, cumulative cost = {6466625.93144074 rows, 2.2262802752496004E8 cpu, 9.2419452E7 io, 2.786051891155271E7 network, 1.5618676597796336E7 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6250.701638155585, cumulative cost = {6460375.229802584 rows, 2.2252801629874957E8 cpu, 9.2419452E7 io, 2.786051891155271E7 network, 1.5218631692954378E7 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6250.701638155585, cumulative cost = {6454124.528164429 rows, 2.214278928104342E8 cpu, 9.2419452E7 io, 2.7710502072236974E7 network, 1.5218631692954378E7 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 34482.96798433013, cumulative cost = {6447873.826526273 rows, 2.208761653226849E8 cpu, 9.2419452E7 io, 2.7710502072236974E7 network, 1.481858678811242E7 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 26973.302734330126, cumulative cost = {5285352.4230419425 rows, 2.006579518747006E8 cpu, 7.3935972E7 io, 2.5583683632236972E7 network, 1.201195282811242E7 memory}
         :  :           :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 19333.841734330126, cumulative cost = {3481358.0783076123 rows, 1.2913531065196626E8 cpu, 4.9292256E7 io, 1.6213293072236974E7 network, 7002245.788112419 memory}
         :  :           :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 7777.588575, cumulative cost = {2339152.181975 rows, 1.1051235951257502E8 cpu, 3.0806724E7 io, 1.4332550285999998E7 network, 4694181.334 memory}
         :  :           :           :  :  :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 6773.1442875, cumulative cost = {1341589.144325 rows, 5.606273608200001E7 cpu, 1.848348E7 io, 7245796.686 network, 2532438.934 memory}
         :  :           :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, x0, y00], isBroadcast=[true], build=[right]): rowcount = 6773.1442875, cumulative cost = {1334816.0000375 rows, 5.606273608200001E7 cpu, 1.848348E7 io, 7245796.686 network, 2532438.934 memory}
         :  :           :           :  :  :  :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 6649.29525, cumulative cost = {994331.85575 rows, 5.5444642720000006E7 cpu, 1.232268E7 io, 7245772.686 network, 2160050.4 memory}
         :  :           :           :  :  :  :        +- Calc(select=[x, y0]): rowcount = 6649.29525, cumulative cost = {987682.5605 rows, 5.4380755480000004E7 cpu, 1.232268E7 io, 7086189.6 network, 2160050.4 memory}
         :  :           :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 6649.29525, cumulative cost = {981033.26525 rows, 5.4380755480000004E7 cpu, 1.232268E7 io, 7086189.6 network, 2160050.4 memory}
         :  :           :           :  :  :  :              :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :           :           :  :  :  :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :           :           :  :  :  :              :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :           :  :  :  :              :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :  :  :              :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :  :  :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 1004.4442875, cumulative cost = {989785.449075 rows, 5.444184584200001E7 cpu, 1.2323244E7 io, 7086753.6 network, 2161742.4 memory}
         :  :           :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 1004.4442875, cumulative cost = {988781.0047875 rows, 5.444184584200001E7 cpu, 1.2323244E7 io, 7086753.6 network, 2161742.4 memory}
         :  :           :           :  :  :        :- Calc(select=[x, y0]): rowcount = 6649.29525, cumulative cost = {987682.5605 rows, 5.4380755480000004E7 cpu, 1.232268E7 io, 7086189.6 network, 2160050.4 memory}
         :  :           :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 6649.29525, cumulative cost = {981033.26525 rows, 5.4380755480000004E7 cpu, 1.232268E7 io, 7086189.6 network, 2160050.4 memory}
         :  :           :           :  :  :        :     :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :           :           :  :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :           :           :  :  :        :     :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :           :  :  :        :     :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :  :        :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :  :        :     :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  +- Calc(select=[X0, x AS X1]): rowcount = 11556.253159330126, cumulative cost = {1122872.054598282 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :           :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 11556.253159330126, cumulative cost = {1111315.8014389519 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :           :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :           :  :        :  +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 38529.787728867515, cumulative cost = {727430.8482796218 rows, 9455796.595825966 cpu, 1.2324192E7 io, 955893.1862369755 network, 149706.05411241902 memory}
         :  :           :           :  :           +- Calc(select=[x, X0]): rowcount = 38529.787728867515, cumulative cost = {688901.0605507543 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :           :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.787728867515, cumulative cost = {650371.2728218868 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :           :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :  :           :           :  :                    +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :           :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :           :           :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :  :           :           :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :  :           :           :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :  :           :           :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :  :           :           :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :           :           :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :           :           :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :           :           :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :           :           :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[y01 AS X0, x AS X1]): rowcount = 7639.461, cumulative cost = {1777021.0420000001 rows, 7.149566792E7 cpu, 2.4643716E7 io, 9370390.56 network, 5009707.04 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y01], isBroadcast=[true], build=[right]): rowcount = 7639.461, cumulative cost = {1769381.5810000002 rows, 7.149566792E7 cpu, 2.4643716E7 io, 9370390.56 network, 5009707.04 memory}
         :  :           :           :        :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[broadcast]): rowcount = 12417.84, cumulative cost = {1427925.32 rows, 6.9026742E7 cpu, 1.8482376E7 io, 9369826.56 network, 4312616.0 memory}
         :  :           :           :           +- Calc(select=[x0, y0 AS y01]): rowcount = 12417.84, cumulative cost = {1415507.48 rows, 6.7039887599999994E7 cpu, 1.8482376E7 io, 9071798.4 network, 4312616.0 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 12417.84, cumulative cost = {1403089.64 rows, 6.7039887599999994E7 cpu, 1.8482376E7 io, 9071798.4 network, 4312616.0 memory}
         :  :           :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :  :           :           :                 :  +- Calc(select=[y, x0]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :           :                 :        :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :           :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :        +- Exchange(distribution=[hash[y0]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :           :           :                 :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :           :           :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7509.665249999999, cumulative cost = {1128038.4355000004 rows, 2.018373048E7 cpu, 1.848348E7 io, 2126818.44 network, 2806633.96 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], isBroadcast=[true], build=[right]): rowcount = 7509.665249999999, cumulative cost = {1120528.7702500003 rows, 2.018373048E7 cpu, 1.848348E7 io, 2126818.44 network, 2806633.96 memory}
         :  :           :                 :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[broadcast]): rowcount = 11552.534999999998, cumulative cost = {779202.3050000002 rows, 1.7721727E7 cpu, 1.232214E7 io, 2126254.44 network, 2158000.0 memory}
         :  :           :                    +- Calc(select=[x, y0 AS y00]): rowcount = 11552.534999999998, cumulative cost = {767649.7700000001 rows, 1.5873321399999999E7 cpu, 1.232214E7 io, 1848993.6 network, 2158000.0 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 11552.534999999998, cumulative cost = {756097.2350000001 rows, 1.5873321399999999E7 cpu, 1.232214E7 io, 1848993.6 network, 2158000.0 memory}
         :  :           :                          :- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :                          :  +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                          :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                          :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                          :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :                          :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :           :                             +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 6535.004668643184, cumulative cost = {1.0508232171862653E7 rows, 2.7001809388849425E8 cpu, 1.54036008E8 io, 3.2373179682792183E7 network, 2.1036248550696008E7 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right]): rowcount = 6535.004668643184, cumulative cost = {1.0501697167194009E7 rows, 2.7001809388849425E8 cpu, 1.54036008E8 io, 3.2373179682792183E7 network, 2.1036248550696008E7 memory}
         :        :- Calc(select=[y, X0]): rowcount = 38571.66183917392, cumulative cost = {2854656.7027530978 rows, 6.310584357719075E7 cpu, 4.3131252E7 io, 7552459.564062622 network, 4588042.9540184615 memory}
         :        :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38571.66183917392, cumulative cost = {2816085.0409139236 rows, 6.310584357719075E7 cpu, 4.3131252E7 io, 7552459.564062622 network, 4588042.9540184615 memory}
         :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :     +- Exchange(distribution=[broadcast]): rowcount = 445.4122611594813, cumulative cost = {2520814.3790747495 rows, 6.1048688279101476E7 cpu, 3.6970476E7 io, 7552459.564062622 network, 4563099.867393531 memory}
         :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2520368.96681359 rows, 6.097742231731596E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4563099.867393531 memory}
         :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.4122611594813, cumulative cost = {2519923.5545524303 rows, 6.0970295721137404E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4534593.482679324 memory}
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2519478.1422912707 rows, 6.089190316317333E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4534593.482679324 memory}
         :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 2457.186029746663, cumulative cost = {2519032.730030111 rows, 6.0852588186697386E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4506087.097965118 memory}
         :        :                    :- Calc(select=[X0, X00 AS X1]): rowcount = 182.3404327501608, cumulative cost = {715587.3151934725 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.3404327501608, cumulative cost = {715404.9747607224 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :        :                    :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :        :                    :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :        :                    :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :        :                    :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :        :                    :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 164.53128364844173, cumulative cost = {360718.2195239143 rows, 644389.2502483395 cpu, 6162684.0 io, 29805.75619131328 network, 136188.02871333694 memory}
         :        :                    :        +- Calc(select=[X0, X1]): rowcount = 164.53128364844173, cumulative cost = {360553.6882402658 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :        :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 164.53128364844173, cumulative cost = {360389.1569566174 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :        :                    :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                    :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                    :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                    :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                    :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                    :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    +- Calc(select=[X0, X00 AS X1]): rowcount = 2274.845596996502, cumulative cost = {1800988.228806892 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 2274.845596996502, cumulative cost = {1798713.3832098953 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :        :                          :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                          :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 157.63128364844172, cumulative cost = {360605.5195239142 rows, 628200.1236780789 cpu, 6162144.0 io, 29100.15619131328 network, 134524.02871333694 memory}
         :        :                             +- Calc(select=[X0, x]): rowcount = 157.63128364844172, cumulative cost = {360447.8882402658 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 157.63128364844172, cumulative cost = {360290.25695661735 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 4995.03595178064, cumulative cost = {7640505.459772268 rows, 2.0656371672897586E8 cpu, 1.10904756E8 io, 2.482072011872956E7 network, 1.616848358337783E7 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4995.03595178064, cumulative cost = {7635510.423820487 rows, 2.0576451097669095E8 cpu, 1.10904756E8 io, 2.4700839255886827E7 network, 1.616848358337783E7 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4995.03595178064, cumulative cost = {7630515.387868706 rows, 2.0568459040146247E8 cpu, 1.10904756E8 io, 2.4700839255886827E7 network, 1.584880128246387E7 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4995.03595178064, cumulative cost = {7625520.351916925 rows, 2.0480546407394907E8 cpu, 1.10904756E8 io, 2.458095839304409E7 network, 1.584880128246387E7 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 27555.892886395115, cumulative cost = {7620525.315965144 rows, 2.0436456978776675E8 cpu, 1.10904756E8 io, 2.458095839304409E7 network, 1.5529118981549907E7 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 21441.40525072773, cumulative cost = {5804334.577005082 rows, 1.430090695792082E8 cpu, 8.6260356E7 io, 1.7080541826625433E7 network, 1.1321938559104068E7 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 9839.272355377621, cumulative cost = {3571657.17725432 rows, 6.810564679440786E7 cpu, 5.545572E7 io, 7724323.996950755 network, 4960142.13665823 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 8942.055494347187, cumulative cost = {2858688.293291065 rows, 6.4612747179643914E7 cpu, 4.3131204E7 io, 7671592.560085828 network, 4759948.962009346 memory}
         :                       :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :                       :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :                       :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                       :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                       :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                       :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                       :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :                       :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :                       :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :                       :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :                       :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :                       :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :                       :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :                       :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6665.916861030434, cumulative cost = {1054218.4573480804 rows, 4989574.660841034 cpu, 1.8484752E7 io, 194618.13462979574 network, 530858.1361002461 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], isBroadcast=[true], build=[right]): rowcount = 6665.916861030434, cumulative cost = {1047552.5404870498 rows, 4989574.660841034 cpu, 1.8484752E7 io, 194618.13462979574 network, 530858.1361002461 memory}
         :                       :  :  :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 5934.445740202895, cumulative cost = {707175.6236260193 rows, 4377200.0949194105 cpu, 1.2323952E7 io, 194594.13462979574 network, 198501.17464888399 memory}
         :                       :  :  :           +- Calc(select=[y, X0]): rowcount = 5934.445740202895, cumulative cost = {701241.1778858164 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 5934.445740202895, cumulative cost = {695306.7321456135 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
         :                       :  :  :                 :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
         :                       :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :                       :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :                       :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :                       :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :                       :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y AS X1]): rowcount = 897.2168610304342, cumulative cost = {703129.6116078773 rows, 3483060.3424085705 cpu, 1.2324516E7 io, 52731.436864926254 network, 200193.17464888399 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 897.2168610304342, cumulative cost = {702232.3947468469 rows, 3483060.3424085705 cpu, 1.2324516E7 io, 52731.436864926254 network, 200193.17464888399 memory}
         :                       :  :        :- Calc(select=[y, X0]): rowcount = 5934.445740202895, cumulative cost = {701241.1778858164 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 5934.445740202895, cumulative cost = {695306.7321456135 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
         :                       :  :        :     :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
         :                       :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :                       :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :                       :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :                       :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :                       :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 11602.132895350107, cumulative cost = {2211235.994500034 rows, 7.488198137954961E7 cpu, 3.0804636E7 io, 9356217.829674678 network, 6361796.422445838 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 11602.132895350107, cumulative cost = {2199633.861604684 rows, 7.488198137954961E7 cpu, 3.0804636E7 io, 9356217.829674678 network, 6361796.422445838 memory}
         :                       :        :- Exchange(distribution=[hash[y]]): rowcount = 38842.55263566739, cumulative cost = {1815815.728709334 rows, 6.753750195846426E7 cpu, 2.4643836E7 io, 8432073.829674678 network, 4205488.422445838 memory}
         :                       :        :  +- Calc(select=[y, X1]): rowcount = 38842.55263566739, cumulative cost = {1776973.1760736667 rows, 6.101195311567215E7 cpu, 2.4643836E7 io, 7499852.56641866 network, 4205488.422445838 memory}
         :                       :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 38842.55263566739, cumulative cost = {1738130.6234379993 rows, 6.101195311567215E7 cpu, 2.4643836E7 io, 7499852.56641866 network, 4205488.422445838 memory}
         :                       :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442589.070802332 rows, 5.894035030843656E7 cpu, 1.848306E7 io, 7499852.56641866 network, 4079412.771796681 memory}
         :                       :        :           +- Calc(select=[X1, y]): rowcount = 2251.350904449236, cumulative cost = {1440337.7198978828 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
         :                       :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438086.3689934337 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
         :                       :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                       :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                       :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                       :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                       :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :        :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 6114.487635667386, cumulative cost = {1788634.8460736668 rows, 6.132794431567215E7 cpu, 2.46444E7 io, 7500416.56641866 network, 4207180.422445838 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 6114.487635667386, cumulative cost = {1782520.3584379994 rows, 6.132794431567215E7 cpu, 2.46444E7 io, 7500416.56641866 network, 4207180.422445838 memory}
         :                             :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                             :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                             :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442589.070802332 rows, 5.894035030843656E7 cpu, 1.848306E7 io, 7499852.56641866 network, 4079412.771796681 memory}
         :                                +- Calc(select=[X1, y]): rowcount = 2251.350904449236, cumulative cost = {1440337.7198978828 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438086.3689934337 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                                      :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 180.49362694862387, cumulative cost = {1.0147114617547287E7 rows, 2.6742354084992665E8 cpu, 1.47876012E8 io, 3.2255705633274823E7 network, 2.076497579220018E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 180.49362694862387, cumulative cost = {1.0146934123920338E7 rows, 2.6742354084992665E8 cpu, 1.47876012E8 io, 3.2255705633274823E7 network, 2.076497579220018E7 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 445.48545355706335, cumulative cost = {2509613.5956873684 rows, 6.159986725885085E7 cpu, 3.6970572E7 io, 7554182.377387997 network, 4569493.023423157 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2509168.110233811 rows, 6.152858958628172E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4569493.023423157 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.48545355706335, cumulative cost = {2508722.624780254 rows, 6.15214618190248E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4540981.954395505 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2508277.1393266967 rows, 6.144305637919876E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4540981.954395505 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2457.589806994182, cumulative cost = {2507831.6538731395 rows, 6.140373494228686E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4512470.885367853 memory}
               :              :- Calc(select=[X0, X10 AS X1]): rowcount = 2275.047485620262, cumulative cost = {1795387.4888397823 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2275.047485620262, cumulative cost = {1793112.441354162 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :              :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :              :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :              :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :              :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :              :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 158.97720780683773, cumulative cost = {355004.37577955716 rows, 903731.127293892 cpu, 6162192.0 io, 29959.80623645814 network, 137640.55066183486 memory}
               :              :        +- Calc(select=[X1, x]): rowcount = 158.97720780683773, cumulative cost = {354845.3985717503 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 158.97720780683773, cumulative cost = {354686.4213639435 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :              :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :              :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :              :              :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :              :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :              :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, X10 AS X1]): rowcount = 182.5423213739202, cumulative cost = {709986.575226363 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.5423213739202, cumulative cost = {709804.0329049891 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
               :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
               :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
               :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
               :                    :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                    :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                    :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                    :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                    :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 165.87720780683773, cumulative cost = {355117.0757795572 rows, 919983.063658211 cpu, 6162732.0 io, 30665.40623645814 network, 139304.55066183486 memory}
               :                       +- Calc(select=[X0, X1]): rowcount = 165.87720780683773, cumulative cost = {354951.19857175037 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.87720780683773, cumulative cost = {354785.3213639435 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :                             :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                             :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                             :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                             :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[X0, X1]): rowcount = 757.805392767096, cumulative cost = {7637140.034606022 rows, 2.058140472643052E8 cpu, 1.1090544E8 io, 2.4701523255886827E7 network, 1.617053558337783E7 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 757.805392767096, cumulative cost = {7636382.2292132545 rows, 2.058140472643052E8 cpu, 1.1090544E8 io, 2.4701523255886827E7 network, 1.617053558337783E7 memory}
                     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4995.03595178064, cumulative cost = {7635510.423820487 rows, 2.0576451097669095E8 cpu, 1.10904756E8 io, 2.4700839255886827E7 network, 1.616848358337783E7 memory}
                     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4995.03595178064, cumulative cost = {7630515.387868706 rows, 2.0568459040146247E8 cpu, 1.10904756E8 io, 2.4700839255886827E7 network, 1.584880128246387E7 memory}
                     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4995.03595178064, cumulative cost = {7625520.351916925 rows, 2.0480546407394907E8 cpu, 1.10904756E8 io, 2.458095839304409E7 network, 1.584880128246387E7 memory}
                     :        +- Union(all=[true], union=[X0, X1]): rowcount = 27555.892886395115, cumulative cost = {7620525.315965144 rows, 2.0436456978776675E8 cpu, 1.10904756E8 io, 2.458095839304409E7 network, 1.5529118981549907E7 memory}
                     :           :- Union(all=[true], union=[X0, X1]): rowcount = 21441.40525072773, cumulative cost = {5804334.577005082 rows, 1.430090695792082E8 cpu, 8.6260356E7 io, 1.7080541826625433E7 network, 1.1321938559104068E7 memory}
                     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 9839.272355377621, cumulative cost = {3571657.17725432 rows, 6.810564679440786E7 cpu, 5.545572E7 io, 7724323.996950755 network, 4960142.13665823 memory}
                     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 8942.055494347187, cumulative cost = {2858688.293291065 rows, 6.4612747179643914E7 cpu, 4.3131204E7 io, 7671592.560085828 network, 4759948.962009346 memory}
                     :           :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                     :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                     :           :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                     :           :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                     :           :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                     :           :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                     :           :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :           :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :           :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                     :           :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :           :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :           :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :           :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                     :           :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
                     :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                     :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                     :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
                     :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
                     :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
                     :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
                     :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                     :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                     :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                     :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                     :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6665.916861030434, cumulative cost = {1054218.4573480804 rows, 4989574.660841034 cpu, 1.8484752E7 io, 194618.13462979574 network, 530858.1361002461 memory}
                     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], isBroadcast=[true], build=[right]): rowcount = 6665.916861030434, cumulative cost = {1047552.5404870498 rows, 4989574.660841034 cpu, 1.8484752E7 io, 194618.13462979574 network, 530858.1361002461 memory}
                     :           :  :  :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 5934.445740202895, cumulative cost = {707175.6236260193 rows, 4377200.0949194105 cpu, 1.2323952E7 io, 194594.13462979574 network, 198501.17464888399 memory}
                     :           :  :  :           +- Calc(select=[y, X0]): rowcount = 5934.445740202895, cumulative cost = {701241.1778858164 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
                     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 5934.445740202895, cumulative cost = {695306.7321456135 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
                     :           :  :  :                 :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
                     :           :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
                     :           :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
                     :           :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
                     :           :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
                     :           :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                     :           :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                     :           :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :  +- Calc(select=[X0, y AS X1]): rowcount = 897.2168610304342, cumulative cost = {703129.6116078773 rows, 3483060.3424085705 cpu, 1.2324516E7 io, 52731.436864926254 network, 200193.17464888399 memory}
                     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 897.2168610304342, cumulative cost = {702232.3947468469 rows, 3483060.3424085705 cpu, 1.2324516E7 io, 52731.436864926254 network, 200193.17464888399 memory}
                     :           :  :        :- Calc(select=[y, X0]): rowcount = 5934.445740202895, cumulative cost = {701241.1778858164 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
                     :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 5934.445740202895, cumulative cost = {695306.7321456135 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
                     :           :  :        :     :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :           :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :           :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
                     :           :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
                     :           :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
                     :           :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
                     :           :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
                     :           :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                     :           :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                     :           :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 11602.132895350107, cumulative cost = {2211235.994500034 rows, 7.488198137954961E7 cpu, 3.0804636E7 io, 9356217.829674678 network, 6361796.422445838 memory}
                     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 11602.132895350107, cumulative cost = {2199633.861604684 rows, 7.488198137954961E7 cpu, 3.0804636E7 io, 9356217.829674678 network, 6361796.422445838 memory}
                     :           :        :- Exchange(distribution=[hash[y]]): rowcount = 38842.55263566739, cumulative cost = {1815815.728709334 rows, 6.753750195846426E7 cpu, 2.4643836E7 io, 8432073.829674678 network, 4205488.422445838 memory}
                     :           :        :  +- Calc(select=[y, X1]): rowcount = 38842.55263566739, cumulative cost = {1776973.1760736667 rows, 6.101195311567215E7 cpu, 2.4643836E7 io, 7499852.56641866 network, 4205488.422445838 memory}
                     :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 38842.55263566739, cumulative cost = {1738130.6234379993 rows, 6.101195311567215E7 cpu, 2.4643836E7 io, 7499852.56641866 network, 4205488.422445838 memory}
                     :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442589.070802332 rows, 5.894035030843656E7 cpu, 1.848306E7 io, 7499852.56641866 network, 4079412.771796681 memory}
                     :           :        :           +- Calc(select=[X1, y]): rowcount = 2251.350904449236, cumulative cost = {1440337.7198978828 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
                     :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438086.3689934337 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
                     :           :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                     :           :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                     :           :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                     :           :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                     :           :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :           :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :           :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                     :           :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :           :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :           :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :           :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                     :           :        :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                     :           :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 6114.487635667386, cumulative cost = {1788634.8460736668 rows, 6.132794431567215E7 cpu, 2.46444E7 io, 7500416.56641866 network, 4207180.422445838 memory}
                     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 6114.487635667386, cumulative cost = {1782520.3584379994 rows, 6.132794431567215E7 cpu, 2.46444E7 io, 7500416.56641866 network, 4207180.422445838 memory}
                     :                 :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :                 +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442589.070802332 rows, 5.894035030843656E7 cpu, 1.848306E7 io, 7499852.56641866 network, 4079412.771796681 memory}
                     :                    +- Calc(select=[X1, y]): rowcount = 2251.350904449236, cumulative cost = {1440337.7198978828 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
                     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438086.3689934337 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
                     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                     :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                     :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                     :                          :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,1,1,0,0,2,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#9] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right])\n:        :- Calc(select=[y, X0])\n:        :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:        :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        :     +- [#2] Exchange(distribution=[broadcast])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[X0, X1])\n         +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n            :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n            +- [#5] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[10])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[12])
         :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[2])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[13])
         :              :                 :- Exchange(distribution=[hash[x]])(reuse_id=[26])
         :              :                 :  +- Reused(reference_id=[1])
         :              :                 +- Exchange(distribution=[hash[y]])
         :              :                    +- Calc(select=[y, x0])(reuse_id=[3])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :              :                          :- Reused(reference_id=[1])
         :              :                          +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X1, x])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[x AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[2])
         :              :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :        :                 :- Reused(reference_id=[3])
         :              :        :                 +- Reused(reference_id=[4])
         :              :        +- Reused(reference_id=[5])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[16])
         :              :           :     :- Reused(reference_id=[2])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[6])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[9])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = y)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[15])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[6])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, X1])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[7])
         :                       +- Reused(reference_id=[6])
         :- Exchange(distribution=[broadcast])(reuse_id=[22])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- Reused(reference_id=[8])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[9])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[3])
         :              :        :           +- Reused(reference_id=[5])
         :              :        +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[11])
         :                       +- Reused(reference_id=[5])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[2,1,1,0,1,0,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, y, X0], isBroadcast=[true], build=[right])\n:  :  :        :- [#9] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :        +- [#10] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, y AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[y, X0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X1 AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X1, x, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right])\n      :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Calc(select=[x, y])(reuse_id=[23])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[6])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[14])
         :              :  +- Calc(select=[X1, y])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[12])
         :              :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :        :              +- Reused(reference_id=[13])
         :              :        +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]])
         :              :  +- Calc(select=[y, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[14])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[25])
         :              :  +- Calc(select=[x, y0])(reuse_id=[18])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[5])
         :              :- Calc(select=[y, X0])(reuse_id=[20])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :     :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :     :  +- Calc(select=[x, y])(reuse_id=[24])
         :              :     :     +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :     :        :- Reused(reference_id=[1])
         :              :     :        +- Reused(reference_id=[6])
         :              :     +- Exchange(distribution=[broadcast])
         :              :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :              :           +- Exchange(distribution=[hash[X0, X1]])
         :              :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 +- Union(all=[true], union=[X0, X1])
         :              :                    :- Calc(select=[x0 AS X0, x AS X1])
         :              :                    :  +- Reused(reference_id=[15])
         :              :                    +- Calc(select=[x AS X0, x AS X1])(reuse_id=[19])
         :              :                       +- Reused(reference_id=[16])
         :              :- Reused(reference_id=[6])
         :              :- Reused(reference_id=[17])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[28])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[18])
         :              :                 :     +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[19])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[18])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Reused(reference_id=[20])
         :- Reused(reference_id=[21])
         :- Reused(reference_id=[4])
         :- Reused(reference_id=[6])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Reused(reference_id=[22])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,0,1,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[y0 AS X0, x0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, x0, y00], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[y0 AS X0, x AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :- Calc(select=[x, y0])\n:  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :     :- [#10] Calc(select=[x, y0])\n:  :  :        :     +- [#9] Exchange(distribution=[broadcast])\n:  :  :        +- [#9] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, x AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:  :        :- [#5] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[y01 AS X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y01], isBroadcast=[true], build=[right])\n:        :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], isBroadcast=[true], build=[right])\n      :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#2] Exchange(distribution=[broadcast])\n])
                  :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :  +- Reused(reference_id=[23])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[x, y0 AS y00])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])(reuse_id=[27])
                  :        :  +- Reused(reference_id=[24])
                  :        +- Reused(reference_id=[25])
                  :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :  +- Reused(reference_id=[24])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[x0, y0 AS y01])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])
                  :        :  +- Calc(select=[y, x0])
                  :        :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
                  :        :        :- Reused(reference_id=[26])
                  :        :        +- Exchange(distribution=[hash[y0]])
                  :        :           +- Reused(reference_id=[18])
                  :        +- Reused(reference_id=[25])
                  :- Reused(reference_id=[27])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[28])
                  :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :  +- Reused(reference_id=[18])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[x, y0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
                  :        :- Calc(select=[x, y0])(reuse_id=[29])
                  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :     :- Exchange(distribution=[hash[y]])
                  :        :     :  +- Reused(reference_id=[1])
                  :        :     +- Exchange(distribution=[hash[x]])
                  :        :        +- Reused(reference_id=[24])
                  :        +- Reused(reference_id=[6])
                  :- Reused(reference_id=[6])
                  :- Reused(reference_id=[29])
                  +- Reused(reference_id=[6])

Job has been submitted with JobID 28e4532fa9fb051c6792350f817d3c3e
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 95d05cb0_2485_4888_93e1_66cf1dc43840

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalUnion(all=[false])
   :  :        :  :  :- LogicalUnion(all=[false])
   :  :        :  :  :  :- LogicalProject(X0=[$9], X1=[$1])
   :  :        :  :  :  :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :  :  :  :     :- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :  :     :  :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :  :     :  :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  :     +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :        :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :  :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :        :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$11], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $12)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($9, $10)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $9)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalUnion(all=[false])
   :           :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
   :           :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :           :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :  +- LogicalUnion(all=[false])
   :           :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalUnion(all=[false])
   :           :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$9])
   :           :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :           :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :- LogicalUnion(all=[false])
   :           :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :           :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :           :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :- LogicalUnion(all=[false])
   :                 :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalUnion(all=[false])
            :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     +- LogicalUnion(all=[false])
            :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
            :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
            :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :  +- LogicalUnion(all=[false])
            :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  +- LogicalProject(X0=[$1], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalUnion(all=[false])
            :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$9])
            :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
            :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :- LogicalUnion(all=[false])
            :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
            :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
            :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
                  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :- LogicalUnion(all=[false])
                  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1255.1097922695362, cumulative cost = {2.966262028326205E7 rows, 8.215528054337207E8 cpu, 4.31302512E8 io, 1.000725504266968E8 network, 6.217028994812149E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 1255.1097922695362, cumulative cost = {2.9661365173469782E7 rows, 8.215327236770444E8 cpu, 4.31302512E8 io, 1.000725504266968E8 network, 6.208996292141624E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1255.1097922695362, cumulative cost = {2.9660110063677512E7 rows, 8.213118243536049E8 cpu, 4.31302512E8 io, 1.0004242779168233E8 network, 6.208996292141624E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 6924.008421624231, cumulative cost = {2.9658854953885242E7 rows, 8.21201040218859E8 cpu, 4.31302512E8 io, 1.0004242779168233E8 network, 6.200963589471099E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 6743.514794675607, cumulative cost = {1.9504816327916328E7 rows, 5.537705753605107E8 cpu, 2.834265E8 io, 6.778672215840751E7 network, 4.124466010251081E7 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 208.51012603242285, cumulative cost = {8989840.641259 rows, 2.837457379572218E8 cpu, 1.29390492E8 io, 3.541354247561533E7 network, 2.02084115518148E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 208.51012603242285, cumulative cost = {8989632.131132968 rows, 2.837457379572218E8 cpu, 1.29390492E8 io, 3.541354247561533E7 network, 2.02084115518148E7 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 445.4122611594813, cumulative cost = {2520814.3790747495 rows, 6.1048688279101476E7 cpu, 3.6970476E7 io, 7552459.564062622 network, 4563099.867393531 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2520368.96681359 rows, 6.097742231731596E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4563099.867393531 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.4122611594813, cumulative cost = {2519923.5545524303 rows, 6.0970295721137404E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4534593.482679324 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2519478.1422912707 rows, 6.089190316317333E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4534593.482679324 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2457.186029746663, cumulative cost = {2519032.730030111 rows, 6.0852588186697386E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4506087.097965118 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 182.3404327501608, cumulative cost = {715587.3151934725 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.3404327501608, cumulative cost = {715404.9747607224 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 164.53128364844173, cumulative cost = {360718.2195239143 rows, 644389.2502483395 cpu, 6162684.0 io, 29805.75619131328 network, 136188.02871333694 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 164.53128364844173, cumulative cost = {360553.6882402658 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 164.53128364844173, cumulative cost = {360389.1569566174 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 2274.845596996502, cumulative cost = {1800988.228806892 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 2274.845596996502, cumulative cost = {1798713.3832098953 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 157.63128364844172, cumulative cost = {360605.5195239142 rows, 628200.1236780789 cpu, 6162144.0 io, 29100.15619131328 network, 134524.02871333694 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 157.63128364844172, cumulative cost = {360447.8882402658 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 157.63128364844172, cumulative cost = {360290.25695661735 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 944.6552457233377, cumulative cost = {6468609.241932186 rows, 2.2268592913806528E8 cpu, 9.2420016E7 io, 2.786108291155271E7 network, 1.5620368597796336E7 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 944.6552457233377, cumulative cost = {6467664.586686463 rows, 2.2268592913806528E8 cpu, 9.2420016E7 io, 2.786108291155271E7 network, 1.5620368597796336E7 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6250.701638155585, cumulative cost = {6466625.93144074 rows, 2.2262802752496004E8 cpu, 9.2419452E7 io, 2.786051891155271E7 network, 1.5618676597796336E7 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6250.701638155585, cumulative cost = {6460375.229802584 rows, 2.2252801629874957E8 cpu, 9.2419452E7 io, 2.786051891155271E7 network, 1.5218631692954378E7 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6250.701638155585, cumulative cost = {6454124.528164429 rows, 2.214278928104342E8 cpu, 9.2419452E7 io, 2.7710502072236974E7 network, 1.5218631692954378E7 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 34482.96798433013, cumulative cost = {6447873.826526273 rows, 2.208761653226849E8 cpu, 9.2419452E7 io, 2.7710502072236974E7 network, 1.481858678811242E7 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 26973.302734330126, cumulative cost = {5285352.4230419425 rows, 2.006579518747006E8 cpu, 7.3935972E7 io, 2.5583683632236972E7 network, 1.201195282811242E7 memory}
         :  :           :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 19333.841734330126, cumulative cost = {3481358.0783076123 rows, 1.2913531065196626E8 cpu, 4.9292256E7 io, 1.6213293072236974E7 network, 7002245.788112419 memory}
         :  :           :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 7777.588575, cumulative cost = {2339152.181975 rows, 1.1051235951257502E8 cpu, 3.0806724E7 io, 1.4332550285999998E7 network, 4694181.334 memory}
         :  :           :           :  :  :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 6773.1442875, cumulative cost = {1341589.144325 rows, 5.606273608200001E7 cpu, 1.848348E7 io, 7245796.686 network, 2532438.934 memory}
         :  :           :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, x0, y00], isBroadcast=[true], build=[right]): rowcount = 6773.1442875, cumulative cost = {1334816.0000375 rows, 5.606273608200001E7 cpu, 1.848348E7 io, 7245796.686 network, 2532438.934 memory}
         :  :           :           :  :  :  :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 6649.29525, cumulative cost = {994331.85575 rows, 5.5444642720000006E7 cpu, 1.232268E7 io, 7245772.686 network, 2160050.4 memory}
         :  :           :           :  :  :  :        +- Calc(select=[x, y0]): rowcount = 6649.29525, cumulative cost = {987682.5605 rows, 5.4380755480000004E7 cpu, 1.232268E7 io, 7086189.6 network, 2160050.4 memory}
         :  :           :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 6649.29525, cumulative cost = {981033.26525 rows, 5.4380755480000004E7 cpu, 1.232268E7 io, 7086189.6 network, 2160050.4 memory}
         :  :           :           :  :  :  :              :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :           :           :  :  :  :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :           :           :  :  :  :              :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :           :  :  :  :              :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :  :  :              :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :  :  :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 1004.4442875, cumulative cost = {989785.449075 rows, 5.444184584200001E7 cpu, 1.2323244E7 io, 7086753.6 network, 2161742.4 memory}
         :  :           :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 1004.4442875, cumulative cost = {988781.0047875 rows, 5.444184584200001E7 cpu, 1.2323244E7 io, 7086753.6 network, 2161742.4 memory}
         :  :           :           :  :  :        :- Calc(select=[x, y0]): rowcount = 6649.29525, cumulative cost = {987682.5605 rows, 5.4380755480000004E7 cpu, 1.232268E7 io, 7086189.6 network, 2160050.4 memory}
         :  :           :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 6649.29525, cumulative cost = {981033.26525 rows, 5.4380755480000004E7 cpu, 1.232268E7 io, 7086189.6 network, 2160050.4 memory}
         :  :           :           :  :  :        :     :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :           :           :  :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :           :           :  :  :        :     :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :           :  :  :        :     :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :  :        :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :  :        :     :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  +- Calc(select=[X0, x AS X1]): rowcount = 11556.253159330126, cumulative cost = {1122872.054598282 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :           :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 11556.253159330126, cumulative cost = {1111315.8014389519 rows, 1.8603617297656905E7 cpu, 1.8485532E7 io, 1880742.7862369756 network, 2308064.454112419 memory}
         :  :           :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :           :  :        :  +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 38529.787728867515, cumulative cost = {727430.8482796218 rows, 9455796.595825966 cpu, 1.2324192E7 io, 955893.1862369755 network, 149706.05411241902 memory}
         :  :           :           :  :           +- Calc(select=[x, X0]): rowcount = 38529.787728867515, cumulative cost = {688901.0605507543 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :           :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.787728867515, cumulative cost = {650371.2728218868 rows, 2982792.257376223 cpu, 1.2324192E7 io, 31178.28074415517 network, 149706.05411241902 memory}
         :  :           :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :  :           :           :  :                    +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :           :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :  :           :           :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :  :           :           :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :  :           :           :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :  :           :           :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :  :           :           :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :           :           :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :           :           :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :           :           :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :  :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :  :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :           :           :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[y01 AS X0, x AS X1]): rowcount = 7639.461, cumulative cost = {1777021.0420000001 rows, 7.149566792E7 cpu, 2.4643716E7 io, 9370390.56 network, 5009707.04 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y01], isBroadcast=[true], build=[right]): rowcount = 7639.461, cumulative cost = {1769381.5810000002 rows, 7.149566792E7 cpu, 2.4643716E7 io, 9370390.56 network, 5009707.04 memory}
         :  :           :           :        :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[broadcast]): rowcount = 12417.84, cumulative cost = {1427925.32 rows, 6.9026742E7 cpu, 1.8482376E7 io, 9369826.56 network, 4312616.0 memory}
         :  :           :           :           +- Calc(select=[x0, y0 AS y01]): rowcount = 12417.84, cumulative cost = {1415507.48 rows, 6.7039887599999994E7 cpu, 1.8482376E7 io, 9071798.4 network, 4312616.0 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 12417.84, cumulative cost = {1403089.64 rows, 6.7039887599999994E7 cpu, 1.8482376E7 io, 9071798.4 network, 4312616.0 memory}
         :  :           :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :  :           :           :                 :  +- Calc(select=[y, x0]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :           :           :                 :        :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :           :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :        +- Exchange(distribution=[hash[y0]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :           :           :                 :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :           :           :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7509.665249999999, cumulative cost = {1128038.4355000004 rows, 2.018373048E7 cpu, 1.848348E7 io, 2126818.44 network, 2806633.96 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], isBroadcast=[true], build=[right]): rowcount = 7509.665249999999, cumulative cost = {1120528.7702500003 rows, 2.018373048E7 cpu, 1.848348E7 io, 2126818.44 network, 2806633.96 memory}
         :  :           :                 :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                 :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[broadcast]): rowcount = 11552.534999999998, cumulative cost = {779202.3050000002 rows, 1.7721727E7 cpu, 1.232214E7 io, 2126254.44 network, 2158000.0 memory}
         :  :           :                    +- Calc(select=[x, y0 AS y00]): rowcount = 11552.534999999998, cumulative cost = {767649.7700000001 rows, 1.5873321399999999E7 cpu, 1.232214E7 io, 1848993.6 network, 2158000.0 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 11552.534999999998, cumulative cost = {756097.2350000001 rows, 1.5873321399999999E7 cpu, 1.232214E7 io, 1848993.6 network, 2158000.0 memory}
         :  :           :                          :- Exchange(distribution=[hash[y]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :           :                          :  +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                          :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :           :                          :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                          :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :           :                          :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :           :                             +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 6535.004668643184, cumulative cost = {1.0508232171862653E7 rows, 2.7001809388849425E8 cpu, 1.54036008E8 io, 3.2373179682792183E7 network, 2.1036248550696008E7 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right]): rowcount = 6535.004668643184, cumulative cost = {1.0501697167194009E7 rows, 2.7001809388849425E8 cpu, 1.54036008E8 io, 3.2373179682792183E7 network, 2.1036248550696008E7 memory}
         :        :- Calc(select=[y, X0]): rowcount = 38571.66183917392, cumulative cost = {2854656.7027530978 rows, 6.310584357719075E7 cpu, 4.3131252E7 io, 7552459.564062622 network, 4588042.9540184615 memory}
         :        :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38571.66183917392, cumulative cost = {2816085.0409139236 rows, 6.310584357719075E7 cpu, 4.3131252E7 io, 7552459.564062622 network, 4588042.9540184615 memory}
         :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :     +- Exchange(distribution=[broadcast]): rowcount = 445.4122611594813, cumulative cost = {2520814.3790747495 rows, 6.1048688279101476E7 cpu, 3.6970476E7 io, 7552459.564062622 network, 4563099.867393531 memory}
         :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2520368.96681359 rows, 6.097742231731596E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4563099.867393531 memory}
         :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.4122611594813, cumulative cost = {2519923.5545524303 rows, 6.0970295721137404E7 cpu, 3.6970476E7 io, 7541769.669794795 network, 4534593.482679324 memory}
         :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.4122611594813, cumulative cost = {2519478.1422912707 rows, 6.089190316317333E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4534593.482679324 memory}
         :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 2457.186029746663, cumulative cost = {2519032.730030111 rows, 6.0852588186697386E7 cpu, 3.6970476E7 io, 7531079.775526968 network, 4506087.097965118 memory}
         :        :                    :- Calc(select=[X0, X00 AS X1]): rowcount = 182.3404327501608, cumulative cost = {715587.3151934725 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.3404327501608, cumulative cost = {715404.9747607224 rows, 1535639.6207880531 cpu, 1.2325296E7 io, 56183.474623776405 network, 283350.94557078637 memory}
         :        :                    :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :        :                    :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :        :                    :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :        :                    :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :        :                    :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :        :                    :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :                    :     :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :     :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 164.53128364844173, cumulative cost = {360718.2195239143 rows, 644389.2502483395 cpu, 6162684.0 io, 29805.75619131328 network, 136188.02871333694 memory}
         :        :                    :        +- Calc(select=[X0, X1]): rowcount = 164.53128364844173, cumulative cost = {360553.6882402658 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :        :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 164.53128364844173, cumulative cost = {360389.1569566174 rows, 618064.2448645888 cpu, 6162684.0 io, 25857.00538375068 network, 136188.02871333694 memory}
         :        :                    :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                    :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                    :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                    :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                    :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                    :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                    :              :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                    :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                    :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                    :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                    +- Calc(select=[X0, X00 AS X1]): rowcount = 2274.845596996502, cumulative cost = {1800988.228806892 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 2274.845596996502, cumulative cost = {1798713.3832098953 rows, 5.931449137987959E7 cpu, 2.464518E7 io, 7474896.300903192 network, 4222736.152394331 memory}
         :        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :        :                          :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                          :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                          :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 157.63128364844172, cumulative cost = {360605.5195239142 rows, 628200.1236780789 cpu, 6162144.0 io, 29100.15619131328 network, 134524.02871333694 memory}
         :        :                             +- Calc(select=[X0, x]): rowcount = 157.63128364844172, cumulative cost = {360447.8882402658 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :        :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 157.63128364844172, cumulative cost = {360290.25695661735 rows, 602979.1182943282 cpu, 6162144.0 io, 25317.00538375068 network, 134524.02871333694 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :        :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 4995.03595178064, cumulative cost = {7640505.459772268 rows, 2.0656371672897586E8 cpu, 1.10904756E8 io, 2.482072011872956E7 network, 1.616848358337783E7 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4995.03595178064, cumulative cost = {7635510.423820487 rows, 2.0576451097669095E8 cpu, 1.10904756E8 io, 2.4700839255886827E7 network, 1.616848358337783E7 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4995.03595178064, cumulative cost = {7630515.387868706 rows, 2.0568459040146247E8 cpu, 1.10904756E8 io, 2.4700839255886827E7 network, 1.584880128246387E7 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4995.03595178064, cumulative cost = {7625520.351916925 rows, 2.0480546407394907E8 cpu, 1.10904756E8 io, 2.458095839304409E7 network, 1.584880128246387E7 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 27555.892886395115, cumulative cost = {7620525.315965144 rows, 2.0436456978776675E8 cpu, 1.10904756E8 io, 2.458095839304409E7 network, 1.5529118981549907E7 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 21441.40525072773, cumulative cost = {5804334.577005082 rows, 1.430090695792082E8 cpu, 8.6260356E7 io, 1.7080541826625433E7 network, 1.1321938559104068E7 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 9839.272355377621, cumulative cost = {3571657.17725432 rows, 6.810564679440786E7 cpu, 5.545572E7 io, 7724323.996950755 network, 4960142.13665823 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 8942.055494347187, cumulative cost = {2858688.293291065 rows, 6.4612747179643914E7 cpu, 4.3131204E7 io, 7671592.560085828 network, 4759948.962009346 memory}
         :                       :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :                       :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
         :                       :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                       :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                       :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                       :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                       :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
         :                       :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :                       :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
         :                       :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
         :                       :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
         :                       :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
         :                       :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
         :                       :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6665.916861030434, cumulative cost = {1054218.4573480804 rows, 4989574.660841034 cpu, 1.8484752E7 io, 194618.13462979574 network, 530858.1361002461 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], isBroadcast=[true], build=[right]): rowcount = 6665.916861030434, cumulative cost = {1047552.5404870498 rows, 4989574.660841034 cpu, 1.8484752E7 io, 194618.13462979574 network, 530858.1361002461 memory}
         :                       :  :  :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 5934.445740202895, cumulative cost = {707175.6236260193 rows, 4377200.0949194105 cpu, 1.2323952E7 io, 194594.13462979574 network, 198501.17464888399 memory}
         :                       :  :  :           +- Calc(select=[y, X0]): rowcount = 5934.445740202895, cumulative cost = {701241.1778858164 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 5934.445740202895, cumulative cost = {695306.7321456135 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
         :                       :  :  :                 :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
         :                       :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :                       :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :                       :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :                       :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :                       :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y AS X1]): rowcount = 897.2168610304342, cumulative cost = {703129.6116078773 rows, 3483060.3424085705 cpu, 1.2324516E7 io, 52731.436864926254 network, 200193.17464888399 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 897.2168610304342, cumulative cost = {702232.3947468469 rows, 3483060.3424085705 cpu, 1.2324516E7 io, 52731.436864926254 network, 200193.17464888399 memory}
         :                       :  :        :- Calc(select=[y, X0]): rowcount = 5934.445740202895, cumulative cost = {701241.1778858164 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 5934.445740202895, cumulative cost = {695306.7321456135 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
         :                       :  :        :     :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
         :                       :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
         :                       :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
         :                       :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
         :                       :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
         :                       :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :                       :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 11602.132895350107, cumulative cost = {2211235.994500034 rows, 7.488198137954961E7 cpu, 3.0804636E7 io, 9356217.829674678 network, 6361796.422445838 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 11602.132895350107, cumulative cost = {2199633.861604684 rows, 7.488198137954961E7 cpu, 3.0804636E7 io, 9356217.829674678 network, 6361796.422445838 memory}
         :                       :        :- Exchange(distribution=[hash[y]]): rowcount = 38842.55263566739, cumulative cost = {1815815.728709334 rows, 6.753750195846426E7 cpu, 2.4643836E7 io, 8432073.829674678 network, 4205488.422445838 memory}
         :                       :        :  +- Calc(select=[y, X1]): rowcount = 38842.55263566739, cumulative cost = {1776973.1760736667 rows, 6.101195311567215E7 cpu, 2.4643836E7 io, 7499852.56641866 network, 4205488.422445838 memory}
         :                       :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 38842.55263566739, cumulative cost = {1738130.6234379993 rows, 6.101195311567215E7 cpu, 2.4643836E7 io, 7499852.56641866 network, 4205488.422445838 memory}
         :                       :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442589.070802332 rows, 5.894035030843656E7 cpu, 1.848306E7 io, 7499852.56641866 network, 4079412.771796681 memory}
         :                       :        :           +- Calc(select=[X1, y]): rowcount = 2251.350904449236, cumulative cost = {1440337.7198978828 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
         :                       :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438086.3689934337 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
         :                       :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                       :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                       :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                       :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                       :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                       :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                       :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                       :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :        :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 6114.487635667386, cumulative cost = {1788634.8460736668 rows, 6.132794431567215E7 cpu, 2.46444E7 io, 7500416.56641866 network, 4207180.422445838 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 6114.487635667386, cumulative cost = {1782520.3584379994 rows, 6.132794431567215E7 cpu, 2.46444E7 io, 7500416.56641866 network, 4207180.422445838 memory}
         :                             :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :                             :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                             :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442589.070802332 rows, 5.894035030843656E7 cpu, 1.848306E7 io, 7499852.56641866 network, 4079412.771796681 memory}
         :                                +- Calc(select=[X1, y]): rowcount = 2251.350904449236, cumulative cost = {1440337.7198978828 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438086.3689934337 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                                      :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 180.49362694862387, cumulative cost = {1.0147114617547287E7 rows, 2.6742354084992665E8 cpu, 1.47876012E8 io, 3.2255705633274823E7 network, 2.076497579220018E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 180.49362694862387, cumulative cost = {1.0146934123920338E7 rows, 2.6742354084992665E8 cpu, 1.47876012E8 io, 3.2255705633274823E7 network, 2.076497579220018E7 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 445.48545355706335, cumulative cost = {2509613.5956873684 rows, 6.159986725885085E7 cpu, 3.6970572E7 io, 7554182.377387997 network, 4569493.023423157 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2509168.110233811 rows, 6.152858958628172E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4569493.023423157 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 445.48545355706335, cumulative cost = {2508722.624780254 rows, 6.15214618190248E7 cpu, 3.6970572E7 io, 7543490.726502627 network, 4540981.954395505 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 445.48545355706335, cumulative cost = {2508277.1393266967 rows, 6.144305637919876E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4540981.954395505 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2457.589806994182, cumulative cost = {2507831.6538731395 rows, 6.140373494228686E7 cpu, 3.6970572E7 io, 7532799.0756172575 network, 4512470.885367853 memory}
               :              :- Calc(select=[X0, X10 AS X1]): rowcount = 2275.047485620262, cumulative cost = {1795387.4888397823 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 2275.047485620262, cumulative cost = {1793112.441354162 rows, 5.959003315088867E7 cpu, 2.4645228E7 io, 7475755.950948336 network, 4225928.046095698 memory}
               :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :              :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :              :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :              :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :              :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :              :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 158.97720780683773, cumulative cost = {355004.37577955716 rows, 903731.127293892 cpu, 6162192.0 io, 29959.80623645814 network, 137640.55066183486 memory}
               :              :        +- Calc(select=[X1, x]): rowcount = 158.97720780683773, cumulative cost = {354845.3985717503 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 158.97720780683773, cumulative cost = {354686.4213639435 rows, 878294.774044798 cpu, 6162192.0 io, 26144.353249094034 network, 137640.55066183486 memory}
               :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :              :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :              :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :              :              :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :              :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :              :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, X10 AS X1]): rowcount = 182.5423213739202, cumulative cost = {709986.575226363 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 182.5423213739202, cumulative cost = {709804.0329049891 rows, 1811244.2015911918 cpu, 1.2325344E7 io, 57043.12466892127 network, 286542.83927215444 memory}
               :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.4148040579 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
               :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.34320270526 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
               :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.2716013526 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
               :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.19999999995 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
               :                    :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
               :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
               :                    :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                    :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                    :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                    :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 165.87720780683773, cumulative cost = {355117.0757795572 rows, 919983.063658211 cpu, 6162732.0 io, 30665.40623645814 network, 139304.55066183486 memory}
               :                       +- Calc(select=[X0, X1]): rowcount = 165.87720780683773, cumulative cost = {354951.19857175037 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.87720780683773, cumulative cost = {354785.3213639435 rows, 893442.710409117 cpu, 6162732.0 io, 26684.353249094034 network, 139304.55066183486 memory}
               :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :                             :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                             :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :                             :                 :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                             :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[X0, X1]): rowcount = 757.805392767096, cumulative cost = {7637140.034606022 rows, 2.058140472643052E8 cpu, 1.1090544E8 io, 2.4701523255886827E7 network, 1.617053558337783E7 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 757.805392767096, cumulative cost = {7636382.2292132545 rows, 2.058140472643052E8 cpu, 1.1090544E8 io, 2.4701523255886827E7 network, 1.617053558337783E7 memory}
                     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4995.03595178064, cumulative cost = {7635510.423820487 rows, 2.0576451097669095E8 cpu, 1.10904756E8 io, 2.4700839255886827E7 network, 1.616848358337783E7 memory}
                     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4995.03595178064, cumulative cost = {7630515.387868706 rows, 2.0568459040146247E8 cpu, 1.10904756E8 io, 2.4700839255886827E7 network, 1.584880128246387E7 memory}
                     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4995.03595178064, cumulative cost = {7625520.351916925 rows, 2.0480546407394907E8 cpu, 1.10904756E8 io, 2.458095839304409E7 network, 1.584880128246387E7 memory}
                     :        +- Union(all=[true], union=[X0, X1]): rowcount = 27555.892886395115, cumulative cost = {7620525.315965144 rows, 2.0436456978776675E8 cpu, 1.10904756E8 io, 2.458095839304409E7 network, 1.5529118981549907E7 memory}
                     :           :- Union(all=[true], union=[X0, X1]): rowcount = 21441.40525072773, cumulative cost = {5804334.577005082 rows, 1.430090695792082E8 cpu, 8.6260356E7 io, 1.7080541826625433E7 network, 1.1321938559104068E7 memory}
                     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 9839.272355377621, cumulative cost = {3571657.17725432 rows, 6.810564679440786E7 cpu, 5.545572E7 io, 7724323.996950755 network, 4960142.13665823 memory}
                     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 8942.055494347187, cumulative cost = {2858688.293291065 rows, 6.4612747179643914E7 cpu, 4.3131204E7 io, 7671592.560085828 network, 4759948.962009346 memory}
                     :           :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 2276.138633316754, cumulative cost = {1795527.7804486374 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                     :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2276.138633316754, cumulative cost = {1793251.6418153206 rows, 5.9614230463308536E7 cpu, 2.4646452E7 io, 7476974.425456033 network, 4229090.8259091005 memory}
                     :           :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                     :           :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                     :           :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                     :           :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                     :           :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :           :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :           :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                     :           :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :           :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :           :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :           :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                     :           :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 166.251525783452, cumulative cost = {355142.4850930193 rows, 927870.2451699551 cpu, 6163416.0 io, 31178.28074415517 network, 140395.9686685457 memory}
                     :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 166.251525783452, cumulative cost = {354976.2335672359 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                     :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.251525783452, cumulative cost = {354809.98204145243 rows, 901270.0010446027 cpu, 6163416.0 io, 27188.24412535232 network, 140395.9686685457 memory}
                     :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {354529.730515669 rows, 883283.2530028186 cpu, 6162732.0 io, 26504.24412535232 network, 138343.9686685457 memory}
                     :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.3435052230134, cumulative cost = {353478.387010446 rows, 866461.7569192504 cpu, 6162732.0 io, 26504.24412535232 network, 71057.98433427286 memory}
                     :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.3435052230134, cumulative cost = {352427.043505223 rows, 681425.3 cpu, 6162732.0 io, 1272.0 network, 71057.98433427286 memory}
                     :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5799.900000000001, cumulative cost = {351375.7 rows, 588626.9 cpu, 6162732.0 io, 1272.0 network, 3772.0 memory}
                     :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                     :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
                     :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                     :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                     :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 6665.916861030434, cumulative cost = {1054218.4573480804 rows, 4989574.660841034 cpu, 1.8484752E7 io, 194618.13462979574 network, 530858.1361002461 memory}
                     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], isBroadcast=[true], build=[right]): rowcount = 6665.916861030434, cumulative cost = {1047552.5404870498 rows, 4989574.660841034 cpu, 1.8484752E7 io, 194618.13462979574 network, 530858.1361002461 memory}
                     :           :  :  :        :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 5934.445740202895, cumulative cost = {707175.6236260193 rows, 4377200.0949194105 cpu, 1.2323952E7 io, 194594.13462979574 network, 198501.17464888399 memory}
                     :           :  :  :           +- Calc(select=[y, X0]): rowcount = 5934.445740202895, cumulative cost = {701241.1778858164 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
                     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 5934.445740202895, cumulative cost = {695306.7321456135 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
                     :           :  :  :                 :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
                     :           :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
                     :           :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
                     :           :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
                     :           :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
                     :           :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                     :           :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                     :           :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :  +- Calc(select=[X0, y AS X1]): rowcount = 897.2168610304342, cumulative cost = {703129.6116078773 rows, 3483060.3424085705 cpu, 1.2324516E7 io, 52731.436864926254 network, 200193.17464888399 memory}
                     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 897.2168610304342, cumulative cost = {702232.3947468469 rows, 3483060.3424085705 cpu, 1.2324516E7 io, 52731.436864926254 network, 200193.17464888399 memory}
                     :           :  :        :- Calc(select=[y, X0]): rowcount = 5934.445740202895, cumulative cost = {701241.1778858164 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
                     :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 5934.445740202895, cumulative cost = {695306.7321456135 rows, 3427688.776486947 cpu, 1.2323952E7 io, 52167.436864926254 network, 198501.17464888399 memory}
                     :           :  :        :     :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :           :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :           :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 1051.0716013526303, cumulative cost = {355555.48640541063 rows, 1049697.003676126 cpu, 6162612.0 io, 51603.436864926254 network, 137949.16497313668 memory}
                     :           :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {354504.414804058 rows, 881525.5474597052 cpu, 6162612.0 io, 26377.718432463127 network, 137949.16497313668 memory}
                     :           :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1051.0716013526303, cumulative cost = {353453.3432027053 rows, 864708.401838063 cpu, 6162612.0 io, 26377.718432463127 network, 70680.58248656834 memory}
                     :           :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1051.0716013526303, cumulative cost = {352402.27160135267 rows, 679719.8 cpu, 6162612.0 io, 1152.0 network, 70680.58248656834 memory}
                     :           :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 5798.400000000001, cumulative cost = {351351.2 rows, 586945.4 cpu, 6162612.0 io, 1152.0 network, 3412.0 memory}
                     :           :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                     :           :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
                     :           :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 15.6, cumulative cost = {182.2 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 15.6, cumulative cost = {166.6 rows, 8352.0 cpu, 1248.0 io, 564.0 network, 1692.0 memory}
                     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :           :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 11602.132895350107, cumulative cost = {2211235.994500034 rows, 7.488198137954961E7 cpu, 3.0804636E7 io, 9356217.829674678 network, 6361796.422445838 memory}
                     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 11602.132895350107, cumulative cost = {2199633.861604684 rows, 7.488198137954961E7 cpu, 3.0804636E7 io, 9356217.829674678 network, 6361796.422445838 memory}
                     :           :        :- Exchange(distribution=[hash[y]]): rowcount = 38842.55263566739, cumulative cost = {1815815.728709334 rows, 6.753750195846426E7 cpu, 2.4643836E7 io, 8432073.829674678 network, 4205488.422445838 memory}
                     :           :        :  +- Calc(select=[y, X1]): rowcount = 38842.55263566739, cumulative cost = {1776973.1760736667 rows, 6.101195311567215E7 cpu, 2.4643836E7 io, 7499852.56641866 network, 4205488.422445838 memory}
                     :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 38842.55263566739, cumulative cost = {1738130.6234379993 rows, 6.101195311567215E7 cpu, 2.4643836E7 io, 7499852.56641866 network, 4205488.422445838 memory}
                     :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442589.070802332 rows, 5.894035030843656E7 cpu, 1.848306E7 io, 7499852.56641866 network, 4079412.771796681 memory}
                     :           :        :           +- Calc(select=[X1, y]): rowcount = 2251.350904449236, cumulative cost = {1440337.7198978828 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
                     :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438086.3689934337 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
                     :           :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                     :           :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                     :           :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                     :           :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                     :           :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :           :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :           :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                     :           :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :           :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :           :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :           :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                     :           :        :                 :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                     :           :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 6114.487635667386, cumulative cost = {1788634.8460736668 rows, 6.132794431567215E7 cpu, 2.46444E7 io, 7500416.56641866 network, 4207180.422445838 memory}
                     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 6114.487635667386, cumulative cost = {1782520.3584379994 rows, 6.132794431567215E7 cpu, 2.46444E7 io, 7500416.56641866 network, 4207180.422445838 memory}
                     :                 :- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                     :                 +- Exchange(distribution=[broadcast]): rowcount = 2251.350904449236, cumulative cost = {1442589.070802332 rows, 5.894035030843656E7 cpu, 1.848306E7 io, 7499852.56641866 network, 4079412.771796681 memory}
                     :                    +- Calc(select=[X1, y]): rowcount = 2251.350904449236, cumulative cost = {1440337.7198978828 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
                     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 2251.350904449236, cumulative cost = {1438086.3689934337 rows, 5.858013416372468E7 cpu, 1.848306E7 io, 7445820.144711878 network, 4079412.771796681 memory}
                     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
                     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
                     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
                     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
                     :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
                     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                     :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                     :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
                     :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
                     :                          :                    +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                     :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,1,1,0,0,2,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#9] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], isBroadcast=[true], build=[right])\n:        :- Calc(select=[y, X0])\n:        :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:        :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        :     +- [#2] Exchange(distribution=[broadcast])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[X0, X1])\n         +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n            :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n            +- [#5] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[10])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[12])
         :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[2])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[13])
         :              :                 :- Exchange(distribution=[hash[x]])(reuse_id=[26])
         :              :                 :  +- Reused(reference_id=[1])
         :              :                 +- Exchange(distribution=[hash[y]])
         :              :                    +- Calc(select=[y, x0])(reuse_id=[3])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :              :                          :- Reused(reference_id=[1])
         :              :                          +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X1, x])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[x AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[2])
         :              :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :        :                 :- Reused(reference_id=[3])
         :              :        :                 +- Reused(reference_id=[4])
         :              :        +- Reused(reference_id=[5])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[16])
         :              :           :     :- Reused(reference_id=[2])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[6])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[9])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = y)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[15])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[6])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, X1])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[7])
         :                       +- Reused(reference_id=[6])
         :- Exchange(distribution=[broadcast])(reuse_id=[22])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- Reused(reference_id=[8])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[9])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[3])
         :              :        :           +- Reused(reference_id=[5])
         :              :        +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[11])
         :                       +- Reused(reference_id=[5])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[2,1,1,0,1,0,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, y, X0], isBroadcast=[true], build=[right])\n:  :  :        :- [#9] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :        +- [#10] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, y AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[y, X0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X1 AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X1, x, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right])\n      :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Calc(select=[x, y])(reuse_id=[23])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[6])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[14])
         :              :  +- Calc(select=[X1, y])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[17])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[12])
         :              :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :        :              +- Reused(reference_id=[13])
         :              :        +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]])
         :              :  +- Calc(select=[y, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[14])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[25])
         :              :  +- Calc(select=[x, y0])(reuse_id=[18])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[5])
         :              :- Calc(select=[y, X0])(reuse_id=[20])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :     :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :     :  +- Calc(select=[x, y])(reuse_id=[24])
         :              :     :     +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :     :        :- Reused(reference_id=[1])
         :              :     :        +- Reused(reference_id=[6])
         :              :     +- Exchange(distribution=[broadcast])
         :              :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :              :           +- Exchange(distribution=[hash[X0, X1]])
         :              :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 +- Union(all=[true], union=[X0, X1])
         :              :                    :- Calc(select=[x0 AS X0, x AS X1])
         :              :                    :  +- Reused(reference_id=[15])
         :              :                    +- Calc(select=[x AS X0, x AS X1])(reuse_id=[19])
         :              :                       +- Reused(reference_id=[16])
         :              :- Reused(reference_id=[6])
         :              :- Reused(reference_id=[17])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[28])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[18])
         :              :                 :     +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[19])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[18])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Reused(reference_id=[20])
         :- Reused(reference_id=[21])
         :- Reused(reference_id=[4])
         :- Reused(reference_id=[6])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Reused(reference_id=[22])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[1,0,1,0,0,1,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[y0 AS X0, x0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, x0, y00], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[y0 AS X0, x AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :- Calc(select=[x, y0])\n:  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :     :- [#10] Calc(select=[x, y0])\n:  :  :        :     +- [#9] Exchange(distribution=[broadcast])\n:  :  :        +- [#9] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, x AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:  :        :- [#5] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[y01 AS X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y01], isBroadcast=[true], build=[right])\n:        :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:        +- [#4] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], isBroadcast=[true], build=[right])\n      :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#2] Exchange(distribution=[broadcast])\n])
                  :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :  +- Reused(reference_id=[23])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[x, y0 AS y00])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])(reuse_id=[27])
                  :        :  +- Reused(reference_id=[24])
                  :        +- Reused(reference_id=[25])
                  :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :  +- Reused(reference_id=[24])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[x0, y0 AS y01])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])
                  :        :  +- Calc(select=[y, x0])
                  :        :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
                  :        :        :- Reused(reference_id=[26])
                  :        :        +- Exchange(distribution=[hash[y0]])
                  :        :           +- Reused(reference_id=[18])
                  :        +- Reused(reference_id=[25])
                  :- Reused(reference_id=[27])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[28])
                  :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :  +- Reused(reference_id=[18])
                  :- Exchange(distribution=[broadcast])
                  :  +- Calc(select=[x, y0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
                  :        :- Calc(select=[x, y0])(reuse_id=[29])
                  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :     :- Exchange(distribution=[hash[y]])
                  :        :     :  +- Reused(reference_id=[1])
                  :        :     +- Exchange(distribution=[hash[x]])
                  :        :        +- Reused(reference_id=[24])
                  :        +- Reused(reference_id=[6])
                  :- Reused(reference_id=[6])
                  :- Reused(reference_id=[29])
                  +- Reused(reference_id=[6])

Job has been submitted with JobID b00834162acb01fe7eb8adc7f02fa670
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: dce52b2d_05d1_471e_94a8_7472ac8c7d91

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalUnion(all=[false])
   :  :        :  :  :- LogicalUnion(all=[false])
   :  :        :  :  :  :- LogicalProject(X0=[$9], X1=[$1])
   :  :        :  :  :  :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :  :  :  :     :- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :  :     :  :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :  :     :  :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  :     +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :        :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :  :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :        :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$11], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $12)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($9, $10)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $9)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalUnion(all=[false])
   :           :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
   :           :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :           :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :  +- LogicalUnion(all=[false])
   :           :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalUnion(all=[false])
   :           :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$9])
   :           :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :           :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :- LogicalUnion(all=[false])
   :           :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :           :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :           :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :- LogicalUnion(all=[false])
   :                 :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalUnion(all=[false])
            :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     +- LogicalUnion(all=[false])
            :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
            :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
            :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :  +- LogicalUnion(all=[false])
            :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  +- LogicalProject(X0=[$1], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalUnion(all=[false])
            :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$9])
            :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
            :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :- LogicalUnion(all=[false])
            :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
            :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
            :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
                  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :- LogicalUnion(all=[false])
                  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11279.012730343027, cumulative cost = {2.686453256100885E8 rows, 7.734790415014548E9 cpu, 3.876168984E9 io, 9.491477490291196E8 network, 5.584798375903494E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 11279.012730343027, cumulative cost = {2.6863404659735817E8 rows, 7.734609950810863E9 cpu, 3.876168984E9 io, 9.491477490291196E8 network, 5.577579807756075E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11279.012730343027, cumulative cost = {2.686227675846278E8 rows, 7.732624844570322E9 cpu, 3.876168984E9 io, 9.488770527235913E8 network, 5.577579807756075E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 62222.42835926408, cumulative cost = {2.6861148857189745E8 rows, 7.731629285716574E9 cpu, 3.876168984E9 io, 9.488770527235913E8 network, 5.570361239608655E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 60604.44421248837, cumulative cost = {1.770159030268711E8 rows, 5.270052610898638E9 cpu, 2.547193632E9 io, 6.507145366504521E8 network, 3.705265455913062E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 1872.3077356205672, cumulative cost = {8.182810861557767E7 rows, 2.7264624692339897E9 cpu, 1.162852368E9 io, 3.431696724654131E8 network, 1.815533181893701E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 1872.3077356205672, cumulative cost = {8.182623630784205E7 rows, 2.7264624692339897E9 cpu, 1.162852368E9 io, 3.431696724654131E8 network, 1.815533181893701E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 4002.375986461228, cumulative cost = {2.2653275257093128E7 rows, 5.485755636230822E8 cpu, 3.32253588E8 io, 6.78690231582057E7 network, 4.0989285927246355E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2649272881106667E7 rows, 5.479351834652483E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.0989285927246355E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.375986461228, cumulative cost = {2.2645270505120207E7 rows, 5.478711454494649E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.073313386411284E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2641268129133746E7 rows, 5.471667272758478E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.073313386411284E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 22079.72976344435, cumulative cost = {2.2637265753147285E7 rows, 5.468134515996327E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.047698180097932E7 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 1635.87225020841, cumulative cost = {6429972.898798617 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1635.87225020841, cumulative cost = {6428337.026548408 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :  :     :              :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1467.8073397014573, cumulative cost = {3241272.918813134 rows, 5771129.65228751 cpu, 5.5381992E7 io, 265888.55050506815 network, 1219796.929878577 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 1467.8073397014573, cumulative cost = {3239805.1114734327 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1467.8073397014573, cumulative cost = {3238337.3041337314 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 20443.85751323594, cumulative cost = {1.6185213124585224E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 20443.85751323594, cumulative cost = {1.6164769267071988E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 1414.4073397014572, cumulative cost = {3240400.7188131344 rows, 5636770.976434776 cpu, 5.5377732E7 io, 260346.95050506815 network, 1206972.929878577 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 1414.4073397014572, cumulative cost = {3238986.311473433 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 1414.4073397014572, cumulative cost = {3237571.9041337315 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 8479.675584342554, cumulative cost = {5.91710887430133E7 rows, 2.1777870491983414E9 cpu, 8.3059878E8 io, 2.753006493072074E8 network, 1.403398992068819E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 8479.675584342554, cumulative cost = {5.9162609067428954E7 rows, 2.1777870491983414E9 cpu, 8.3059878E8 io, 2.753006493072074E8 network, 1.403398992068819E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 56174.170562283696, cumulative cost = {5.915341539184461E7 rows, 2.177277679833843E9 cpu, 8.30594496E8 io, 2.752963653072074E8 network, 1.403270472068819E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 56174.170562283696, cumulative cost = {5.9097241221282326E7 rows, 2.1763788931048465E9 cpu, 8.30594496E8 io, 2.752963653072074E8 network, 1.3673190029089576E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 56174.170562283696, cumulative cost = {5.904106705072004E7 rows, 2.1664922390858846E9 cpu, 8.30594496E8 io, 2.739481852137126E8 network, 1.3673190029089576E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 309893.55070498947, cumulative cost = {5.898489288015776E7 rows, 2.161533942274605E9 cpu, 8.30594496E8 io, 2.739481852137126E8 network, 1.331367533749096E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 242402.98045498948, cumulative cost = {4.819110508395278E7 rows, 1.9208731805639E9 cpu, 6.64478016E8 io, 2.4652902437371257E8 network, 1.079175322149096E8 memory}
         :  :           :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 173745.6684862395, cumulative cost = {3.1632003227685288E7 rows, 1.219045857473445E9 cpu, 4.429965E8 io, 1.5400822635871258E8 network, 6.28962894799096E7 memory}
         :  :           :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 69887.2206375, cumulative cost = {2.1368104587537497E7 rows, 1.0517719625716373E9 cpu, 2.76867924E8 io, 1.37112787851E8 network, 4.2174780319E7 memory}
         :  :           :           :  :  :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 60871.20406875, cumulative cost = {1.2403097134512497E7 rows, 5.624467639539999E8 cpu, 1.6611648E8 io, 7.3423960251E7 network, 2.2753971919E7 memory}
         :  :           :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, x0, y00], build=[right]): rowcount = 60871.20406875, cumulative cost = {1.2342225930443747E7 rows, 5.624467639539999E8 cpu, 1.6611648E8 io, 7.3423960251E7 network, 2.2753971919E7 memory}
         :  :           :           :  :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :  +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     +- Exchange(distribution=[hash[y0]]): rowcount = 59749.77712499999, cumulative cost = {8936123.976374997 rows, 4.987552997369999E8 cpu, 1.1074716E8 io, 6.5118538251E7 network, 1.94079564E7 memory}
         :  :           :           :  :  :  :        +- Calc(select=[x, y0]): rowcount = 59749.77712499999, cumulative cost = {8876374.199249998 rows, 4.8871733717999995E8 cpu, 1.1074716E8 io, 6.36845436E7 network, 1.94079564E7 memory}
         :  :           :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 59749.77712499999, cumulative cost = {8816624.422124999 rows, 4.8871733717999995E8 cpu, 1.1074716E8 io, 6.36845436E7 network, 1.94079564E7 memory}
         :  :           :           :  :  :  :              :- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :           :           :  :  :  :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :           :           :  :  :  :              :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :           :           :  :  :  :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :     +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :           :  :  :  :              :        +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :  :  :              :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :  :  :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 9016.01656875, cumulative cost = {8895120.232387498 rows, 4.8925531139699996E8 cpu, 1.10751444E8 io, 6.36888276E7 network, 1.94208084E7 memory}
         :  :           :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 9016.01656875, cumulative cost = {8886104.215818748 rows, 4.8925531139699996E8 cpu, 1.10751444E8 io, 6.36888276E7 network, 1.94208084E7 memory}
         :  :           :           :  :  :        :- Calc(select=[x, y0]): rowcount = 59749.77712499999, cumulative cost = {8876374.199249998 rows, 4.8871733717999995E8 cpu, 1.1074716E8 io, 6.36845436E7 network, 1.94079564E7 memory}
         :  :           :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 59749.77712499999, cumulative cost = {8816624.422124999 rows, 4.8871733717999995E8 cpu, 1.1074716E8 io, 6.36845436E7 network, 1.94079564E7 memory}
         :  :           :           :  :  :        :     :- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :           :           :  :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :           :           :  :  :        :     :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :           :           :  :  :        :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :     +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :           :  :  :        :     :        +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :  :        :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :  :        :     :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  +- Calc(select=[X0, x AS X1]): rowcount = 103858.44784873951, cumulative cost = {1.009015297166155E7 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :           :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 103858.44784873951, cumulative cost = {9986294.523812812 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :           :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :           :  :        :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346278.0023249301, cumulative cost = {6536333.125964073 rows, 8.4897866814722E7 cpu, 1.10754996E8 io, 8584474.907712582 network, 1326404.7609096025 memory}
         :  :           :           :  :           +- Calc(select=[x, X0]): rowcount = 346278.0023249301, cumulative cost = {6190055.123639143 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :           :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.0023249301, cumulative cost = {5843777.121314213 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :           :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :  :           :           :  :                    +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :           :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :           :           :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :  :           :           :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :  :           :           :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :  :           :           :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :  :           :           :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :           :           :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :           :           :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :           :           :  :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :           :           :  :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :  :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[y01 AS X0, x AS X1]): rowcount = 68657.31196874999, cumulative cost = {1.6316698875812503E7 rows, 7.0158492011E8 cpu, 2.21481516E8 io, 9.252079801499999E7 network, 4.5021242735E7 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y01], build=[right]): rowcount = 68657.31196874999, cumulative cost = {1.6248041563843753E7 rows, 7.0158492011E8 cpu, 2.21481516E8 io, 9.252079801499999E7 network, 4.5021242735E7 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x0]]): rowcount = 111603.76312499998, cumulative cost = {1.2833281301875003E7 rows, 6.21260031605E8 cpu, 1.66107936E8 io, 8.420983441499999E7 network, 3.875858E7 memory}
         :  :           :           :           +- Calc(select=[x0, y0 AS y01]): rowcount = 111603.76312499998, cumulative cost = {1.2721677538750002E7 rows, 6.025105994E8 cpu, 1.66107936E8 io, 8.15313441E7 network, 3.875858E7 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 111603.76312499998, cumulative cost = {1.2610073775625002E7 rows, 6.025105994E8 cpu, 1.66107936E8 io, 8.15313441E7 network, 3.875858E7 memory}
         :  :           :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :  :           :           :                 :  +- Calc(select=[y, x0]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :           :                 :        :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :           :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :        +- Exchange(distribution=[hash[y0]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :           :                 :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :           :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 67490.57024999999, cumulative cost = {1.04838942455E7 rows, 2.4035086815999997E8 cpu, 1.6611648E8 io, 2.7419160839999996E7 network, 2.5219221159999996E7 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 67490.57024999999, cumulative cost = {1.041640367525E7 rows, 2.4035086815999997E8 cpu, 1.6611648E8 io, 2.7419160839999996E7 network, 2.5219221159999996E7 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :                 :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y00]]): rowcount = 103825.48499999999, cumulative cost = {7002810.155 rows, 1.6008820587999997E8 cpu, 1.107429E8 io, 1.910819724E7 network, 1.9392142E7 memory}
         :  :           :                    +- Calc(select=[x, y0 AS y00]): rowcount = 103825.48499999999, cumulative cost = {6898984.67 rows, 1.4264552439999998E8 cpu, 1.107429E8 io, 1.66163856E7 network, 1.9392142E7 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 103825.48499999999, cumulative cost = {6795159.185 rows, 1.4264552439999998E8 cpu, 1.107429E8 io, 1.66163856E7 network, 1.9392142E7 memory}
         :  :           :                          :- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :                          :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                          :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                          :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                          :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :                          :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :                             +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 58732.1364768678, cumulative cost = {9.512718996708095E7 rows, 2.543529537220435E9 cpu, 1.384341264E9 io, 3.07544864185039E8 network, 1.8897322740193608E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], build=[right]): rowcount = 58732.1364768678, cumulative cost = {9.506845783060408E7 rows, 2.543529537220435E9 cpu, 1.384341264E9 io, 3.07544864185039E8 network, 1.8897322740193608E8 memory}
         :        :- Exchange(distribution=[hash[y]]): rowcount = 346658.45639796916, cumulative cost = {2.6000304626287036E7 rows, 6.253026353058326E8 cpu, 3.87622884E8 io, 7.618882611175697E7 network, 4.1213418982488185E7 memory}
         :        :  +- Calc(select=[y, X0]): rowcount = 346658.45639796916, cumulative cost = {2.5653646169889066E7 rows, 5.670640146309738E8 cpu, 3.87622884E8 io, 6.78690231582057E7 network, 4.1213418982488185E7 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346658.45639796916, cumulative cost = {2.5306987713491097E7 rows, 5.670640146309738E8 cpu, 3.87622884E8 io, 6.78690231582057E7 network, 4.1213418982488185E7 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 4002.375986461228, cumulative cost = {2.2653275257093128E7 rows, 5.485755636230822E8 cpu, 3.32253588E8 io, 6.78690231582057E7 network, 4.0989285927246355E7 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2649272881106667E7 rows, 5.479351834652483E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.0989285927246355E7 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.375986461228, cumulative cost = {2.2645270505120207E7 rows, 5.478711454494649E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.073313386411284E7 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2641268129133746E7 rows, 5.471667272758478E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.073313386411284E7 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 22079.72976344435, cumulative cost = {2.2637265753147285E7 rows, 5.468134515996327E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.047698180097932E7 memory}
         :        :                       :- Calc(select=[X0, X00 AS X1]): rowcount = 1635.87225020841, cumulative cost = {6429972.898798617 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :        :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1635.87225020841, cumulative cost = {6428337.026548408 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :        :                       :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :        :                       :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :        :                       :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :        :                       :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :        :                       :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                       :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                       :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                       :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :     +- Exchange(distribution=[broadcast]): rowcount = 1467.8073397014573, cumulative cost = {3241272.918813134 rows, 5771129.65228751 cpu, 5.5381992E7 io, 265888.55050506815 network, 1219796.929878577 memory}
         :        :                       :        +- Calc(select=[X0, X1]): rowcount = 1467.8073397014573, cumulative cost = {3239805.1114734327 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :        :                       :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1467.8073397014573, cumulative cost = {3238337.3041337314 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :        :                       :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                       :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                       :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                       :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                       :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                       :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X0, X00 AS X1]): rowcount = 20443.85751323594, cumulative cost = {1.6185213124585224E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 20443.85751323594, cumulative cost = {1.6164769267071988E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :        :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                             :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1414.4073397014572, cumulative cost = {3240400.7188131344 rows, 5636770.976434776 cpu, 5.5377732E7 io, 260346.95050506815 network, 1206972.929878577 memory}
         :        :                                +- Calc(select=[X0, x]): rowcount = 1414.4073397014572, cumulative cost = {3238986.311473433 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 1414.4073397014572, cumulative cost = {3237571.9041337315 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                                      :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X0]]): rowcount = 44889.12011448288, cumulative cost = {6.900942106784017E7 rows, 1.9150945213025029E9 cpu, 9.9671838E8 io, 2.31356038073282E8 network, 1.4524601769303685E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 44889.12011448288, cumulative cost = {6.89645319477257E7 rows, 1.9075531491232698E9 cpu, 9.9671838E8 io, 2.302786991905344E8 network, 1.4524601769303685E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 44889.12011448288, cumulative cost = {6.891964282761122E7 rows, 1.9068349232014382E9 cpu, 9.9671838E8 io, 2.302786991905344E8 network, 1.4237311400570995E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 44889.12011448288, cumulative cost = {6.887475370749675E7 rows, 1.8989344380612893E9 cpu, 9.9671838E8 io, 2.2920136030778682E8 network, 1.4237311400570995E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 247637.81433810518, cumulative cost = {6.882986458738227E7 rows, 1.8949722330318797E9 cpu, 9.9671838E8 io, 2.2920136030778682E8 network, 1.3950021031838304E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 192686.28987626306, cumulative cost = {5.250771019413803E7 rows, 1.3435916036989772E9 cpu, 7.75232832E8 io, 1.6179566656792718E8 network, 1.0169857998081577E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 88413.62083198677, cumulative cost = {3.2442292955305226E7 rows, 6.704409827452525E8 cpu, 4.98382248E8 io, 7.77106057809833E7 network, 4.45305116432485E7 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 80360.2035345988, cumulative cost = {2.6035536059433207E7 rows, 6.391028635395188E8 cpu, 3.87622464E8 io, 7.724067341322228E7 network, 4.274323823349792E7 memory}
         :                       :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :                       :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :                       :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                       :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                       :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                       :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                       :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :                       :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :                       :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :                       :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :                       :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :                       :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :                       :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :                       :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                       :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                       :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 59908.604797387976, cumulative cost = {9819902.848689286 rows, 1.0336304695797622E8 cpu, 1.6612482E8 io, 1.0051049135343097E7 network, 4761066.53410876 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 59908.604797387976, cumulative cost = {9759994.243891899 rows, 1.0336304695797622E8 cpu, 1.6612482E8 io, 1.0051049135343097E7 network, 4761066.53410876 memory}
         :                       :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :  :  :        :  +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 53332.44864925319, cumulative cost = {6354854.889094511 rows, 3.972292136878219E7 cpu, 1.107555E8 io, 1745627.1353430978 network, 1774421.4097505813 memory}
         :                       :  :  :           +- Calc(select=[y, X0]): rowcount = 53332.44864925319, cumulative cost = {6301522.440445258 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 53332.44864925319, cumulative cost = {6248189.9917960055 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
         :                       :  :  :                 :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
         :                       :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :                       :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :                       :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :                       :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :                       :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y AS X1]): rowcount = 8053.417297387978, cumulative cost = {6318343.275040035 rows, 3.1249705584901687E7 cpu, 1.10759784E8 io, 469932.3677610212 network, 1787273.4097505813 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 8053.417297387978, cumulative cost = {6310289.857742647 rows, 3.1249705584901687E7 cpu, 1.10759784E8 io, 469932.3677610212 network, 1787273.4097505813 memory}
         :                       :  :        :- Calc(select=[y, X0]): rowcount = 53332.44864925319, cumulative cost = {6301522.440445258 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 53332.44864925319, cumulative cost = {6248189.9917960055 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
         :                       :  :        :     :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
         :                       :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :                       :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :                       :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :                       :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :                       :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 104272.6690442763, cumulative cost = {1.9872730948956538E7 rows, 6.729579346638485E8 cpu, 2.76850584E8 io, 8.408506078694387E7 network, 5.716806833756727E7 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 104272.6690442763, cumulative cost = {1.9768458279912263E7 rows, 6.729579346638485E8 cpu, 2.76850584E8 io, 8.408506078694387E7 network, 5.716806833756727E7 memory}
         :                       :        :- Exchange(distribution=[hash[y]]): rowcount = 349092.87696184206, cumulative cost = {1.6318954860867986E7 rows, 6.069517256481538E8 cpu, 2.21481264E8 io, 7.577963878694387E7 network, 3.778877833756727E7 memory}
         :                       :        :  +- Calc(select=[y, X1]): rowcount = 349092.87696184206, cumulative cost = {1.5969861983906144E7 rows, 5.483041223185643E8 cpu, 2.21481264E8 io, 6.740140973985966E7 network, 3.778877833756727E7 memory}
         :                       :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 349092.87696184206, cumulative cost = {1.5620769106944302E7 rows, 5.483041223185643E8 cpu, 2.21481264E8 io, 6.740140973985966E7 network, 3.778877833756727E7 memory}
         :                       :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
         :                       :        :           +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                       :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                       :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                       :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                       :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                       :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                       :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :        :                 :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 54951.524461842106, cumulative cost = {1.6074516578906143E7 rows, 5.511329915185642E8 cpu, 2.21485548E8 io, 6.740569373985966E7 network, 3.780163033756727E7 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 54951.524461842106, cumulative cost = {1.6019565054444302E7 rows, 5.511329915185642E8 cpu, 2.21485548E8 io, 6.740569373985966E7 network, 3.780163033756727E7 memory}
         :                             :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                             :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                             :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
         :                                +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                                      :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1617.98414677571, cumulative cost = {9.15333631166671E7 rows, 2.461514452389577E9 cpu, 1.328975352E9 io, 2.981625160731392E8 network, 1.8650957836955932E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 1617.98414677571, cumulative cost = {9.153174513252033E7 rows, 2.461514452389577E9 cpu, 1.328975352E9 io, 2.981625160731392E8 network, 1.8650957836955932E8 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 4002.7929613323013, cumulative cost = {2.2551355664613508E7 rows, 5.534594498175634E8 cpu, 3.3225294E8 io, 6.78797848826048E7 network, 4.102730827068786E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.2547352871652175E7 rows, 5.528190029437503E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.102730827068786E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.7929613323013, cumulative cost = {2.254335007869084E7 rows, 5.52754958256369E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.07711295211626E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.253934728572951E7 rows, 5.520504666951745E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.07711295211626E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 22082.030070187793, cumulative cost = {2.2535344492768176E7 rows, 5.516971542140515E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.0514950771637335E7 memory}
               :              :- Calc(select=[X0, X10 AS X1]): rowcount = 20445.007666607664, cumulative cost = {1.6134251344242299E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 20445.007666607664, cumulative cost = {1.611380633657569E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :              :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :              :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :              :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :              :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :              :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 1422.0750288462589, cumulative cost = {3189436.6381634637 rows, 8078380.879230922 cpu, 5.5377408E7 io, 265717.80530771165 network, 1225528.0246154743 memory}
               :              :        +- Calc(select=[X1, x]): rowcount = 1422.0750288462589, cumulative cost = {3188014.5631346176 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1422.0750288462589, cumulative cost = {3186592.4881057716 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :              :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :              :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :              :              :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :              :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :              :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, X10 AS X1]): rowcount = 1637.02240358013, cumulative cost = {6379011.11845569 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1637.02240358013, cumulative cost = {6377374.09605211 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
               :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
               :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
               :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
               :                    :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                    :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                    :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                    :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                    :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 1475.475028846259, cumulative cost = {3190308.838163465 rows, 8213097.380577081 cpu, 5.5381668E7 io, 271259.4053077117 network, 1238352.0246154743 memory}
               :                       +- Calc(select=[X0, X1]): rowcount = 1475.475028846259, cumulative cost = {3188833.3631346184 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1475.475028846259, cumulative cost = {3187357.888105772 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :                             :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                             :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                             :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                             :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[X0, X1]): rowcount = 6783.768017172432, cumulative cost = {6.897877148376004E7 rows, 1.9079687100841856E9 cpu, 9.96722412E8 io, 2.302827311905344E8 network, 1.4525811369303685E8 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 6783.768017172432, cumulative cost = {6.897198771574287E7 rows, 1.9079687100841856E9 cpu, 9.96722412E8 io, 2.302827311905344E8 network, 1.4525811369303685E8 memory}
                     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 44889.12011448288, cumulative cost = {6.89645319477257E7 rows, 1.9075531491232698E9 cpu, 9.9671838E8 io, 2.302786991905344E8 network, 1.4524601769303685E8 memory}
                     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 44889.12011448288, cumulative cost = {6.891964282761122E7 rows, 1.9068349232014382E9 cpu, 9.9671838E8 io, 2.302786991905344E8 network, 1.4237311400570995E8 memory}
                     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 44889.12011448288, cumulative cost = {6.887475370749675E7 rows, 1.8989344380612893E9 cpu, 9.9671838E8 io, 2.2920136030778682E8 network, 1.4237311400570995E8 memory}
                     :        +- Union(all=[true], union=[X0, X1]): rowcount = 247637.81433810518, cumulative cost = {6.882986458738227E7 rows, 1.8949722330318797E9 cpu, 9.9671838E8 io, 2.2920136030778682E8 network, 1.3950021031838304E8 memory}
                     :           :- Union(all=[true], union=[X0, X1]): rowcount = 192686.28987626306, cumulative cost = {5.250771019413803E7 rows, 1.3435916036989772E9 cpu, 7.75232832E8 io, 1.6179566656792718E8 network, 1.0169857998081577E8 memory}
                     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 88413.62083198677, cumulative cost = {3.2442292955305226E7 rows, 6.704409827452525E8 cpu, 4.98382248E8 io, 7.77106057809833E7 network, 4.45305116432485E7 memory}
                     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 80360.2035345988, cumulative cost = {2.6035536059433207E7 rows, 6.391028635395188E8 cpu, 3.87622464E8 io, 7.724067341322228E7 network, 4.274323823349792E7 memory}
                     :           :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                     :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                     :           :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                     :           :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                     :           :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                     :           :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                     :           :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :           :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :           :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                     :           :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                     :           :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
                     :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                     :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                     :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
                     :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
                     :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
                     :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
                     :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                     :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                     :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 59908.604797387976, cumulative cost = {9819902.848689286 rows, 1.0336304695797622E8 cpu, 1.6612482E8 io, 1.0051049135343097E7 network, 4761066.53410876 memory}
                     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 59908.604797387976, cumulative cost = {9759994.243891899 rows, 1.0336304695797622E8 cpu, 1.6612482E8 io, 1.0051049135343097E7 network, 4761066.53410876 memory}
                     :           :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                     :           :  :  :        :  +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 53332.44864925319, cumulative cost = {6354854.889094511 rows, 3.972292136878219E7 cpu, 1.107555E8 io, 1745627.1353430978 network, 1774421.4097505813 memory}
                     :           :  :  :           +- Calc(select=[y, X0]): rowcount = 53332.44864925319, cumulative cost = {6301522.440445258 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
                     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 53332.44864925319, cumulative cost = {6248189.9917960055 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
                     :           :  :  :                 :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :           :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :           :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :           :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
                     :           :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
                     :           :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
                     :           :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
                     :           :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
                     :           :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                     :           :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                     :           :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :           :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :  +- Calc(select=[X0, y AS X1]): rowcount = 8053.417297387978, cumulative cost = {6318343.275040035 rows, 3.1249705584901687E7 cpu, 1.10759784E8 io, 469932.3677610212 network, 1787273.4097505813 memory}
                     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 8053.417297387978, cumulative cost = {6310289.857742647 rows, 3.1249705584901687E7 cpu, 1.10759784E8 io, 469932.3677610212 network, 1787273.4097505813 memory}
                     :           :  :        :- Calc(select=[y, X0]): rowcount = 53332.44864925319, cumulative cost = {6301522.440445258 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
                     :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 53332.44864925319, cumulative cost = {6248189.9917960055 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
                     :           :  :        :     :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :           :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :           :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :           :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
                     :           :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
                     :           :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
                     :           :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
                     :           :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
                     :           :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                     :           :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                     :           :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :           :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 104272.6690442763, cumulative cost = {1.9872730948956538E7 rows, 6.729579346638485E8 cpu, 2.76850584E8 io, 8.408506078694387E7 network, 5.716806833756727E7 memory}
                     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 104272.6690442763, cumulative cost = {1.9768458279912263E7 rows, 6.729579346638485E8 cpu, 2.76850584E8 io, 8.408506078694387E7 network, 5.716806833756727E7 memory}
                     :           :        :- Exchange(distribution=[hash[y]]): rowcount = 349092.87696184206, cumulative cost = {1.6318954860867986E7 rows, 6.069517256481538E8 cpu, 2.21481264E8 io, 7.577963878694387E7 network, 3.778877833756727E7 memory}
                     :           :        :  +- Calc(select=[y, X1]): rowcount = 349092.87696184206, cumulative cost = {1.5969861983906144E7 rows, 5.483041223185643E8 cpu, 2.21481264E8 io, 6.740140973985966E7 network, 3.778877833756727E7 memory}
                     :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 349092.87696184206, cumulative cost = {1.5620769106944302E7 rows, 5.483041223185643E8 cpu, 2.21481264E8 io, 6.740140973985966E7 network, 3.778877833756727E7 memory}
                     :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
                     :           :        :           +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                     :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                     :           :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                     :           :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                     :           :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                     :           :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                     :           :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :           :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :           :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :           :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :           :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                     :           :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                     :           :        :                 :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                     :           :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 54951.524461842106, cumulative cost = {1.6074516578906143E7 rows, 5.511329915185642E8 cpu, 2.21485548E8 io, 6.740569373985966E7 network, 3.780163033756727E7 memory}
                     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 54951.524461842106, cumulative cost = {1.6019565054444302E7 rows, 5.511329915185642E8 cpu, 2.21485548E8 io, 6.740569373985966E7 network, 3.780163033756727E7 memory}
                     :                 :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :                 +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
                     :                    +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                     :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                     :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                     :                          :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#8] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[X0]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[X0, X1])\n         +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n            :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n            +- [#6] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[10])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[13])
         :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[2])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[14])
         :              :                 :- Exchange(distribution=[hash[x]])(reuse_id=[27])
         :              :                 :  +- Reused(reference_id=[1])
         :              :                 +- Exchange(distribution=[hash[y]])
         :              :                    +- Calc(select=[y, x0])(reuse_id=[3])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :              :                          :- Reused(reference_id=[1])
         :              :                          +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X1, x])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[x AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[2])
         :              :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :        :                 :- Reused(reference_id=[3])
         :              :        :                 +- Reused(reference_id=[4])
         :              :        +- Reused(reference_id=[5])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[9])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x AS X0, x AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[17])
         :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :              :           :     +- Reused(reference_id=[4])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = y)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[16])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[8])
         :              :                    +- Reused(reference_id=[6])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, X1])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[7])
         :                       +- Reused(reference_id=[8])
         :- Exchange(distribution=[broadcast])(reuse_id=[12])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- Reused(reference_id=[9])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[6])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[3])
         :              :        :           +- Reused(reference_id=[5])
         :              :        +- Reused(reference_id=[8])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[11])
         :                       +- Reused(reference_id=[5])
         :- Exchange(distribution=[hash[y]])
         :  +- Calc(select=[y, X0])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[X0]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[2,1,3,2,1,0,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, y, X0], build=[right])\n:  :  :        :- [#4] Exchange(distribution=[hash[x]])\n:  :  :        +- [#10] Exchange(distribution=[hash[y]])\n:  :  +- Calc(select=[X0, y AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[y, X0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X1 AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X1, x, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right])\n      :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Calc(select=[x, y])(reuse_id=[24])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[8])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[15])
         :              :  +- Calc(select=[X1, y])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[13])
         :              :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :        :              +- Reused(reference_id=[14])
         :              :        +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]])
         :              :  +- Calc(select=[y, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[15])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[21])
         :              :  +- Calc(select=[x, y0])(reuse_id=[19])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[5])
         :              :- Calc(select=[y, X0])(reuse_id=[22])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :     :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :     :  +- Calc(select=[x, y])(reuse_id=[25])
         :              :     :     +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :     :        :- Reused(reference_id=[1])
         :              :     :        +- Reused(reference_id=[8])
         :              :     +- Exchange(distribution=[broadcast])
         :              :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :              :           +- Exchange(distribution=[hash[X0, X1]])
         :              :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 +- Union(all=[true], union=[X0, X1])
         :              :                    :- Calc(select=[x0 AS X0, x AS X1])
         :              :                    :  +- Reused(reference_id=[16])
         :              :                    +- Calc(select=[x0 AS X0, x0 AS X1])(reuse_id=[20])
         :              :                       +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[8])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[28])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[21])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Reused(reference_id=[22])
         :- Reused(reference_id=[23])
         :- Reused(reference_id=[4])
         :- Reused(reference_id=[8])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[4,3,3,2,3,4,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[y0 AS X0, x0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, x0, y00], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[x]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[y0]])\n:  :  :  +- Calc(select=[y0 AS X0, x AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :- Calc(select=[x, y0])\n:  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :     :- [#10] Calc(select=[x, y0])\n:  :  :        :     +- [#9] Exchange(distribution=[broadcast])\n:  :  :        +- [#9] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, x AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:  :        :- [#3] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[y01 AS X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y01], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x0]])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y00]])\n])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Reused(reference_id=[24])
                  :- Exchange(distribution=[hash[y00]])
                  :  +- Calc(select=[x, y0 AS y00])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])(reuse_id=[26])
                  :        :  +- Reused(reference_id=[25])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x0]])
                  :  +- Calc(select=[x0, y0 AS y01])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])
                  :        :  +- Calc(select=[y, x0])
                  :        :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
                  :        :        :- Reused(reference_id=[27])
                  :        :        +- Exchange(distribution=[hash[y0]])
                  :        :           +- Reused(reference_id=[19])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[28])
                  :- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[y0]])
                  :  +- Calc(select=[x, y0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
                  :        :- Calc(select=[x, y0])(reuse_id=[29])
                  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :     :- Exchange(distribution=[hash[y]])
                  :        :     :  +- Reused(reference_id=[1])
                  :        :     +- Exchange(distribution=[hash[x]])
                  :        :        +- Reused(reference_id=[25])
                  :        +- Reused(reference_id=[8])
                  :- Reused(reference_id=[8])
                  :- Reused(reference_id=[29])
                  +- Reused(reference_id=[8])

Job has been submitted with JobID e4ca22a160082dfddd6c77a04b1ce1b3
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 34f03624_e669_4afc_a666_dee6d8488b16

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalUnion(all=[false])
   :  :        :  :  :- LogicalUnion(all=[false])
   :  :        :  :  :  :- LogicalProject(X0=[$9], X1=[$1])
   :  :        :  :  :  :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :  :  :  :     :- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :  :     :  :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :  :     :  :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  :     +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :        :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :  :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :        :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$11], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $12)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($9, $10)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $9)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalUnion(all=[false])
   :           :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
   :           :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :           :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :  +- LogicalUnion(all=[false])
   :           :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalUnion(all=[false])
   :           :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$9])
   :           :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :           :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :- LogicalUnion(all=[false])
   :           :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :           :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :           :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :- LogicalUnion(all=[false])
   :                 :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalUnion(all=[false])
            :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     +- LogicalUnion(all=[false])
            :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
            :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
            :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :  +- LogicalUnion(all=[false])
            :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  +- LogicalProject(X0=[$1], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalUnion(all=[false])
            :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$9])
            :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
            :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :- LogicalUnion(all=[false])
            :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
            :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
            :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
                  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :- LogicalUnion(all=[false])
                  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11279.012730343027, cumulative cost = {2.686453256100885E8 rows, 7.734790415014548E9 cpu, 3.876168984E9 io, 9.491477490291196E8 network, 5.584798375903494E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 11279.012730343027, cumulative cost = {2.6863404659735817E8 rows, 7.734609950810863E9 cpu, 3.876168984E9 io, 9.491477490291196E8 network, 5.577579807756075E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11279.012730343027, cumulative cost = {2.686227675846278E8 rows, 7.732624844570322E9 cpu, 3.876168984E9 io, 9.488770527235913E8 network, 5.577579807756075E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 62222.42835926408, cumulative cost = {2.6861148857189745E8 rows, 7.731629285716574E9 cpu, 3.876168984E9 io, 9.488770527235913E8 network, 5.570361239608655E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 60604.44421248837, cumulative cost = {1.770159030268711E8 rows, 5.270052610898638E9 cpu, 2.547193632E9 io, 6.507145366504521E8 network, 3.705265455913062E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 1872.3077356205672, cumulative cost = {8.182810861557767E7 rows, 2.7264624692339897E9 cpu, 1.162852368E9 io, 3.431696724654131E8 network, 1.815533181893701E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 1872.3077356205672, cumulative cost = {8.182623630784205E7 rows, 2.7264624692339897E9 cpu, 1.162852368E9 io, 3.431696724654131E8 network, 1.815533181893701E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 4002.375986461228, cumulative cost = {2.2653275257093128E7 rows, 5.485755636230822E8 cpu, 3.32253588E8 io, 6.78690231582057E7 network, 4.0989285927246355E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2649272881106667E7 rows, 5.479351834652483E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.0989285927246355E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.375986461228, cumulative cost = {2.2645270505120207E7 rows, 5.478711454494649E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.073313386411284E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2641268129133746E7 rows, 5.471667272758478E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.073313386411284E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 22079.72976344435, cumulative cost = {2.2637265753147285E7 rows, 5.468134515996327E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.047698180097932E7 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 1635.87225020841, cumulative cost = {6429972.898798617 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1635.87225020841, cumulative cost = {6428337.026548408 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :  :     :              :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1467.8073397014573, cumulative cost = {3241272.918813134 rows, 5771129.65228751 cpu, 5.5381992E7 io, 265888.55050506815 network, 1219796.929878577 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 1467.8073397014573, cumulative cost = {3239805.1114734327 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1467.8073397014573, cumulative cost = {3238337.3041337314 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 20443.85751323594, cumulative cost = {1.6185213124585224E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 20443.85751323594, cumulative cost = {1.6164769267071988E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 1414.4073397014572, cumulative cost = {3240400.7188131344 rows, 5636770.976434776 cpu, 5.5377732E7 io, 260346.95050506815 network, 1206972.929878577 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 1414.4073397014572, cumulative cost = {3238986.311473433 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 1414.4073397014572, cumulative cost = {3237571.9041337315 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 8479.675584342554, cumulative cost = {5.91710887430133E7 rows, 2.1777870491983414E9 cpu, 8.3059878E8 io, 2.753006493072074E8 network, 1.403398992068819E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 8479.675584342554, cumulative cost = {5.9162609067428954E7 rows, 2.1777870491983414E9 cpu, 8.3059878E8 io, 2.753006493072074E8 network, 1.403398992068819E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 56174.170562283696, cumulative cost = {5.915341539184461E7 rows, 2.177277679833843E9 cpu, 8.30594496E8 io, 2.752963653072074E8 network, 1.403270472068819E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 56174.170562283696, cumulative cost = {5.9097241221282326E7 rows, 2.1763788931048465E9 cpu, 8.30594496E8 io, 2.752963653072074E8 network, 1.3673190029089576E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 56174.170562283696, cumulative cost = {5.904106705072004E7 rows, 2.1664922390858846E9 cpu, 8.30594496E8 io, 2.739481852137126E8 network, 1.3673190029089576E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 309893.55070498947, cumulative cost = {5.898489288015776E7 rows, 2.161533942274605E9 cpu, 8.30594496E8 io, 2.739481852137126E8 network, 1.331367533749096E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 242402.98045498948, cumulative cost = {4.819110508395278E7 rows, 1.9208731805639E9 cpu, 6.64478016E8 io, 2.4652902437371257E8 network, 1.079175322149096E8 memory}
         :  :           :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 173745.6684862395, cumulative cost = {3.1632003227685288E7 rows, 1.219045857473445E9 cpu, 4.429965E8 io, 1.5400822635871258E8 network, 6.28962894799096E7 memory}
         :  :           :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 69887.2206375, cumulative cost = {2.1368104587537497E7 rows, 1.0517719625716373E9 cpu, 2.76867924E8 io, 1.37112787851E8 network, 4.2174780319E7 memory}
         :  :           :           :  :  :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 60871.20406875, cumulative cost = {1.2403097134512497E7 rows, 5.624467639539999E8 cpu, 1.6611648E8 io, 7.3423960251E7 network, 2.2753971919E7 memory}
         :  :           :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, x0, y00], build=[right]): rowcount = 60871.20406875, cumulative cost = {1.2342225930443747E7 rows, 5.624467639539999E8 cpu, 1.6611648E8 io, 7.3423960251E7 network, 2.2753971919E7 memory}
         :  :           :           :  :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :  +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     +- Exchange(distribution=[hash[y0]]): rowcount = 59749.77712499999, cumulative cost = {8936123.976374997 rows, 4.987552997369999E8 cpu, 1.1074716E8 io, 6.5118538251E7 network, 1.94079564E7 memory}
         :  :           :           :  :  :  :        +- Calc(select=[x, y0]): rowcount = 59749.77712499999, cumulative cost = {8876374.199249998 rows, 4.8871733717999995E8 cpu, 1.1074716E8 io, 6.36845436E7 network, 1.94079564E7 memory}
         :  :           :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 59749.77712499999, cumulative cost = {8816624.422124999 rows, 4.8871733717999995E8 cpu, 1.1074716E8 io, 6.36845436E7 network, 1.94079564E7 memory}
         :  :           :           :  :  :  :              :- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :           :           :  :  :  :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :           :           :  :  :  :              :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :           :           :  :  :  :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :     +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :           :  :  :  :              :        +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :  :  :              :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :  :  :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 9016.01656875, cumulative cost = {8895120.232387498 rows, 4.8925531139699996E8 cpu, 1.10751444E8 io, 6.36888276E7 network, 1.94208084E7 memory}
         :  :           :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 9016.01656875, cumulative cost = {8886104.215818748 rows, 4.8925531139699996E8 cpu, 1.10751444E8 io, 6.36888276E7 network, 1.94208084E7 memory}
         :  :           :           :  :  :        :- Calc(select=[x, y0]): rowcount = 59749.77712499999, cumulative cost = {8876374.199249998 rows, 4.8871733717999995E8 cpu, 1.1074716E8 io, 6.36845436E7 network, 1.94079564E7 memory}
         :  :           :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 59749.77712499999, cumulative cost = {8816624.422124999 rows, 4.8871733717999995E8 cpu, 1.1074716E8 io, 6.36845436E7 network, 1.94079564E7 memory}
         :  :           :           :  :  :        :     :- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :           :           :  :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :           :           :  :  :        :     :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :           :           :  :  :        :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :     +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :           :  :  :        :     :        +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :  :        :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :  :        :     :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  +- Calc(select=[X0, x AS X1]): rowcount = 103858.44784873951, cumulative cost = {1.009015297166155E7 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :           :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 103858.44784873951, cumulative cost = {9986294.523812812 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :           :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :           :  :        :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346278.0023249301, cumulative cost = {6536333.125964073 rows, 8.4897866814722E7 cpu, 1.10754996E8 io, 8584474.907712582 network, 1326404.7609096025 memory}
         :  :           :           :  :           +- Calc(select=[x, X0]): rowcount = 346278.0023249301, cumulative cost = {6190055.123639143 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :           :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.0023249301, cumulative cost = {5843777.121314213 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :           :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :  :           :           :  :                    +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :           :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :           :           :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :  :           :           :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :  :           :           :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :  :           :           :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :  :           :           :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :           :           :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :           :           :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :           :           :  :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :           :           :  :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :  :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[y01 AS X0, x AS X1]): rowcount = 68657.31196874999, cumulative cost = {1.6316698875812503E7 rows, 7.0158492011E8 cpu, 2.21481516E8 io, 9.252079801499999E7 network, 4.5021242735E7 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y01], build=[right]): rowcount = 68657.31196874999, cumulative cost = {1.6248041563843753E7 rows, 7.0158492011E8 cpu, 2.21481516E8 io, 9.252079801499999E7 network, 4.5021242735E7 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x0]]): rowcount = 111603.76312499998, cumulative cost = {1.2833281301875003E7 rows, 6.21260031605E8 cpu, 1.66107936E8 io, 8.420983441499999E7 network, 3.875858E7 memory}
         :  :           :           :           +- Calc(select=[x0, y0 AS y01]): rowcount = 111603.76312499998, cumulative cost = {1.2721677538750002E7 rows, 6.025105994E8 cpu, 1.66107936E8 io, 8.15313441E7 network, 3.875858E7 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 111603.76312499998, cumulative cost = {1.2610073775625002E7 rows, 6.025105994E8 cpu, 1.66107936E8 io, 8.15313441E7 network, 3.875858E7 memory}
         :  :           :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :  :           :           :                 :  +- Calc(select=[y, x0]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :           :                 :        :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :           :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :        +- Exchange(distribution=[hash[y0]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :           :                 :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :           :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 67490.57024999999, cumulative cost = {1.04838942455E7 rows, 2.4035086815999997E8 cpu, 1.6611648E8 io, 2.7419160839999996E7 network, 2.5219221159999996E7 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 67490.57024999999, cumulative cost = {1.041640367525E7 rows, 2.4035086815999997E8 cpu, 1.6611648E8 io, 2.7419160839999996E7 network, 2.5219221159999996E7 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :                 :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y00]]): rowcount = 103825.48499999999, cumulative cost = {7002810.155 rows, 1.6008820587999997E8 cpu, 1.107429E8 io, 1.910819724E7 network, 1.9392142E7 memory}
         :  :           :                    +- Calc(select=[x, y0 AS y00]): rowcount = 103825.48499999999, cumulative cost = {6898984.67 rows, 1.4264552439999998E8 cpu, 1.107429E8 io, 1.66163856E7 network, 1.9392142E7 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 103825.48499999999, cumulative cost = {6795159.185 rows, 1.4264552439999998E8 cpu, 1.107429E8 io, 1.66163856E7 network, 1.9392142E7 memory}
         :  :           :                          :- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :                          :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                          :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                          :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                          :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :                          :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :                             +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 58732.1364768678, cumulative cost = {9.512718996708095E7 rows, 2.543529537220435E9 cpu, 1.384341264E9 io, 3.07544864185039E8 network, 1.8897322740193608E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], build=[right]): rowcount = 58732.1364768678, cumulative cost = {9.506845783060408E7 rows, 2.543529537220435E9 cpu, 1.384341264E9 io, 3.07544864185039E8 network, 1.8897322740193608E8 memory}
         :        :- Exchange(distribution=[hash[y]]): rowcount = 346658.45639796916, cumulative cost = {2.6000304626287036E7 rows, 6.253026353058326E8 cpu, 3.87622884E8 io, 7.618882611175697E7 network, 4.1213418982488185E7 memory}
         :        :  +- Calc(select=[y, X0]): rowcount = 346658.45639796916, cumulative cost = {2.5653646169889066E7 rows, 5.670640146309738E8 cpu, 3.87622884E8 io, 6.78690231582057E7 network, 4.1213418982488185E7 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346658.45639796916, cumulative cost = {2.5306987713491097E7 rows, 5.670640146309738E8 cpu, 3.87622884E8 io, 6.78690231582057E7 network, 4.1213418982488185E7 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 4002.375986461228, cumulative cost = {2.2653275257093128E7 rows, 5.485755636230822E8 cpu, 3.32253588E8 io, 6.78690231582057E7 network, 4.0989285927246355E7 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2649272881106667E7 rows, 5.479351834652483E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.0989285927246355E7 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.375986461228, cumulative cost = {2.2645270505120207E7 rows, 5.478711454494649E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.073313386411284E7 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2641268129133746E7 rows, 5.471667272758478E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.073313386411284E7 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 22079.72976344435, cumulative cost = {2.2637265753147285E7 rows, 5.468134515996327E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.047698180097932E7 memory}
         :        :                       :- Calc(select=[X0, X00 AS X1]): rowcount = 1635.87225020841, cumulative cost = {6429972.898798617 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :        :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1635.87225020841, cumulative cost = {6428337.026548408 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :        :                       :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :        :                       :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :        :                       :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :        :                       :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :        :                       :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                       :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                       :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                       :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :     +- Exchange(distribution=[broadcast]): rowcount = 1467.8073397014573, cumulative cost = {3241272.918813134 rows, 5771129.65228751 cpu, 5.5381992E7 io, 265888.55050506815 network, 1219796.929878577 memory}
         :        :                       :        +- Calc(select=[X0, X1]): rowcount = 1467.8073397014573, cumulative cost = {3239805.1114734327 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :        :                       :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1467.8073397014573, cumulative cost = {3238337.3041337314 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :        :                       :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                       :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                       :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                       :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                       :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                       :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X0, X00 AS X1]): rowcount = 20443.85751323594, cumulative cost = {1.6185213124585224E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 20443.85751323594, cumulative cost = {1.6164769267071988E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :        :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                             :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1414.4073397014572, cumulative cost = {3240400.7188131344 rows, 5636770.976434776 cpu, 5.5377732E7 io, 260346.95050506815 network, 1206972.929878577 memory}
         :        :                                +- Calc(select=[X0, x]): rowcount = 1414.4073397014572, cumulative cost = {3238986.311473433 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 1414.4073397014572, cumulative cost = {3237571.9041337315 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                                      :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X0]]): rowcount = 44889.12011448288, cumulative cost = {6.900942106784017E7 rows, 1.9150945213025029E9 cpu, 9.9671838E8 io, 2.31356038073282E8 network, 1.4524601769303685E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 44889.12011448288, cumulative cost = {6.89645319477257E7 rows, 1.9075531491232698E9 cpu, 9.9671838E8 io, 2.302786991905344E8 network, 1.4524601769303685E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 44889.12011448288, cumulative cost = {6.891964282761122E7 rows, 1.9068349232014382E9 cpu, 9.9671838E8 io, 2.302786991905344E8 network, 1.4237311400570995E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 44889.12011448288, cumulative cost = {6.887475370749675E7 rows, 1.8989344380612893E9 cpu, 9.9671838E8 io, 2.2920136030778682E8 network, 1.4237311400570995E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 247637.81433810518, cumulative cost = {6.882986458738227E7 rows, 1.8949722330318797E9 cpu, 9.9671838E8 io, 2.2920136030778682E8 network, 1.3950021031838304E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 192686.28987626306, cumulative cost = {5.250771019413803E7 rows, 1.3435916036989772E9 cpu, 7.75232832E8 io, 1.6179566656792718E8 network, 1.0169857998081577E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 88413.62083198677, cumulative cost = {3.2442292955305226E7 rows, 6.704409827452525E8 cpu, 4.98382248E8 io, 7.77106057809833E7 network, 4.45305116432485E7 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 80360.2035345988, cumulative cost = {2.6035536059433207E7 rows, 6.391028635395188E8 cpu, 3.87622464E8 io, 7.724067341322228E7 network, 4.274323823349792E7 memory}
         :                       :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :                       :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :                       :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                       :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                       :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                       :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                       :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :                       :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :                       :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :                       :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :                       :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :                       :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :                       :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :                       :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                       :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                       :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 59908.604797387976, cumulative cost = {9819902.848689286 rows, 1.0336304695797622E8 cpu, 1.6612482E8 io, 1.0051049135343097E7 network, 4761066.53410876 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 59908.604797387976, cumulative cost = {9759994.243891899 rows, 1.0336304695797622E8 cpu, 1.6612482E8 io, 1.0051049135343097E7 network, 4761066.53410876 memory}
         :                       :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :  :  :        :  +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 53332.44864925319, cumulative cost = {6354854.889094511 rows, 3.972292136878219E7 cpu, 1.107555E8 io, 1745627.1353430978 network, 1774421.4097505813 memory}
         :                       :  :  :           +- Calc(select=[y, X0]): rowcount = 53332.44864925319, cumulative cost = {6301522.440445258 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 53332.44864925319, cumulative cost = {6248189.9917960055 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
         :                       :  :  :                 :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
         :                       :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :                       :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :                       :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :                       :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :                       :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y AS X1]): rowcount = 8053.417297387978, cumulative cost = {6318343.275040035 rows, 3.1249705584901687E7 cpu, 1.10759784E8 io, 469932.3677610212 network, 1787273.4097505813 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 8053.417297387978, cumulative cost = {6310289.857742647 rows, 3.1249705584901687E7 cpu, 1.10759784E8 io, 469932.3677610212 network, 1787273.4097505813 memory}
         :                       :  :        :- Calc(select=[y, X0]): rowcount = 53332.44864925319, cumulative cost = {6301522.440445258 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 53332.44864925319, cumulative cost = {6248189.9917960055 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
         :                       :  :        :     :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
         :                       :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :                       :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :                       :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :                       :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :                       :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 104272.6690442763, cumulative cost = {1.9872730948956538E7 rows, 6.729579346638485E8 cpu, 2.76850584E8 io, 8.408506078694387E7 network, 5.716806833756727E7 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 104272.6690442763, cumulative cost = {1.9768458279912263E7 rows, 6.729579346638485E8 cpu, 2.76850584E8 io, 8.408506078694387E7 network, 5.716806833756727E7 memory}
         :                       :        :- Exchange(distribution=[hash[y]]): rowcount = 349092.87696184206, cumulative cost = {1.6318954860867986E7 rows, 6.069517256481538E8 cpu, 2.21481264E8 io, 7.577963878694387E7 network, 3.778877833756727E7 memory}
         :                       :        :  +- Calc(select=[y, X1]): rowcount = 349092.87696184206, cumulative cost = {1.5969861983906144E7 rows, 5.483041223185643E8 cpu, 2.21481264E8 io, 6.740140973985966E7 network, 3.778877833756727E7 memory}
         :                       :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 349092.87696184206, cumulative cost = {1.5620769106944302E7 rows, 5.483041223185643E8 cpu, 2.21481264E8 io, 6.740140973985966E7 network, 3.778877833756727E7 memory}
         :                       :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
         :                       :        :           +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                       :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                       :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                       :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                       :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                       :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                       :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :        :                 :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 54951.524461842106, cumulative cost = {1.6074516578906143E7 rows, 5.511329915185642E8 cpu, 2.21485548E8 io, 6.740569373985966E7 network, 3.780163033756727E7 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 54951.524461842106, cumulative cost = {1.6019565054444302E7 rows, 5.511329915185642E8 cpu, 2.21485548E8 io, 6.740569373985966E7 network, 3.780163033756727E7 memory}
         :                             :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                             :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                             :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
         :                                +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                                      :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1617.98414677571, cumulative cost = {9.15333631166671E7 rows, 2.461514452389577E9 cpu, 1.328975352E9 io, 2.981625160731392E8 network, 1.8650957836955932E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 1617.98414677571, cumulative cost = {9.153174513252033E7 rows, 2.461514452389577E9 cpu, 1.328975352E9 io, 2.981625160731392E8 network, 1.8650957836955932E8 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 4002.7929613323013, cumulative cost = {2.2551355664613508E7 rows, 5.534594498175634E8 cpu, 3.3225294E8 io, 6.78797848826048E7 network, 4.102730827068786E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.2547352871652175E7 rows, 5.528190029437503E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.102730827068786E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.7929613323013, cumulative cost = {2.254335007869084E7 rows, 5.52754958256369E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.07711295211626E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.253934728572951E7 rows, 5.520504666951745E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.07711295211626E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 22082.030070187793, cumulative cost = {2.2535344492768176E7 rows, 5.516971542140515E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.0514950771637335E7 memory}
               :              :- Calc(select=[X0, X10 AS X1]): rowcount = 20445.007666607664, cumulative cost = {1.6134251344242299E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 20445.007666607664, cumulative cost = {1.611380633657569E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :              :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :              :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :              :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :              :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :              :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 1422.0750288462589, cumulative cost = {3189436.6381634637 rows, 8078380.879230922 cpu, 5.5377408E7 io, 265717.80530771165 network, 1225528.0246154743 memory}
               :              :        +- Calc(select=[X1, x]): rowcount = 1422.0750288462589, cumulative cost = {3188014.5631346176 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1422.0750288462589, cumulative cost = {3186592.4881057716 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :              :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :              :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :              :              :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :              :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :              :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, X10 AS X1]): rowcount = 1637.02240358013, cumulative cost = {6379011.11845569 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1637.02240358013, cumulative cost = {6377374.09605211 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
               :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
               :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
               :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
               :                    :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                    :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                    :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                    :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                    :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 1475.475028846259, cumulative cost = {3190308.838163465 rows, 8213097.380577081 cpu, 5.5381668E7 io, 271259.4053077117 network, 1238352.0246154743 memory}
               :                       +- Calc(select=[X0, X1]): rowcount = 1475.475028846259, cumulative cost = {3188833.3631346184 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1475.475028846259, cumulative cost = {3187357.888105772 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :                             :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                             :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                             :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                             :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[X0, X1]): rowcount = 6783.768017172432, cumulative cost = {6.897877148376004E7 rows, 1.9079687100841856E9 cpu, 9.96722412E8 io, 2.302827311905344E8 network, 1.4525811369303685E8 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 6783.768017172432, cumulative cost = {6.897198771574287E7 rows, 1.9079687100841856E9 cpu, 9.96722412E8 io, 2.302827311905344E8 network, 1.4525811369303685E8 memory}
                     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 44889.12011448288, cumulative cost = {6.89645319477257E7 rows, 1.9075531491232698E9 cpu, 9.9671838E8 io, 2.302786991905344E8 network, 1.4524601769303685E8 memory}
                     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 44889.12011448288, cumulative cost = {6.891964282761122E7 rows, 1.9068349232014382E9 cpu, 9.9671838E8 io, 2.302786991905344E8 network, 1.4237311400570995E8 memory}
                     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 44889.12011448288, cumulative cost = {6.887475370749675E7 rows, 1.8989344380612893E9 cpu, 9.9671838E8 io, 2.2920136030778682E8 network, 1.4237311400570995E8 memory}
                     :        +- Union(all=[true], union=[X0, X1]): rowcount = 247637.81433810518, cumulative cost = {6.882986458738227E7 rows, 1.8949722330318797E9 cpu, 9.9671838E8 io, 2.2920136030778682E8 network, 1.3950021031838304E8 memory}
                     :           :- Union(all=[true], union=[X0, X1]): rowcount = 192686.28987626306, cumulative cost = {5.250771019413803E7 rows, 1.3435916036989772E9 cpu, 7.75232832E8 io, 1.6179566656792718E8 network, 1.0169857998081577E8 memory}
                     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 88413.62083198677, cumulative cost = {3.2442292955305226E7 rows, 6.704409827452525E8 cpu, 4.98382248E8 io, 7.77106057809833E7 network, 4.45305116432485E7 memory}
                     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 80360.2035345988, cumulative cost = {2.6035536059433207E7 rows, 6.391028635395188E8 cpu, 3.87622464E8 io, 7.724067341322228E7 network, 4.274323823349792E7 memory}
                     :           :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                     :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                     :           :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                     :           :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                     :           :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                     :           :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                     :           :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :           :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :           :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                     :           :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                     :           :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
                     :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                     :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                     :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
                     :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
                     :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
                     :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
                     :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                     :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                     :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 59908.604797387976, cumulative cost = {9819902.848689286 rows, 1.0336304695797622E8 cpu, 1.6612482E8 io, 1.0051049135343097E7 network, 4761066.53410876 memory}
                     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 59908.604797387976, cumulative cost = {9759994.243891899 rows, 1.0336304695797622E8 cpu, 1.6612482E8 io, 1.0051049135343097E7 network, 4761066.53410876 memory}
                     :           :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                     :           :  :  :        :  +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 53332.44864925319, cumulative cost = {6354854.889094511 rows, 3.972292136878219E7 cpu, 1.107555E8 io, 1745627.1353430978 network, 1774421.4097505813 memory}
                     :           :  :  :           +- Calc(select=[y, X0]): rowcount = 53332.44864925319, cumulative cost = {6301522.440445258 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
                     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 53332.44864925319, cumulative cost = {6248189.9917960055 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
                     :           :  :  :                 :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :           :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :           :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :           :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
                     :           :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
                     :           :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
                     :           :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
                     :           :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
                     :           :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                     :           :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                     :           :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :           :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :  +- Calc(select=[X0, y AS X1]): rowcount = 8053.417297387978, cumulative cost = {6318343.275040035 rows, 3.1249705584901687E7 cpu, 1.10759784E8 io, 469932.3677610212 network, 1787273.4097505813 memory}
                     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 8053.417297387978, cumulative cost = {6310289.857742647 rows, 3.1249705584901687E7 cpu, 1.10759784E8 io, 469932.3677610212 network, 1787273.4097505813 memory}
                     :           :  :        :- Calc(select=[y, X0]): rowcount = 53332.44864925319, cumulative cost = {6301522.440445258 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
                     :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 53332.44864925319, cumulative cost = {6248189.9917960055 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
                     :           :  :        :     :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :           :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :           :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :           :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
                     :           :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
                     :           :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
                     :           :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
                     :           :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
                     :           :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                     :           :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                     :           :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :           :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 104272.6690442763, cumulative cost = {1.9872730948956538E7 rows, 6.729579346638485E8 cpu, 2.76850584E8 io, 8.408506078694387E7 network, 5.716806833756727E7 memory}
                     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 104272.6690442763, cumulative cost = {1.9768458279912263E7 rows, 6.729579346638485E8 cpu, 2.76850584E8 io, 8.408506078694387E7 network, 5.716806833756727E7 memory}
                     :           :        :- Exchange(distribution=[hash[y]]): rowcount = 349092.87696184206, cumulative cost = {1.6318954860867986E7 rows, 6.069517256481538E8 cpu, 2.21481264E8 io, 7.577963878694387E7 network, 3.778877833756727E7 memory}
                     :           :        :  +- Calc(select=[y, X1]): rowcount = 349092.87696184206, cumulative cost = {1.5969861983906144E7 rows, 5.483041223185643E8 cpu, 2.21481264E8 io, 6.740140973985966E7 network, 3.778877833756727E7 memory}
                     :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 349092.87696184206, cumulative cost = {1.5620769106944302E7 rows, 5.483041223185643E8 cpu, 2.21481264E8 io, 6.740140973985966E7 network, 3.778877833756727E7 memory}
                     :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
                     :           :        :           +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                     :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                     :           :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                     :           :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                     :           :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                     :           :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                     :           :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :           :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :           :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :           :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :           :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                     :           :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                     :           :        :                 :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                     :           :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 54951.524461842106, cumulative cost = {1.6074516578906143E7 rows, 5.511329915185642E8 cpu, 2.21485548E8 io, 6.740569373985966E7 network, 3.780163033756727E7 memory}
                     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 54951.524461842106, cumulative cost = {1.6019565054444302E7 rows, 5.511329915185642E8 cpu, 2.21485548E8 io, 6.740569373985966E7 network, 3.780163033756727E7 memory}
                     :                 :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :                 +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
                     :                    +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                     :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                     :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                     :                          :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#8] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[X0]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[X0, X1])\n         +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n            :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n            +- [#6] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[10])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[13])
         :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[2])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[14])
         :              :                 :- Exchange(distribution=[hash[x]])(reuse_id=[27])
         :              :                 :  +- Reused(reference_id=[1])
         :              :                 +- Exchange(distribution=[hash[y]])
         :              :                    +- Calc(select=[y, x0])(reuse_id=[3])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :              :                          :- Reused(reference_id=[1])
         :              :                          +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X1, x])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[x AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[2])
         :              :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :        :                 :- Reused(reference_id=[3])
         :              :        :                 +- Reused(reference_id=[4])
         :              :        +- Reused(reference_id=[5])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[9])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x AS X0, x AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[17])
         :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :              :           :     +- Reused(reference_id=[4])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = y)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[16])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[8])
         :              :                    +- Reused(reference_id=[6])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, X1])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[7])
         :                       +- Reused(reference_id=[8])
         :- Exchange(distribution=[broadcast])(reuse_id=[12])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- Reused(reference_id=[9])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[6])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[3])
         :              :        :           +- Reused(reference_id=[5])
         :              :        +- Reused(reference_id=[8])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[11])
         :                       +- Reused(reference_id=[5])
         :- Exchange(distribution=[hash[y]])
         :  +- Calc(select=[y, X0])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[X0]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[2,1,3,2,1,0,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, y, X0], build=[right])\n:  :  :        :- [#4] Exchange(distribution=[hash[x]])\n:  :  :        +- [#10] Exchange(distribution=[hash[y]])\n:  :  +- Calc(select=[X0, y AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[y, X0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X1 AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X1, x, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right])\n      :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Calc(select=[x, y])(reuse_id=[24])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[8])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[15])
         :              :  +- Calc(select=[X1, y])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[13])
         :              :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :        :              +- Reused(reference_id=[14])
         :              :        +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]])
         :              :  +- Calc(select=[y, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[15])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[21])
         :              :  +- Calc(select=[x, y0])(reuse_id=[19])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[5])
         :              :- Calc(select=[y, X0])(reuse_id=[22])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :     :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :     :  +- Calc(select=[x, y])(reuse_id=[25])
         :              :     :     +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :     :        :- Reused(reference_id=[1])
         :              :     :        +- Reused(reference_id=[8])
         :              :     +- Exchange(distribution=[broadcast])
         :              :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :              :           +- Exchange(distribution=[hash[X0, X1]])
         :              :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 +- Union(all=[true], union=[X0, X1])
         :              :                    :- Calc(select=[x0 AS X0, x AS X1])
         :              :                    :  +- Reused(reference_id=[16])
         :              :                    +- Calc(select=[x0 AS X0, x0 AS X1])(reuse_id=[20])
         :              :                       +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[8])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[28])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[21])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Reused(reference_id=[22])
         :- Reused(reference_id=[23])
         :- Reused(reference_id=[4])
         :- Reused(reference_id=[8])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[4,3,3,2,3,4,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[y0 AS X0, x0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, x0, y00], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[x]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[y0]])\n:  :  :  +- Calc(select=[y0 AS X0, x AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :- Calc(select=[x, y0])\n:  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :     :- [#10] Calc(select=[x, y0])\n:  :  :        :     +- [#9] Exchange(distribution=[broadcast])\n:  :  :        +- [#9] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, x AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:  :        :- [#3] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[y01 AS X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y01], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x0]])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y00]])\n])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Reused(reference_id=[24])
                  :- Exchange(distribution=[hash[y00]])
                  :  +- Calc(select=[x, y0 AS y00])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])(reuse_id=[26])
                  :        :  +- Reused(reference_id=[25])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x0]])
                  :  +- Calc(select=[x0, y0 AS y01])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])
                  :        :  +- Calc(select=[y, x0])
                  :        :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
                  :        :        :- Reused(reference_id=[27])
                  :        :        +- Exchange(distribution=[hash[y0]])
                  :        :           +- Reused(reference_id=[19])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[28])
                  :- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[y0]])
                  :  +- Calc(select=[x, y0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
                  :        :- Calc(select=[x, y0])(reuse_id=[29])
                  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :     :- Exchange(distribution=[hash[y]])
                  :        :     :  +- Reused(reference_id=[1])
                  :        :     +- Exchange(distribution=[hash[x]])
                  :        :        +- Reused(reference_id=[25])
                  :        +- Reused(reference_id=[8])
                  :- Reused(reference_id=[8])
                  :- Reused(reference_id=[29])
                  +- Reused(reference_id=[8])

Job has been submitted with JobID 03c98f6bce260503f8b76ebfb21ad387
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: eb5b3ab1_ae59_4e7a_972e_a2fb2eca8723

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalUnion(all=[false])
   :  :        :  :  :- LogicalUnion(all=[false])
   :  :        :  :  :  :- LogicalProject(X0=[$9], X1=[$1])
   :  :        :  :  :  :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :  :  :  :     :- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :  :     :  :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :  :     :  :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  :     +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :        :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :  :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :        :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$11], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $12)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($9, $10)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $9)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalUnion(all=[false])
   :           :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
   :           :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :           :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :  +- LogicalUnion(all=[false])
   :           :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalUnion(all=[false])
   :           :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$9])
   :           :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :           :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :- LogicalUnion(all=[false])
   :           :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :           :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :           :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :- LogicalUnion(all=[false])
   :                 :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalUnion(all=[false])
            :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     +- LogicalUnion(all=[false])
            :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
            :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
            :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :  +- LogicalUnion(all=[false])
            :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  +- LogicalProject(X0=[$1], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalUnion(all=[false])
            :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$9])
            :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
            :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :- LogicalUnion(all=[false])
            :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
            :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
            :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
                  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :- LogicalUnion(all=[false])
                  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11279.012730343027, cumulative cost = {2.686453256100885E8 rows, 7.734790415014548E9 cpu, 3.876168984E9 io, 9.491477490291196E8 network, 5.584798375903494E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 11279.012730343027, cumulative cost = {2.6863404659735817E8 rows, 7.734609950810863E9 cpu, 3.876168984E9 io, 9.491477490291196E8 network, 5.577579807756075E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11279.012730343027, cumulative cost = {2.686227675846278E8 rows, 7.732624844570322E9 cpu, 3.876168984E9 io, 9.488770527235913E8 network, 5.577579807756075E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 62222.42835926408, cumulative cost = {2.6861148857189745E8 rows, 7.731629285716574E9 cpu, 3.876168984E9 io, 9.488770527235913E8 network, 5.570361239608655E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 60604.44421248837, cumulative cost = {1.770159030268711E8 rows, 5.270052610898638E9 cpu, 2.547193632E9 io, 6.507145366504521E8 network, 3.705265455913062E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 1872.3077356205672, cumulative cost = {8.182810861557767E7 rows, 2.7264624692339897E9 cpu, 1.162852368E9 io, 3.431696724654131E8 network, 1.815533181893701E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 1872.3077356205672, cumulative cost = {8.182623630784205E7 rows, 2.7264624692339897E9 cpu, 1.162852368E9 io, 3.431696724654131E8 network, 1.815533181893701E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 4002.375986461228, cumulative cost = {2.2653275257093128E7 rows, 5.485755636230822E8 cpu, 3.32253588E8 io, 6.78690231582057E7 network, 4.0989285927246355E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2649272881106667E7 rows, 5.479351834652483E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.0989285927246355E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.375986461228, cumulative cost = {2.2645270505120207E7 rows, 5.478711454494649E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.073313386411284E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2641268129133746E7 rows, 5.471667272758478E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.073313386411284E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 22079.72976344435, cumulative cost = {2.2637265753147285E7 rows, 5.468134515996327E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.047698180097932E7 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 1635.87225020841, cumulative cost = {6429972.898798617 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1635.87225020841, cumulative cost = {6428337.026548408 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :  :     :              :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1467.8073397014573, cumulative cost = {3241272.918813134 rows, 5771129.65228751 cpu, 5.5381992E7 io, 265888.55050506815 network, 1219796.929878577 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 1467.8073397014573, cumulative cost = {3239805.1114734327 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1467.8073397014573, cumulative cost = {3238337.3041337314 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 20443.85751323594, cumulative cost = {1.6185213124585224E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 20443.85751323594, cumulative cost = {1.6164769267071988E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 1414.4073397014572, cumulative cost = {3240400.7188131344 rows, 5636770.976434776 cpu, 5.5377732E7 io, 260346.95050506815 network, 1206972.929878577 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 1414.4073397014572, cumulative cost = {3238986.311473433 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 1414.4073397014572, cumulative cost = {3237571.9041337315 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 8479.675584342554, cumulative cost = {5.91710887430133E7 rows, 2.1777870491983414E9 cpu, 8.3059878E8 io, 2.753006493072074E8 network, 1.403398992068819E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 8479.675584342554, cumulative cost = {5.9162609067428954E7 rows, 2.1777870491983414E9 cpu, 8.3059878E8 io, 2.753006493072074E8 network, 1.403398992068819E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 56174.170562283696, cumulative cost = {5.915341539184461E7 rows, 2.177277679833843E9 cpu, 8.30594496E8 io, 2.752963653072074E8 network, 1.403270472068819E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 56174.170562283696, cumulative cost = {5.9097241221282326E7 rows, 2.1763788931048465E9 cpu, 8.30594496E8 io, 2.752963653072074E8 network, 1.3673190029089576E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 56174.170562283696, cumulative cost = {5.904106705072004E7 rows, 2.1664922390858846E9 cpu, 8.30594496E8 io, 2.739481852137126E8 network, 1.3673190029089576E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 309893.55070498947, cumulative cost = {5.898489288015776E7 rows, 2.161533942274605E9 cpu, 8.30594496E8 io, 2.739481852137126E8 network, 1.331367533749096E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 242402.98045498948, cumulative cost = {4.819110508395278E7 rows, 1.9208731805639E9 cpu, 6.64478016E8 io, 2.4652902437371257E8 network, 1.079175322149096E8 memory}
         :  :           :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 173745.6684862395, cumulative cost = {3.1632003227685288E7 rows, 1.219045857473445E9 cpu, 4.429965E8 io, 1.5400822635871258E8 network, 6.28962894799096E7 memory}
         :  :           :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 69887.2206375, cumulative cost = {2.1368104587537497E7 rows, 1.0517719625716373E9 cpu, 2.76867924E8 io, 1.37112787851E8 network, 4.2174780319E7 memory}
         :  :           :           :  :  :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 60871.20406875, cumulative cost = {1.2403097134512497E7 rows, 5.624467639539999E8 cpu, 1.6611648E8 io, 7.3423960251E7 network, 2.2753971919E7 memory}
         :  :           :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, x0, y00], build=[right]): rowcount = 60871.20406875, cumulative cost = {1.2342225930443747E7 rows, 5.624467639539999E8 cpu, 1.6611648E8 io, 7.3423960251E7 network, 2.2753971919E7 memory}
         :  :           :           :  :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :  +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     +- Exchange(distribution=[hash[y0]]): rowcount = 59749.77712499999, cumulative cost = {8936123.976374997 rows, 4.987552997369999E8 cpu, 1.1074716E8 io, 6.5118538251E7 network, 1.94079564E7 memory}
         :  :           :           :  :  :  :        +- Calc(select=[x, y0]): rowcount = 59749.77712499999, cumulative cost = {8876374.199249998 rows, 4.8871733717999995E8 cpu, 1.1074716E8 io, 6.36845436E7 network, 1.94079564E7 memory}
         :  :           :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 59749.77712499999, cumulative cost = {8816624.422124999 rows, 4.8871733717999995E8 cpu, 1.1074716E8 io, 6.36845436E7 network, 1.94079564E7 memory}
         :  :           :           :  :  :  :              :- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :           :           :  :  :  :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :           :           :  :  :  :              :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :           :           :  :  :  :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :     +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :           :  :  :  :              :        +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :  :  :              :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :  :  :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 9016.01656875, cumulative cost = {8895120.232387498 rows, 4.8925531139699996E8 cpu, 1.10751444E8 io, 6.36888276E7 network, 1.94208084E7 memory}
         :  :           :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 9016.01656875, cumulative cost = {8886104.215818748 rows, 4.8925531139699996E8 cpu, 1.10751444E8 io, 6.36888276E7 network, 1.94208084E7 memory}
         :  :           :           :  :  :        :- Calc(select=[x, y0]): rowcount = 59749.77712499999, cumulative cost = {8876374.199249998 rows, 4.8871733717999995E8 cpu, 1.1074716E8 io, 6.36845436E7 network, 1.94079564E7 memory}
         :  :           :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 59749.77712499999, cumulative cost = {8816624.422124999 rows, 4.8871733717999995E8 cpu, 1.1074716E8 io, 6.36845436E7 network, 1.94079564E7 memory}
         :  :           :           :  :  :        :     :- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :           :           :  :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :           :           :  :  :        :     :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :           :           :  :  :        :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :     +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :           :  :  :        :     :        +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :  :        :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :  :        :     :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  +- Calc(select=[X0, x AS X1]): rowcount = 103858.44784873951, cumulative cost = {1.009015297166155E7 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :           :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 103858.44784873951, cumulative cost = {9986294.523812812 rows, 1.6710014923332143E8 cpu, 1.66128576E8 io, 1.689543850771258E7 network, 2.07215091609096E7 memory}
         :  :           :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :           :  :        :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346278.0023249301, cumulative cost = {6536333.125964073 rows, 8.4897866814722E7 cpu, 1.10754996E8 io, 8584474.907712582 network, 1326404.7609096025 memory}
         :  :           :           :  :           +- Calc(select=[x, X0]): rowcount = 346278.0023249301, cumulative cost = {6190055.123639143 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :           :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.0023249301, cumulative cost = {5843777.121314213 rows, 2.6723162424133744E7 cpu, 1.10754996E8 io, 273802.8519142598 network, 1326404.7609096025 memory}
         :  :           :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :  :           :           :  :                    +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :           :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :  :           :           :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :  :           :           :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :  :           :           :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :  :           :           :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :  :           :           :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :           :           :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :           :           :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :           :           :  :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :  :           :           :  :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :  :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :           :           :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[y01 AS X0, x AS X1]): rowcount = 68657.31196874999, cumulative cost = {1.6316698875812503E7 rows, 7.0158492011E8 cpu, 2.21481516E8 io, 9.252079801499999E7 network, 4.5021242735E7 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y01], build=[right]): rowcount = 68657.31196874999, cumulative cost = {1.6248041563843753E7 rows, 7.0158492011E8 cpu, 2.21481516E8 io, 9.252079801499999E7 network, 4.5021242735E7 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x0]]): rowcount = 111603.76312499998, cumulative cost = {1.2833281301875003E7 rows, 6.21260031605E8 cpu, 1.66107936E8 io, 8.420983441499999E7 network, 3.875858E7 memory}
         :  :           :           :           +- Calc(select=[x0, y0 AS y01]): rowcount = 111603.76312499998, cumulative cost = {1.2721677538750002E7 rows, 6.025105994E8 cpu, 1.66107936E8 io, 8.15313441E7 network, 3.875858E7 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 111603.76312499998, cumulative cost = {1.2610073775625002E7 rows, 6.025105994E8 cpu, 1.66107936E8 io, 8.15313441E7 network, 3.875858E7 memory}
         :  :           :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :  :           :           :                 :  +- Calc(select=[y, x0]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :           :           :                 :        :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :           :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :        +- Exchange(distribution=[hash[y0]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :           :                 :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :           :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 67490.57024999999, cumulative cost = {1.04838942455E7 rows, 2.4035086815999997E8 cpu, 1.6611648E8 io, 2.7419160839999996E7 network, 2.5219221159999996E7 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 67490.57024999999, cumulative cost = {1.041640367525E7 rows, 2.4035086815999997E8 cpu, 1.6611648E8 io, 2.7419160839999996E7 network, 2.5219221159999996E7 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :                 :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y00]]): rowcount = 103825.48499999999, cumulative cost = {7002810.155 rows, 1.6008820587999997E8 cpu, 1.107429E8 io, 1.910819724E7 network, 1.9392142E7 memory}
         :  :           :                    +- Calc(select=[x, y0 AS y00]): rowcount = 103825.48499999999, cumulative cost = {6898984.67 rows, 1.4264552439999998E8 cpu, 1.107429E8 io, 1.66163856E7 network, 1.9392142E7 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 103825.48499999999, cumulative cost = {6795159.185 rows, 1.4264552439999998E8 cpu, 1.107429E8 io, 1.66163856E7 network, 1.9392142E7 memory}
         :  :           :                          :- Exchange(distribution=[hash[y]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :           :                          :  +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                          :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :           :                          :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                          :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :           :                          :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :           :                             +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 58732.1364768678, cumulative cost = {9.512718996708095E7 rows, 2.543529537220435E9 cpu, 1.384341264E9 io, 3.07544864185039E8 network, 1.8897322740193608E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], build=[right]): rowcount = 58732.1364768678, cumulative cost = {9.506845783060408E7 rows, 2.543529537220435E9 cpu, 1.384341264E9 io, 3.07544864185039E8 network, 1.8897322740193608E8 memory}
         :        :- Exchange(distribution=[hash[y]]): rowcount = 346658.45639796916, cumulative cost = {2.6000304626287036E7 rows, 6.253026353058326E8 cpu, 3.87622884E8 io, 7.618882611175697E7 network, 4.1213418982488185E7 memory}
         :        :  +- Calc(select=[y, X0]): rowcount = 346658.45639796916, cumulative cost = {2.5653646169889066E7 rows, 5.670640146309738E8 cpu, 3.87622884E8 io, 6.78690231582057E7 network, 4.1213418982488185E7 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346658.45639796916, cumulative cost = {2.5306987713491097E7 rows, 5.670640146309738E8 cpu, 3.87622884E8 io, 6.78690231582057E7 network, 4.1213418982488185E7 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 4002.375986461228, cumulative cost = {2.2653275257093128E7 rows, 5.485755636230822E8 cpu, 3.32253588E8 io, 6.78690231582057E7 network, 4.0989285927246355E7 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2649272881106667E7 rows, 5.479351834652483E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.0989285927246355E7 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.375986461228, cumulative cost = {2.2645270505120207E7 rows, 5.478711454494649E8 cpu, 3.32253588E8 io, 6.777296613453063E7 network, 4.073313386411284E7 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.375986461228, cumulative cost = {2.2641268129133746E7 rows, 5.471667272758478E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.073313386411284E7 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 22079.72976344435, cumulative cost = {2.2637265753147285E7 rows, 5.468134515996327E8 cpu, 3.32253588E8 io, 6.767690911085556E7 network, 4.047698180097932E7 memory}
         :        :                       :- Calc(select=[X0, X00 AS X1]): rowcount = 1635.87225020841, cumulative cost = {6429972.898798617 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :        :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1635.87225020841, cumulative cost = {6428337.026548408 rows, 1.3750559680842709E7 cpu, 1.10763912E8 io, 500740.7343855788 network, 2535035.121597915 memory}
         :        :                       :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :        :                       :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :        :                       :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :        :                       :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :        :                       :     :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :        :                       :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                       :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                       :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :                       :     :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                       :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :     +- Exchange(distribution=[broadcast]): rowcount = 1467.8073397014573, cumulative cost = {3241272.918813134 rows, 5771129.65228751 cpu, 5.5381992E7 io, 265888.55050506815 network, 1219796.929878577 memory}
         :        :                       :        +- Calc(select=[X0, X1]): rowcount = 1467.8073397014573, cumulative cost = {3239805.1114734327 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :        :                       :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1467.8073397014573, cumulative cost = {3238337.3041337314 rows, 5536280.477935277 cpu, 5.5381992E7 io, 230661.17435223318 network, 1219796.929878577 memory}
         :        :                       :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                       :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                       :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                       :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                       :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                       :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X0, X00 AS X1]): rowcount = 20443.85751323594, cumulative cost = {1.6185213124585224E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 20443.85751323594, cumulative cost = {1.6164769267071988E7 rows, 5.330408121890266E8 cpu, 2.21489676E8 io, 6.717616837646998E7 network, 3.794194667938141E7 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :        :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :        :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                             :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1414.4073397014572, cumulative cost = {3240400.7188131344 rows, 5636770.976434776 cpu, 5.5377732E7 io, 260346.95050506815 network, 1206972.929878577 memory}
         :        :                                +- Calc(select=[X0, x]): rowcount = 1414.4073397014572, cumulative cost = {3238986.311473433 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 1414.4073397014572, cumulative cost = {3237571.9041337315 rows, 5410465.802082542 cpu, 5.5377732E7 io, 226401.17435223318 network, 1206972.929878577 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                                      :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :        :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X0]]): rowcount = 44889.12011448288, cumulative cost = {6.900942106784017E7 rows, 1.9150945213025029E9 cpu, 9.9671838E8 io, 2.31356038073282E8 network, 1.4524601769303685E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 44889.12011448288, cumulative cost = {6.89645319477257E7 rows, 1.9075531491232698E9 cpu, 9.9671838E8 io, 2.302786991905344E8 network, 1.4524601769303685E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 44889.12011448288, cumulative cost = {6.891964282761122E7 rows, 1.9068349232014382E9 cpu, 9.9671838E8 io, 2.302786991905344E8 network, 1.4237311400570995E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 44889.12011448288, cumulative cost = {6.887475370749675E7 rows, 1.8989344380612893E9 cpu, 9.9671838E8 io, 2.2920136030778682E8 network, 1.4237311400570995E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 247637.81433810518, cumulative cost = {6.882986458738227E7 rows, 1.8949722330318797E9 cpu, 9.9671838E8 io, 2.2920136030778682E8 network, 1.3950021031838304E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 192686.28987626306, cumulative cost = {5.250771019413803E7 rows, 1.3435916036989772E9 cpu, 7.75232832E8 io, 1.6179566656792718E8 network, 1.0169857998081577E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 88413.62083198677, cumulative cost = {3.2442292955305226E7 rows, 6.704409827452525E8 cpu, 4.98382248E8 io, 7.77106057809833E7 network, 4.45305116432485E7 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 80360.2035345988, cumulative cost = {2.6035536059433207E7 rows, 6.391028635395188E8 cpu, 3.87622464E8 io, 7.724067341322228E7 network, 4.274323823349792E7 memory}
         :                       :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :                       :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
         :                       :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                       :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                       :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                       :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                       :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
         :                       :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :                       :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
         :                       :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
         :                       :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
         :                       :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
         :                       :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
         :                       :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                       :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                       :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 59908.604797387976, cumulative cost = {9819902.848689286 rows, 1.0336304695797622E8 cpu, 1.6612482E8 io, 1.0051049135343097E7 network, 4761066.53410876 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 59908.604797387976, cumulative cost = {9759994.243891899 rows, 1.0336304695797622E8 cpu, 1.6612482E8 io, 1.0051049135343097E7 network, 4761066.53410876 memory}
         :                       :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :  :  :        :  +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 53332.44864925319, cumulative cost = {6354854.889094511 rows, 3.972292136878219E7 cpu, 1.107555E8 io, 1745627.1353430978 network, 1774421.4097505813 memory}
         :                       :  :  :           +- Calc(select=[y, X0]): rowcount = 53332.44864925319, cumulative cost = {6301522.440445258 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 53332.44864925319, cumulative cost = {6248189.9917960055 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
         :                       :  :  :                 :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
         :                       :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :                       :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :                       :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :                       :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :                       :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y AS X1]): rowcount = 8053.417297387978, cumulative cost = {6318343.275040035 rows, 3.1249705584901687E7 cpu, 1.10759784E8 io, 469932.3677610212 network, 1787273.4097505813 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 8053.417297387978, cumulative cost = {6310289.857742647 rows, 3.1249705584901687E7 cpu, 1.10759784E8 io, 469932.3677610212 network, 1787273.4097505813 memory}
         :                       :  :        :- Calc(select=[y, X0]): rowcount = 53332.44864925319, cumulative cost = {6301522.440445258 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 53332.44864925319, cumulative cost = {6248189.9917960055 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
         :                       :  :        :     :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                       :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
         :                       :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
         :                       :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
         :                       :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
         :                       :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
         :                       :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :                       :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 104272.6690442763, cumulative cost = {1.9872730948956538E7 rows, 6.729579346638485E8 cpu, 2.76850584E8 io, 8.408506078694387E7 network, 5.716806833756727E7 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 104272.6690442763, cumulative cost = {1.9768458279912263E7 rows, 6.729579346638485E8 cpu, 2.76850584E8 io, 8.408506078694387E7 network, 5.716806833756727E7 memory}
         :                       :        :- Exchange(distribution=[hash[y]]): rowcount = 349092.87696184206, cumulative cost = {1.6318954860867986E7 rows, 6.069517256481538E8 cpu, 2.21481264E8 io, 7.577963878694387E7 network, 3.778877833756727E7 memory}
         :                       :        :  +- Calc(select=[y, X1]): rowcount = 349092.87696184206, cumulative cost = {1.5969861983906144E7 rows, 5.483041223185643E8 cpu, 2.21481264E8 io, 6.740140973985966E7 network, 3.778877833756727E7 memory}
         :                       :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 349092.87696184206, cumulative cost = {1.5620769106944302E7 rows, 5.483041223185643E8 cpu, 2.21481264E8 io, 6.740140973985966E7 network, 3.778877833756727E7 memory}
         :                       :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
         :                       :        :           +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                       :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                       :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                       :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                       :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                       :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                       :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                       :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                       :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :        :                 :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                       :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                       :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 54951.524461842106, cumulative cost = {1.6074516578906143E7 rows, 5.511329915185642E8 cpu, 2.21485548E8 io, 6.740569373985966E7 network, 3.780163033756727E7 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 54951.524461842106, cumulative cost = {1.6019565054444302E7 rows, 5.511329915185642E8 cpu, 2.21485548E8 io, 6.740569373985966E7 network, 3.780163033756727E7 memory}
         :                             :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :                             :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                             :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                             :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
         :                                +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                                      :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 1617.98414677571, cumulative cost = {9.15333631166671E7 rows, 2.461514452389577E9 cpu, 1.328975352E9 io, 2.981625160731392E8 network, 1.8650957836955932E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 1617.98414677571, cumulative cost = {9.153174513252033E7 rows, 2.461514452389577E9 cpu, 1.328975352E9 io, 2.981625160731392E8 network, 1.8650957836955932E8 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 4002.7929613323013, cumulative cost = {2.2551355664613508E7 rows, 5.534594498175634E8 cpu, 3.3225294E8 io, 6.78797848826048E7 network, 4.102730827068786E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.2547352871652175E7 rows, 5.528190029437503E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.102730827068786E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 4002.7929613323013, cumulative cost = {2.254335007869084E7 rows, 5.52754958256369E8 cpu, 3.3225294E8 io, 6.778371785153282E7 network, 4.07711295211626E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 4002.7929613323013, cumulative cost = {2.253934728572951E7 rows, 5.520504666951745E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.07711295211626E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 22082.030070187793, cumulative cost = {2.2535344492768176E7 rows, 5.516971542140515E8 cpu, 3.3225294E8 io, 6.768765082046084E7 network, 4.0514950771637335E7 memory}
               :              :- Calc(select=[X0, X10 AS X1]): rowcount = 20445.007666607664, cumulative cost = {1.6134251344242299E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 20445.007666607664, cumulative cost = {1.611380633657569E7 rows, 5.354824834333359E8 cpu, 2.21489352E8 io, 6.718153923127262E7 network, 3.796093116471042E7 memory}
               :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :              :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :              :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :              :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :              :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :              :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 1422.0750288462589, cumulative cost = {3189436.6381634637 rows, 8078380.879230922 cpu, 5.5377408E7 io, 265717.80530771165 network, 1225528.0246154743 memory}
               :              :        +- Calc(select=[X1, x]): rowcount = 1422.0750288462589, cumulative cost = {3188014.5631346176 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1422.0750288462589, cumulative cost = {3186592.4881057716 rows, 7850848.87461552 cpu, 5.5377408E7 io, 231588.00461540144 network, 1225528.0246154743 memory}
               :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :              :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :              :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :              :              :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :              :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :              :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, X10 AS X1]): rowcount = 1637.02240358013, cumulative cost = {6379011.11845569 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1637.02240358013, cumulative cost = {6377374.09605211 rows, 1.619258875064544E7 cpu, 1.10763588E8 io, 506111.5891882223 network, 2554019.6069269213 memory}
               :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.235485065 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
               :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.2278233767 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
               :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.2201616885 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
               :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125000004 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
               :                    :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
               :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
               :                    :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                    :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                    :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                    :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 1475.475028846259, cumulative cost = {3190308.838163465 rows, 8213097.380577081 cpu, 5.5381668E7 io, 271259.4053077117 network, 1238352.0246154743 memory}
               :                       +- Calc(select=[X0, X1]): rowcount = 1475.475028846259, cumulative cost = {3188833.3631346184 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1475.475028846259, cumulative cost = {3187357.888105772 rows, 7977021.375961679 cpu, 5.5381668E7 io, 235848.00461540144 network, 1238352.0246154743 memory}
               :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :                             :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                             :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :                             :                 :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                             :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[X0, X1]): rowcount = 6783.768017172432, cumulative cost = {6.897877148376004E7 rows, 1.9079687100841856E9 cpu, 9.96722412E8 io, 2.302827311905344E8 network, 1.4525811369303685E8 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 6783.768017172432, cumulative cost = {6.897198771574287E7 rows, 1.9079687100841856E9 cpu, 9.96722412E8 io, 2.302827311905344E8 network, 1.4525811369303685E8 memory}
                     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 44889.12011448288, cumulative cost = {6.89645319477257E7 rows, 1.9075531491232698E9 cpu, 9.9671838E8 io, 2.302786991905344E8 network, 1.4524601769303685E8 memory}
                     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 44889.12011448288, cumulative cost = {6.891964282761122E7 rows, 1.9068349232014382E9 cpu, 9.9671838E8 io, 2.302786991905344E8 network, 1.4237311400570995E8 memory}
                     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 44889.12011448288, cumulative cost = {6.887475370749675E7 rows, 1.8989344380612893E9 cpu, 9.9671838E8 io, 2.2920136030778682E8 network, 1.4237311400570995E8 memory}
                     :        +- Union(all=[true], union=[X0, X1]): rowcount = 247637.81433810518, cumulative cost = {6.882986458738227E7 rows, 1.8949722330318797E9 cpu, 9.9671838E8 io, 2.2920136030778682E8 network, 1.3950021031838304E8 memory}
                     :           :- Union(all=[true], union=[X0, X1]): rowcount = 192686.28987626306, cumulative cost = {5.250771019413803E7 rows, 1.3435916036989772E9 cpu, 7.75232832E8 io, 1.6179566656792718E8 network, 1.0169857998081577E8 memory}
                     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 88413.62083198677, cumulative cost = {3.2442292955305226E7 rows, 6.704409827452525E8 cpu, 4.98382248E8 io, 7.77106057809833E7 network, 4.45305116432485E7 memory}
                     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 80360.2035345988, cumulative cost = {2.6035536059433207E7 rows, 6.391028635395188E8 cpu, 3.87622464E8 io, 7.724067341322228E7 network, 4.274323823349792E7 memory}
                     :           :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 20451.598737210825, cumulative cost = {1.6135273007209321E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                     :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20451.598737210825, cumulative cost = {1.6114821408472111E7 rows, 5.3565945637800795E8 cpu, 2.21497644E8 io, 6.718962427787918E7 network, 3.798217169938916E7 memory}
                     :           :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                     :           :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                     :           :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                     :           :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                     :           :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :           :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :           :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                     :           :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                     :           :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1466.0154995340204, cumulative cost = {3190445.1189892828 rows, 8255002.300137471 cpu, 5.53857E7 io, 273802.8519142598 network, 1244307.8929356975 memory}
                     :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1466.0154995340204, cumulative cost = {3188979.1034897487 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                     :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1466.0154995340204, cumulative cost = {3187513.0879902146 rows, 8020439.820212028 cpu, 5.53857E7 io, 238618.47992544327 network, 1244307.8929356975 memory}
                     :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3185375.0724906805 rows, 7888492.326903547 cpu, 5.5381668E7 io, 234586.47992544327 network, 1232211.8929356975 memory}
                     :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9437.436663560136, cumulative cost = {3175937.6358271204 rows, 7737493.340286585 cpu, 5.5381668E7 io, 234586.47992544327 network, 628215.9464678487 memory}
                     :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9437.436663560136, cumulative cost = {3166500.1991635603 rows, 6076504.487500001 cpu, 5.5381668E7 io, 8088.0 network, 628215.9464678487 memory}
                     :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52063.087499999994, cumulative cost = {3157062.7625 rows, 5243495.0875 cpu, 5.5381668E7 io, 8088.0 network, 24220.0 memory}
                     :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                     :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
                     :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 59908.604797387976, cumulative cost = {9819902.848689286 rows, 1.0336304695797622E8 cpu, 1.6612482E8 io, 1.0051049135343097E7 network, 4761066.53410876 memory}
                     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 59908.604797387976, cumulative cost = {9759994.243891899 rows, 1.0336304695797622E8 cpu, 1.6612482E8 io, 1.0051049135343097E7 network, 4761066.53410876 memory}
                     :           :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                     :           :  :  :        :  +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 53332.44864925319, cumulative cost = {6354854.889094511 rows, 3.972292136878219E7 cpu, 1.107555E8 io, 1745627.1353430978 network, 1774421.4097505813 memory}
                     :           :  :  :           +- Calc(select=[y, X0]): rowcount = 53332.44864925319, cumulative cost = {6301522.440445258 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
                     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 53332.44864925319, cumulative cost = {6248189.9917960055 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
                     :           :  :  :                 :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :           :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :           :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :           :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
                     :           :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
                     :           :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
                     :           :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
                     :           :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
                     :           :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                     :           :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                     :           :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :           :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :  +- Calc(select=[X0, y AS X1]): rowcount = 8053.417297387978, cumulative cost = {6318343.275040035 rows, 3.1249705584901687E7 cpu, 1.10759784E8 io, 469932.3677610212 network, 1787273.4097505813 memory}
                     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 8053.417297387978, cumulative cost = {6310289.857742647 rows, 3.1249705584901687E7 cpu, 1.10759784E8 io, 469932.3677610212 network, 1787273.4097505813 memory}
                     :           :  :        :- Calc(select=[y, X0]): rowcount = 53332.44864925319, cumulative cost = {6301522.440445258 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
                     :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 53332.44864925319, cumulative cost = {6248189.9917960055 rows, 3.076306999570766E7 cpu, 1.107555E8 io, 465648.3677610212 network, 1774421.4097505813 memory}
                     :           :  :        :     :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :           :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :           :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :           :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 9438.007661687941, cumulative cost = {3194866.2431467525 rows, 9402264.734414155 cpu, 5.538192E7 io, 461364.3677610212 network, 1233040.9806960565 memory}
                     :           :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3185428.2354850643 rows, 7892183.508544085 cpu, 5.538192E7 io, 234852.1838805106 network, 1233040.9806960565 memory}
                     :           :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9438.007661687941, cumulative cost = {3175990.227823376 rows, 7741175.385957077 cpu, 5.538192E7 io, 234852.1838805106 network, 629008.4903480283 memory}
                     :           :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9438.007661687941, cumulative cost = {3166552.220161688 rows, 6080086.0375 cpu, 5.538192E7 io, 8340.0 network, 629008.4903480283 memory}
                     :           :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 52066.237499999996, cumulative cost = {3157114.2125 rows, 5247026.2375 cpu, 5.538192E7 io, 8340.0 network, 24976.0 memory}
                     :           :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                     :           :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
                     :           :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :           :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    +- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 103.95, cumulative cost = {1236.9 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 103.95, cumulative cost = {1132.95 rows, 59304.0 cpu, 8316.0 io, 4032.0 network, 12096.0 memory}
                     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :           :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 104272.6690442763, cumulative cost = {1.9872730948956538E7 rows, 6.729579346638485E8 cpu, 2.76850584E8 io, 8.408506078694387E7 network, 5.716806833756727E7 memory}
                     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 104272.6690442763, cumulative cost = {1.9768458279912263E7 rows, 6.729579346638485E8 cpu, 2.76850584E8 io, 8.408506078694387E7 network, 5.716806833756727E7 memory}
                     :           :        :- Exchange(distribution=[hash[y]]): rowcount = 349092.87696184206, cumulative cost = {1.6318954860867986E7 rows, 6.069517256481538E8 cpu, 2.21481264E8 io, 7.577963878694387E7 network, 3.778877833756727E7 memory}
                     :           :        :  +- Calc(select=[y, X1]): rowcount = 349092.87696184206, cumulative cost = {1.5969861983906144E7 rows, 5.483041223185643E8 cpu, 2.21481264E8 io, 6.740140973985966E7 network, 3.778877833756727E7 memory}
                     :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 349092.87696184206, cumulative cost = {1.5620769106944302E7 rows, 5.483041223185643E8 cpu, 2.21481264E8 io, 6.740140973985966E7 network, 3.778877833756727E7 memory}
                     :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
                     :           :        :           +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                     :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                     :           :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                     :           :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                     :           :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                     :           :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                     :           :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :           :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :           :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :           :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :           :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :           :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                     :           :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                     :           :        :                 :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                     :           :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 54951.524461842106, cumulative cost = {1.6074516578906143E7 rows, 5.511329915185642E8 cpu, 2.21485548E8 io, 6.740569373985966E7 network, 3.780163033756727E7 memory}
                     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right]): rowcount = 54951.524461842106, cumulative cost = {1.6019565054444302E7 rows, 5.511329915185642E8 cpu, 2.21485548E8 io, 6.740569373985966E7 network, 3.780163033756727E7 memory}
                     :                 :- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                     :                 +- Exchange(distribution=[broadcast]): rowcount = 20231.846412280724, cumulative cost = {1.296462222998246E7 rows, 5.29685835547266E8 cpu, 1.66111968E8 io, 6.740140973985966E7 network, 3.665579493847955E7 memory}
                     :                    +- Calc(select=[X1, y]): rowcount = 20231.846412280724, cumulative cost = {1.294439038357018E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 20231.846412280724, cumulative cost = {1.2924158537157899E7 rows, 5.264487401213011E8 cpu, 1.66111968E8 io, 6.6915845425964914E7 network, 3.665579493847955E7 memory}
                     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
                     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
                     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
                     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
                     :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
                     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                     :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                     :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
                     :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                     :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
                     :                          :                    +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                     :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                     :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#8] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[X0]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[X0, X1])\n         +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n            :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n            +- [#6] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[10])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[13])
         :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[2])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[14])
         :              :                 :- Exchange(distribution=[hash[x]])(reuse_id=[27])
         :              :                 :  +- Reused(reference_id=[1])
         :              :                 +- Exchange(distribution=[hash[y]])
         :              :                    +- Calc(select=[y, x0])(reuse_id=[3])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :              :                          :- Reused(reference_id=[1])
         :              :                          +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X1, x])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[x AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[2])
         :              :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :        :                 :- Reused(reference_id=[3])
         :              :        :                 +- Reused(reference_id=[4])
         :              :        +- Reused(reference_id=[5])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[9])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x AS X0, x AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[17])
         :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :              :           :     +- Reused(reference_id=[4])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = y)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[16])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[8])
         :              :                    +- Reused(reference_id=[6])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, X1])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[7])
         :                       +- Reused(reference_id=[8])
         :- Exchange(distribution=[broadcast])(reuse_id=[12])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- Reused(reference_id=[9])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[6])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[3])
         :              :        :           +- Reused(reference_id=[5])
         :              :        +- Reused(reference_id=[8])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[11])
         :                       +- Reused(reference_id=[5])
         :- Exchange(distribution=[hash[y]])
         :  +- Calc(select=[y, X0])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[X0]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[2,1,3,2,1,0,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, y, X0], build=[right])\n:  :  :        :- [#4] Exchange(distribution=[hash[x]])\n:  :  :        +- [#10] Exchange(distribution=[hash[y]])\n:  :  +- Calc(select=[X0, y AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[y, X0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X1 AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X1, x, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right])\n      :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Calc(select=[x, y])(reuse_id=[24])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[8])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[15])
         :              :  +- Calc(select=[X1, y])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[13])
         :              :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :        :              +- Reused(reference_id=[14])
         :              :        +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]])
         :              :  +- Calc(select=[y, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[15])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[21])
         :              :  +- Calc(select=[x, y0])(reuse_id=[19])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[5])
         :              :- Calc(select=[y, X0])(reuse_id=[22])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :     :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :     :  +- Calc(select=[x, y])(reuse_id=[25])
         :              :     :     +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :     :        :- Reused(reference_id=[1])
         :              :     :        +- Reused(reference_id=[8])
         :              :     +- Exchange(distribution=[broadcast])
         :              :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :              :           +- Exchange(distribution=[hash[X0, X1]])
         :              :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 +- Union(all=[true], union=[X0, X1])
         :              :                    :- Calc(select=[x0 AS X0, x AS X1])
         :              :                    :  +- Reused(reference_id=[16])
         :              :                    +- Calc(select=[x0 AS X0, x0 AS X1])(reuse_id=[20])
         :              :                       +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[8])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[28])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[21])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Reused(reference_id=[22])
         :- Reused(reference_id=[23])
         :- Reused(reference_id=[4])
         :- Reused(reference_id=[8])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[4,3,3,2,3,4,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[y0 AS X0, x0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, x0, y00], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[x]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[y0]])\n:  :  :  +- Calc(select=[y0 AS X0, x AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :- Calc(select=[x, y0])\n:  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :     :- [#10] Calc(select=[x, y0])\n:  :  :        :     +- [#9] Exchange(distribution=[broadcast])\n:  :  :        +- [#9] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, x AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:  :        :- [#3] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[y01 AS X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y01], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x0]])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y00]])\n])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Reused(reference_id=[24])
                  :- Exchange(distribution=[hash[y00]])
                  :  +- Calc(select=[x, y0 AS y00])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])(reuse_id=[26])
                  :        :  +- Reused(reference_id=[25])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x0]])
                  :  +- Calc(select=[x0, y0 AS y01])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])
                  :        :  +- Calc(select=[y, x0])
                  :        :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
                  :        :        :- Reused(reference_id=[27])
                  :        :        +- Exchange(distribution=[hash[y0]])
                  :        :           +- Reused(reference_id=[19])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[28])
                  :- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[y0]])
                  :  +- Calc(select=[x, y0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
                  :        :- Calc(select=[x, y0])(reuse_id=[29])
                  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :     :- Exchange(distribution=[hash[y]])
                  :        :     :  +- Reused(reference_id=[1])
                  :        :     +- Exchange(distribution=[hash[x]])
                  :        :        +- Reused(reference_id=[25])
                  :        +- Reused(reference_id=[8])
                  :- Reused(reference_id=[8])
                  :- Reused(reference_id=[29])
                  +- Reused(reference_id=[8])

Job has been submitted with JobID 833e8e44e327fe84bcaa6c912899ab57
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 128a092f_fac3_4adf_90ca_07c864435465

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalUnion(all=[false])
   :  :        :  :  :- LogicalUnion(all=[false])
   :  :        :  :  :  :- LogicalProject(X0=[$9], X1=[$1])
   :  :        :  :  :  :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :  :  :  :     :- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :  :     :  :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :  :     :  :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  :     +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :        :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :  :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :        :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$11], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $12)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($9, $10)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $9)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalUnion(all=[false])
   :           :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
   :           :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :           :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :  +- LogicalUnion(all=[false])
   :           :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalUnion(all=[false])
   :           :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$9])
   :           :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :           :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :- LogicalUnion(all=[false])
   :           :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :           :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :           :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :- LogicalUnion(all=[false])
   :                 :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalUnion(all=[false])
            :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     +- LogicalUnion(all=[false])
            :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
            :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
            :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :  +- LogicalUnion(all=[false])
            :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  +- LogicalProject(X0=[$1], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalUnion(all=[false])
            :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$9])
            :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
            :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :- LogicalUnion(all=[false])
            :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
            :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
            :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
                  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :- LogicalUnion(all=[false])
                  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 31334.59657810385, cumulative cost = {7.649457084460516E8 rows, 2.4612581682216534E10 cpu, 1.0769490408E10 io, 3.083035733475341E9 network, 1.550805870644473E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 31334.59657810385, cumulative cost = {7.649143738494735E8 rows, 2.4612080328671284E10 cpu, 1.0769490408E10 io, 3.083035733475341E9 network, 1.5488004564634745E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 31334.59657810385, cumulative cost = {7.648830392528954E8 rows, 2.460656543967354E10 cpu, 1.0769490408E10 io, 3.0822837031574664E9 network, 1.5488004564634745E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 172862.17662494045, cumulative cost = {7.648517046563172E8 rows, 2.4603799644847538E10 cpu, 1.0769490408E10 io, 3.0822837031574664E9 network, 1.546795042282476E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 168375.02569701045, cumulative cost = {5.0108560400820553E8 rows, 1.6202983202418324E10 cpu, 7.077085968E9 io, 2.0308773010420566E9 network, 1.0289212724625028E9 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 5191.630762125691, cumulative cost = {2.2733621362606514E8 rows, 7.574100901011375E9 cpu, 3.230847144E9 io, 9.533881993956491E8 network, 5.041541156128851E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 5191.630762125691, cumulative cost = {2.27331021995303E8 rows, 7.574100901011375E9 cpu, 3.230847144E9 io, 9.533881993956491E8 network, 5.041541156128851E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 11117.463819655926, cumulative cost = {6.2934524766808555E7 rows, 1.5238974384810042E9 cpu, 9.23116644E8 io, 1.8854949678769696E8 network, 1.1381621595983349E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.29234073029889E7 rows, 1.5221186442698593E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1381621595983349E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11117.463819655926, cumulative cost = {6.291228983916925E7 rows, 1.5219407648487449E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1310469827537552E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.2901172375349596E7 rows, 1.5199840912164855E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1310469827537552E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 61331.218661920335, cumulative cost = {6.289005491152994E7 rows, 1.5190027917178948E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1239318059091754E8 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 4530.314115918301, cumulative cost = {1.786059115170309E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4530.314115918301, cumulative cost = {1.785606083758717E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 4011.1060576443224, cumulative cost = {9003511.77932582 rows, 1.5944410359415522E7 cpu, 1.53863136E8 io, 731359.5146065553 network, 3370942.5025231554 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 4011.1060576443224, cumulative cost = {8999500.673268177 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4011.1060576443224, cumulative cost = {8995489.567210533 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 56800.904546002035, cumulative cost = {4.4968132541164935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 56800.904546002035, cumulative cost = {4.4911331636618935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 3926.5060576443225, cumulative cost = {9002129.979325822 rows, 1.5652884410058787E7 cpu, 1.5385638E8 io, 722573.1146065553 network, 3350630.5025231554 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 3926.5060576443225, cumulative cost = {8998203.473268177 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 3926.5060576443225, cumulative cost = {8994276.967210533 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 23493.407927848682, cumulative cost = {1.6439130559773234E8 rows, 6.049926575556391E9 cpu, 2.3077305E9 io, 7.648387026079521E8 network, 3.897153216791509E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 23493.407927848682, cumulative cost = {1.643678121898045E8 rows, 6.049926575556391E9 cpu, 2.3077305E9 io, 7.648387026079521E8 network, 3.897153216791509E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 156057.71951899122, cumulative cost = {1.6434318878187665E8 rows, 6.048583193800239E9 cpu, 2.30772372E9 io, 7.648319226079521E8 network, 3.896949816791509E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 156057.71951899122, cumulative cost = {1.6418713106235766E8 rows, 6.046086270287934E9 cpu, 2.30772372E9 io, 7.648319226079521E8 network, 3.7970728762993544E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 156057.71951899122, cumulative cost = {1.6403107334283867E8 rows, 6.018620111652592E9 cpu, 2.30772372E9 io, 7.610865373394964E8 network, 3.7970728762993544E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 860916.687021528, cumulative cost = {1.638750156233197E8 rows, 6.004845444660247E9 cpu, 2.30772372E9 io, 7.610865373394964E8 network, 3.6971959358072E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 673406.785521528, cumulative cost = {1.3388699390329814E8 rows, 5.336343336813226E9 cpu, 1.846183296E9 io, 6.849166474994963E8 network, 2.9967992662072E8 memory}
         :  :           :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 482653.6797965281, cumulative cost = {8.787909916182663E7 rows, 3.386416485683704E9 cpu, 1.230807348E9 io, 4.278565575434964E8 network, 1.7460496901672006E8 memory}
         :  :           :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 194096.26949999997, cumulative cost = {5.93654987335E7 rows, 2.9219297664294996E9 cpu, 7.69245324E8 io, 3.8093433036E8 network, 1.1709389644E8 memory}
         :  :           :           :  :  :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 169119.33974999998, cumulative cost = {3.4459572674499996E7 rows, 1.5625783904399998E9 cpu, 4.61540424E8 io, 2.0399333435999998E8 network, 6.318333244E7 memory}
         :  :           :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, x0, y00], build=[right]): rowcount = 169119.33974999998, cumulative cost = {3.429045333475E7 rows, 1.5625783904399998E9 cpu, 4.61540424E8 io, 2.0399333435999998E8 network, 6.318333244E7 memory}
         :  :           :           :  :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :           :  :  :  :     :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     +- Exchange(distribution=[hash[y0]]): rowcount = 165947.86499999996, cumulative cost = {2.4826693794999998E7 rows, 1.38561401812E9 cpu, 3.0769812E8 io, 1.8091696476E8 network, 5.3890224E7 memory}
         :  :           :           :  :  :  :        +- Calc(select=[x, y0]): rowcount = 165947.86499999996, cumulative cost = {2.466074593E7 rows, 1.3577347768E9 cpu, 3.0769812E8 io, 1.76934216E8 network, 5.3890224E7 memory}
         :  :           :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 165947.86499999996, cumulative cost = {2.4494798065E7 rows, 1.3577347768E9 cpu, 3.0769812E8 io, 1.76934216E8 network, 5.3890224E7 memory}
         :  :           :           :  :  :  :              :- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :           :           :  :  :  :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :           :           :  :  :  :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :           :  :  :  :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :           :  :  :  :              :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :  :  :              :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :  :  :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 24976.929749999992, cumulative cost = {2.4711829789499998E7 rows, 1.35915727972E9 cpu, 3.077049E8 io, 1.76940996E8 network, 5.3910564E7 memory}
         :  :           :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 24976.929749999992, cumulative cost = {2.468685285975E7 rows, 1.35915727972E9 cpu, 3.077049E8 io, 1.76940996E8 network, 5.3910564E7 memory}
         :  :           :           :  :  :        :- Calc(select=[x, y0]): rowcount = 165947.86499999996, cumulative cost = {2.466074593E7 rows, 1.3577347768E9 cpu, 3.0769812E8 io, 1.76934216E8 network, 5.3890224E7 memory}
         :  :           :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 165947.86499999996, cumulative cost = {2.4494798065E7 rows, 1.3577347768E9 cpu, 3.0769812E8 io, 1.76934216E8 network, 5.3890224E7 memory}
         :  :           :           :  :  :        :     :- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :           :           :  :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :           :           :  :  :        :     :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :           :  :  :        :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :           :  :  :        :     :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :  :        :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :  :        :     :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  +- Calc(select=[X0, x AS X1]): rowcount = 288557.4102965281, cumulative cost = {2.8030946748530105E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :           :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 288557.4102965281, cumulative cost = {2.7742389338233575E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :           :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :           :  :        :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 962117.0686435205, cumulative cost = {1.815780992793705E7 rows, 2.3569002502525926E8 cpu, 3.07712964E8 io, 2.3837071183496352E7 network, 3641188.576720077 memory}
         :  :           :           :  :           +- Calc(select=[x, X0]): rowcount = 962117.0686435205, cumulative cost = {1.7195692859293528E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :           :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962117.0686435205, cumulative cost = {1.6233575790650006E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :           :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :  :           :           :  :                    +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :           :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :           :           :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :  :           :           :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :  :           :           :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :  :           :           :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :  :           :           :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :           :           :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :           :           :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :           :           :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :           :           :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[y01 AS X0, x AS X1]): rowcount = 190753.10572499997, cumulative cost = {4.533448795595E7 rows, 1.9492534443440003E9 cpu, 6.15375948E8 io, 2.57060089956E8 network, 1.25074957604E8 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y01], build=[right]): rowcount = 190753.10572499997, cumulative cost = {4.5143734850225E7 rows, 1.9492534443440003E9 cpu, 6.15375948E8 io, 2.57060089956E8 network, 1.25074957604E8 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x0]]): rowcount = 310088.37149999995, cumulative cost = {3.5656959744500004E7 rows, 1.7261556333720002E9 cpu, 4.61526888E8 io, 2.33974933956E8 network, 1.076896688E8 memory}
         :  :           :           :           +- Calc(select=[x0, y0 AS y01]): rowcount = 310088.37149999995, cumulative cost = {3.5346871373E7 rows, 1.6740607869600003E9 cpu, 4.61526888E8 io, 2.2653281304E8 network, 1.076896688E8 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 310088.37149999995, cumulative cost = {3.50367830015E7 rows, 1.6740607869600003E9 cpu, 4.61526888E8 io, 2.2653281304E8 network, 1.076896688E8 memory}
         :  :           :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :  :           :           :                 :  +- Calc(select=[y, x0]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :           :                 :        :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :        +- Exchange(distribution=[hash[y0]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :           :                 :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :           :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 187509.9015, cumulative cost = {2.9127105033000007E7 rows, 6.6764119116E8 cpu, 4.61540424E8 io, 7.616988983999999E7 network, 7.003966696E7 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 187509.9015, cumulative cost = {2.8939595131500006E7 rows, 6.6764119116E8 cpu, 4.61540424E8 io, 7.616988983999999E7 network, 7.003966696E7 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :                 :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y00]]): rowcount = 288467.00999999995, cumulative cost = {1.9456063230000004E7 rows, 4.4471635108E8 cpu, 3.07691364E8 io, 5.308473383999999E7 network, 5.38651744E7 memory}
         :  :           :                    +- Calc(select=[x, y0 AS y00]): rowcount = 288467.00999999995, cumulative cost = {1.9167596220000003E7 rows, 3.962538934E8 cpu, 3.07691364E8 io, 4.6161525599999994E7 network, 5.38651744E7 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 288467.00999999995, cumulative cost = {1.887912921E7 rows, 3.962538934E8 cpu, 3.07691364E8 io, 4.6161525599999994E7 network, 5.38651744E7 memory}
         :  :           :                          :- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :                          :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                          :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                          :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                          :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :                          :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :                             +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 163183.39493488477, cumulative cost = {2.7358101535644335E8 rows, 8.628713926381252E9 cpu, 3.846238824E9 io, 1.0774891016464076E9 network, 5.247671568496177E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], build=[right]): rowcount = 163183.39493488477, cumulative cost = {2.7341783196150845E8 rows, 8.628713926381252E9 cpu, 3.846238824E9 io, 1.0774891016464076E9 network, 5.247671568496177E8 memory}
         :        :- Exchange(distribution=[hash[y]]): rowcount = 963181.8695729483, cumulative cost = {7.223416537552741E7 rows, 1.7370816922798169E9 cpu, 1.076958924E9 io, 2.1166586165744773E8 network, 1.1443879393373422E8 memory}
         :        :  +- Calc(select=[y, X0]): rowcount = 963181.8695729483, cumulative cost = {7.127098350595446E7 rows, 1.5752671381915615E9 cpu, 1.076958924E9 io, 1.8854949678769696E8 network, 1.1443879393373422E8 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 963181.8695729483, cumulative cost = {7.03078016363815E7 rows, 1.5752671381915615E9 cpu, 1.076958924E9 io, 1.8854949678769696E8 network, 1.1443879393373422E8 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 11117.463819655926, cumulative cost = {6.2934524766808555E7 rows, 1.5238974384810042E9 cpu, 9.23116644E8 io, 1.8854949678769696E8 network, 1.1381621595983349E8 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.29234073029889E7 rows, 1.5221186442698593E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1381621595983349E8 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11117.463819655926, cumulative cost = {6.291228983916925E7 rows, 1.5219407648487449E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1310469827537552E8 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.2901172375349596E7 rows, 1.5199840912164855E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1310469827537552E8 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 61331.218661920335, cumulative cost = {6.289005491152994E7 rows, 1.5190027917178948E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1239318059091754E8 memory}
         :        :                       :- Calc(select=[X0, X00 AS X1]): rowcount = 4530.314115918301, cumulative cost = {1.786059115170309E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :        :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4530.314115918301, cumulative cost = {1.785606083758717E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :        :                       :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :        :                       :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :        :                       :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :        :                       :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :        :                       :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :     +- Exchange(distribution=[broadcast]): rowcount = 4011.1060576443224, cumulative cost = {9003511.77932582 rows, 1.5944410359415522E7 cpu, 1.53863136E8 io, 731359.5146065553 network, 3370942.5025231554 memory}
         :        :                       :        +- Calc(select=[X0, X1]): rowcount = 4011.1060576443224, cumulative cost = {8999500.673268177 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :        :                       :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4011.1060576443224, cumulative cost = {8995489.567210533 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :        :                       :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                       :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                       :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                       :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                       :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                       :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X0, X00 AS X1]): rowcount = 56800.904546002035, cumulative cost = {4.4968132541164935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 56800.904546002035, cumulative cost = {4.4911331636618935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :        :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                             :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 3926.5060576443225, cumulative cost = {9002129.979325822 rows, 1.5652884410058787E7 cpu, 1.5385638E8 io, 722573.1146065553 network, 3350630.5025231554 memory}
         :        :                                +- Calc(select=[X0, x]): rowcount = 3926.5060576443225, cumulative cost = {8998203.473268177 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 3926.5060576443225, cumulative cost = {8994276.967210533 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                                      :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                      :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X0]]): rowcount = 124707.42999295022, cumulative cost = {2.0102048319104615E8 rows, 6.882929119704907E9 cpu, 2.7692799E9 io, 8.658232399889599E8 network, 4.033447468362783E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 124707.42999295022, cumulative cost = {2.008957757610532E8 rows, 6.861978271466092E9 cpu, 2.7692799E9 io, 8.628302616691291E8 network, 4.033447468362783E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 124707.42999295022, cumulative cost = {2.0077106833106026E8 rows, 6.859982952586205E9 cpu, 2.7692799E9 io, 8.628302616691291E8 network, 3.953634713167295E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 124707.42999295022, cumulative cost = {2.0064636090106732E8 rows, 6.838034444907445E9 cpu, 2.7692799E9 io, 8.598372833492984E8 network, 3.953634713167295E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 687967.9378080012, cumulative cost = {2.0052165347107437E8 rows, 6.827026957902517E9 cpu, 2.7692799E9 io, 8.598372833492984E8 network, 3.8738219579718065E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 535296.2760123978, cumulative cost = {1.54211281221016E8 rows, 5.1331624396578045E9 cpu, 2.153896752E9 io, 6.49483255280025E8 network, 2.823800045562788E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 245577.20674305738, cumulative cost = {9.205083943241891E7 rows, 2.185543680798861E9 cpu, 1.38467808E9 io, 2.6201702812765712E8 network, 1.23553318915377E8 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 223267.18201196662, cumulative cost = {7.329294344760522E7 rows, 1.9370091645846202E9 cpu, 1.076959176E9 io, 2.3765434070133018E8 network, 1.1865278911445712E8 memory}
         :                       :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :                       :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :                       :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                       :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                       :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                       :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                       :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :                       :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :                       :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :                       :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :                       :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :                       :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :                       :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :                       :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                       :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                       :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 166452.4347310907, cumulative cost = {2.8242282296277907E7 rows, 4.487231161063196E8 cpu, 4.61554428E8 io, 5.0988320983301446E7 network, 1.3177653700527105E7 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 166452.4347310907, cumulative cost = {2.8075829861546814E7 rows, 4.487231161063196E8 cpu, 4.61554428E8 io, 5.0988320983301446E7 network, 1.3177653700527105E7 memory}
         :                       :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :  :  :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 148168.49820727165, cumulative cost = {1.8614737226815723E7 rows, 2.7190097872066146E8 cpu, 3.07712124E8 io, 2.791195138330145E7 network, 4880189.800919894 memory}
         :                       :  :  :           +- Calc(select=[y, X0]): rowcount = 148168.49820727165, cumulative cost = {1.846656872860845E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 148168.49820727165, cumulative cost = {1.831840023040118E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
         :                       :  :  :                 :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :                       :  :  :                 :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
         :                       :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :                       :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :                       :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :                       :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :                       :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y AS X1]): rowcount = 22310.024731090747, cumulative cost = {1.8512318778070636E7 rows, 2.4828893900749797E8 cpu, 3.07718904E8 io, 2.436268742632693E7 network, 4900529.800919894 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 22310.024731090747, cumulative cost = {1.8490008753339544E7 rows, 2.4828893900749797E8 cpu, 3.07718904E8 io, 2.436268742632693E7 network, 4900529.800919894 memory}
         :                       :  :        :- Calc(select=[y, X0]): rowcount = 148168.49820727165, cumulative cost = {1.846656872860845E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 148168.49820727165, cumulative cost = {1.831840023040118E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
         :                       :  :        :     :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :                       :  :        :     :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :     :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :     :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :     :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :        :     :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
         :                       :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :                       :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :                       :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :                       :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :                       :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 289719.0692693405, cumulative cost = {6.162514551258467E7 rows, 2.9470834625829315E9 cpu, 7.69218672E8 io, 3.8746622715236783E8 network, 1.5882668564090183E8 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 289719.0692693405, cumulative cost = {6.133542644331533E7 rows, 2.9470834625829315E9 cpu, 7.69218672E8 io, 3.8746622715236783E8 network, 1.5882668564090183E8 memory}
         :                       :        :- Exchange(distribution=[hash[y]]): rowcount = 969946.0617956033, cumulative cost = {5.175106717404598E7 rows, 2.7636871046885667E9 cpu, 6.15376368E8 io, 3.643898575523678E8 network, 1.0498185124090183E8 memory}
         :                       :        :  +- Calc(select=[y, X1]): rowcount = 969946.0617956033, cumulative cost = {5.078112111225038E7 rows, 2.6007361663069053E9 cpu, 6.15376368E8 io, 3.4111115206927335E8 network, 1.0498185124090183E8 memory}
         :                       :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 969946.0617956033, cumulative cost = {4.981117505045478E7 rows, 2.6007361663069053E9 cpu, 6.15376368E8 io, 3.4111115206927335E8 network, 1.0498185124090183E8 memory}
         :                       :        :        :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[hash[y]]): rowcount = 56212.07863735539, cumulative cost = {3.602103898865917E7 rows, 1.4721097496778064E9 cpu, 4.61534088E8 io, 1.8726887206927338E8 network, 1.0183397483720993E8 memory}
         :                       :        :           +- Calc(select=[X1, y]): rowcount = 56212.07863735539, cumulative cost = {3.596482691002182E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
         :                       :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908614831384465E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
         :                       :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                       :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                       :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                       :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                       :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :        :                 :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 152671.6617956033, cumulative cost = {4.5622404312250376E7 rows, 1.6931765503069053E9 cpu, 6.15383148E8 io, 2.1035402806927338E8 network, 1.0500219124090183E8 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 152671.6617956033, cumulative cost = {4.5469732650454774E7 rows, 1.6931765503069053E9 cpu, 6.15383148E8 io, 2.1035402806927338E8 network, 1.0500219124090183E8 memory}
         :                             :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :                             :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                             :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[hash[y]]): rowcount = 56212.07863735539, cumulative cost = {3.602103898865917E7 rows, 1.4721097496778064E9 cpu, 4.61534088E8 io, 1.8726887206927338E8 network, 1.0183397483720993E8 memory}
         :                                +- Calc(select=[X1, y]): rowcount = 56212.07863735539, cumulative cost = {3.596482691002182E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908614831384465E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                                      :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 4487.150927929996, cumulative cost = {2.6359323847148675E8 rows, 8.400643580252589E9 cpu, 3.69240444E9 io, 1.05140640211541E9 network, 5.17873769819973E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 4487.150927929996, cumulative cost = {2.6358875132055882E8 rows, 8.400643580252589E9 cpu, 3.69240444E9 io, 1.05140640211541E9 network, 5.17873769819973E8 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 11118.225020590779, cumulative cost = {6.2649696179579794E7 rows, 1.5373275346303978E9 cpu, 9.2311734E8 io, 1.8856894044628084E8 network, 1.1388480238254161E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.263857795455921E7 rows, 1.5355486186271033E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.1388480238254161E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11118.225020590779, cumulative cost = {6.262745972953862E7 rows, 1.535370727026774E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.131732359812238E8 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.261634150451803E7 rows, 1.53341391942315E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.131732359812238E8 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 61335.41794529453, cumulative cost = {6.2605223279497445E7 rows, 1.5324325527360253E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.12461669579906E8 memory}
               :              :- Calc(select=[X0, X10 AS X1]): rowcount = 56803.004187689134, cumulative cost = {4.4825714625507E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 56803.004187689134, cumulative cost = {4.476891162131931E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :              :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 3940.5036688916416, cumulative cost = {8859707.86438451 rows, 2.2367324227663238E7 cpu, 1.53856728E8 io, 732276.6750760621 network, 3384091.130787534 memory}
               :              :        +- Calc(select=[X1, x]): rowcount = 3940.5036688916416, cumulative cost = {8855767.360715618 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 3940.5036688916416, cumulative cost = {8851826.857046727 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :              :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, X10 AS X1]): rowcount = 4532.413757605399, cumulative cost = {1.771817323604515E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4532.413757605399, cumulative cost = {1.7713640822287545E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
               :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
               :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
               :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
               :                    :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                    :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 4025.1036688916415, cumulative cost = {8861089.664384509 rows, 2.2659503398878183E7 cpu, 1.53863484E8 io, 741063.075076062 network, 3404403.130787534 memory}
               :                       +- Calc(select=[X0, X1]): rowcount = 4025.1036688916415, cumulative cost = {8857064.560715618 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4025.1036688916415, cumulative cost = {8853039.457046727 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :                             :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                             :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                             :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                             :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[X0, X1]): rowcount = 18796.11449894253, cumulative cost = {2.009345679900511E8 rows, 6.863076730906035E9 cpu, 2.7692871E9 io, 8.628374616691291E8 network, 4.033663468362783E8 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 18796.11449894253, cumulative cost = {2.0091577187555215E8 rows, 6.863076730906035E9 cpu, 2.7692871E9 io, 8.628374616691291E8 network, 4.033663468362783E8 memory}
                     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 124707.42999295022, cumulative cost = {2.008957757610532E8 rows, 6.861978271466092E9 cpu, 2.7692799E9 io, 8.628302616691291E8 network, 4.033447468362783E8 memory}
                     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 124707.42999295022, cumulative cost = {2.0077106833106026E8 rows, 6.859982952586205E9 cpu, 2.7692799E9 io, 8.628302616691291E8 network, 3.953634713167295E8 memory}
                     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 124707.42999295022, cumulative cost = {2.0064636090106732E8 rows, 6.838034444907445E9 cpu, 2.7692799E9 io, 8.598372833492984E8 network, 3.953634713167295E8 memory}
                     :        +- Union(all=[true], union=[X0, X1]): rowcount = 687967.9378080012, cumulative cost = {2.0052165347107437E8 rows, 6.827026957902517E9 cpu, 2.7692799E9 io, 8.598372833492984E8 network, 3.8738219579718065E8 memory}
                     :           :- Union(all=[true], union=[X0, X1]): rowcount = 535296.2760123978, cumulative cost = {1.54211281221016E8 rows, 5.1331624396578045E9 cpu, 2.153896752E9 io, 6.49483255280025E8 network, 2.823800045562788E8 memory}
                     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 245577.20674305738, cumulative cost = {9.205083943241891E7 rows, 2.185543680798861E9 cpu, 1.38467808E9 io, 2.6201702812765712E8 network, 1.23553318915377E8 memory}
                     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 223267.18201196662, cumulative cost = {7.329294344760522E7 rows, 1.9370091645846202E9 cpu, 1.076959176E9 io, 2.3765434070133018E8 network, 1.1865278911445712E8 memory}
                     :           :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                     :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                     :           :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                     :           :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                     :           :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                     :           :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                     :           :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :           :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :           :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                     :           :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :           :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :           :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                     :           :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                     :           :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
                     :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                     :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                     :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
                     :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
                     :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
                     :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
                     :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                     :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                     :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                     :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                     :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 166452.4347310907, cumulative cost = {2.8242282296277907E7 rows, 4.487231161063196E8 cpu, 4.61554428E8 io, 5.0988320983301446E7 network, 1.3177653700527105E7 memory}
                     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 166452.4347310907, cumulative cost = {2.8075829861546814E7 rows, 4.487231161063196E8 cpu, 4.61554428E8 io, 5.0988320983301446E7 network, 1.3177653700527105E7 memory}
                     :           :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                     :           :  :  :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 148168.49820727165, cumulative cost = {1.8614737226815723E7 rows, 2.7190097872066146E8 cpu, 3.07712124E8 io, 2.791195138330145E7 network, 4880189.800919894 memory}
                     :           :  :  :           +- Calc(select=[y, X0]): rowcount = 148168.49820727165, cumulative cost = {1.846656872860845E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
                     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 148168.49820727165, cumulative cost = {1.831840023040118E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
                     :           :  :  :                 :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                     :           :  :  :                 :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :  :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
                     :           :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
                     :           :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
                     :           :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
                     :           :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
                     :           :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                     :           :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                     :           :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :  +- Calc(select=[X0, y AS X1]): rowcount = 22310.024731090747, cumulative cost = {1.8512318778070636E7 rows, 2.4828893900749797E8 cpu, 3.07718904E8 io, 2.436268742632693E7 network, 4900529.800919894 memory}
                     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 22310.024731090747, cumulative cost = {1.8490008753339544E7 rows, 2.4828893900749797E8 cpu, 3.07718904E8 io, 2.436268742632693E7 network, 4900529.800919894 memory}
                     :           :  :        :- Calc(select=[y, X0]): rowcount = 148168.49820727165, cumulative cost = {1.846656872860845E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
                     :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 148168.49820727165, cumulative cost = {1.831840023040118E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
                     :           :  :        :     :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                     :           :  :        :     :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :           :  :        :     :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :           :  :        :     :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :        :     :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :        :     :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :     +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
                     :           :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
                     :           :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
                     :           :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
                     :           :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
                     :           :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                     :           :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                     :           :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 289719.0692693405, cumulative cost = {6.162514551258467E7 rows, 2.9470834625829315E9 cpu, 7.69218672E8 io, 3.8746622715236783E8 network, 1.5882668564090183E8 memory}
                     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 289719.0692693405, cumulative cost = {6.133542644331533E7 rows, 2.9470834625829315E9 cpu, 7.69218672E8 io, 3.8746622715236783E8 network, 1.5882668564090183E8 memory}
                     :           :        :- Exchange(distribution=[hash[y]]): rowcount = 969946.0617956033, cumulative cost = {5.175106717404598E7 rows, 2.7636871046885667E9 cpu, 6.15376368E8 io, 3.643898575523678E8 network, 1.0498185124090183E8 memory}
                     :           :        :  +- Calc(select=[y, X1]): rowcount = 969946.0617956033, cumulative cost = {5.078112111225038E7 rows, 2.6007361663069053E9 cpu, 6.15376368E8 io, 3.4111115206927335E8 network, 1.0498185124090183E8 memory}
                     :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 969946.0617956033, cumulative cost = {4.981117505045478E7 rows, 2.6007361663069053E9 cpu, 6.15376368E8 io, 3.4111115206927335E8 network, 1.0498185124090183E8 memory}
                     :           :        :        :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                     :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :        :        +- Exchange(distribution=[hash[y]]): rowcount = 56212.07863735539, cumulative cost = {3.602103898865917E7 rows, 1.4721097496778064E9 cpu, 4.61534088E8 io, 1.8726887206927338E8 network, 1.0183397483720993E8 memory}
                     :           :        :           +- Calc(select=[X1, y]): rowcount = 56212.07863735539, cumulative cost = {3.596482691002182E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
                     :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908614831384465E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
                     :           :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                     :           :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                     :           :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                     :           :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                     :           :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :           :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :           :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                     :           :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :           :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :           :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                     :           :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                     :           :        :                 :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                     :           :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 152671.6617956033, cumulative cost = {4.5622404312250376E7 rows, 1.6931765503069053E9 cpu, 6.15383148E8 io, 2.1035402806927338E8 network, 1.0500219124090183E8 memory}
                     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 152671.6617956033, cumulative cost = {4.5469732650454774E7 rows, 1.6931765503069053E9 cpu, 6.15383148E8 io, 2.1035402806927338E8 network, 1.0500219124090183E8 memory}
                     :                 :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                     :                 :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :                 :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :                 +- Exchange(distribution=[hash[y]]): rowcount = 56212.07863735539, cumulative cost = {3.602103898865917E7 rows, 1.4721097496778064E9 cpu, 4.61534088E8 io, 1.8726887206927338E8 network, 1.0183397483720993E8 memory}
                     :                    +- Calc(select=[X1, y]): rowcount = 56212.07863735539, cumulative cost = {3.596482691002182E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
                     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908614831384465E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
                     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                     :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                     :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                     :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                     :                          :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#8] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[X0]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[X0, X1])\n         +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n            :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n            +- [#6] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[10])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[13])
         :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[2])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[14])
         :              :                 :- Exchange(distribution=[hash[x]])(reuse_id=[27])
         :              :                 :  +- Reused(reference_id=[1])
         :              :                 +- Exchange(distribution=[hash[y]])
         :              :                    +- Calc(select=[y, x0])(reuse_id=[3])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :              :                          :- Reused(reference_id=[1])
         :              :                          +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X1, x])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[x AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[2])
         :              :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :        :                 :- Reused(reference_id=[3])
         :              :        :                 +- Reused(reference_id=[4])
         :              :        +- Reused(reference_id=[5])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[17])
         :              :           :     :- Reused(reference_id=[2])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[6])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[9])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = y)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[16])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[6])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, X1])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[7])
         :                       +- Reused(reference_id=[6])
         :- Exchange(distribution=[broadcast])(reuse_id=[12])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- Reused(reference_id=[8])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[9])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[3])
         :              :        :           +- Reused(reference_id=[5])
         :              :        +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[11])
         :                       +- Reused(reference_id=[5])
         :- Exchange(distribution=[hash[y]])
         :  +- Calc(select=[y, X0])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[X0]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[2,1,3,2,1,0,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, y, X0], build=[right])\n:  :  :        :- [#4] Exchange(distribution=[hash[x]])\n:  :  :        +- [#10] Exchange(distribution=[hash[y]])\n:  :  +- Calc(select=[X0, y AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[y, X0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X1 AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X1, x, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[24])
         :              :  +- Calc(select=[x, y])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[6])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[15])
         :              :  +- Calc(select=[X1, y])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[13])
         :              :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :        :              +- Reused(reference_id=[14])
         :              :        +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]])
         :              :  +- Calc(select=[y, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], build=[right])
         :              :        :- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[15])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[21])
         :              :  +- Calc(select=[x, y0])(reuse_id=[19])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[5])
         :              :- Calc(select=[y, X0])(reuse_id=[22])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[x, y, X0, X1], build=[right])
         :              :     :- Exchange(distribution=[hash[x]])(reuse_id=[29])
         :              :     :  +- Calc(select=[x, y])(reuse_id=[25])
         :              :     :     +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :     :        :- Reused(reference_id=[1])
         :              :     :        +- Reused(reference_id=[6])
         :              :     +- Exchange(distribution=[hash[X1]])
         :              :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :              :           +- Exchange(distribution=[hash[X0, X1]])
         :              :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 +- Union(all=[true], union=[X0, X1])
         :              :                    :- Calc(select=[x0 AS X0, x AS X1])
         :              :                    :  +- Reused(reference_id=[16])
         :              :                    +- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :              :                       +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[6])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[28])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[21])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Reused(reference_id=[22])
         :- Reused(reference_id=[23])
         :- Reused(reference_id=[4])
         :- Reused(reference_id=[6])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[4,3,3,2,3,4,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[y0 AS X0, x0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, x0, y00], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[x]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[y0]])\n:  :  :  +- Calc(select=[y0 AS X0, x AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :- Calc(select=[x, y0])\n:  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :     :- [#10] Calc(select=[x, y0])\n:  :  :        :     +- [#9] Exchange(distribution=[broadcast])\n:  :  :        +- [#9] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, x AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:  :        :- [#3] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[y01 AS X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y01], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x0]])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y00]])\n])
                  :- Reused(reference_id=[24])
                  :- Exchange(distribution=[hash[y00]])
                  :  +- Calc(select=[x, y0 AS y00])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])(reuse_id=[26])
                  :        :  +- Reused(reference_id=[25])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x0]])
                  :  +- Calc(select=[x0, y0 AS y01])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])
                  :        :  +- Calc(select=[y, x0])
                  :        :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
                  :        :        :- Reused(reference_id=[27])
                  :        :        +- Exchange(distribution=[hash[y0]])
                  :        :           +- Reused(reference_id=[19])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[28])
                  :- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[y0]])
                  :  +- Calc(select=[x, y0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
                  :        :- Calc(select=[x, y0])(reuse_id=[30])
                  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :     :- Exchange(distribution=[hash[y]])
                  :        :     :  +- Reused(reference_id=[1])
                  :        :     +- Reused(reference_id=[29])
                  :        +- Reused(reference_id=[6])
                  :- Reused(reference_id=[6])
                  :- Reused(reference_id=[30])
                  +- Reused(reference_id=[6])

Job has been submitted with JobID 7b9e7c9d9358c626ab127103d08ce3ca
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 045536b4_2e85_4e0e_b39e_67bd9ea9fe53

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalUnion(all=[false])
   :  :        :  :  :- LogicalUnion(all=[false])
   :  :        :  :  :  :- LogicalProject(X0=[$9], X1=[$1])
   :  :        :  :  :  :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :  :  :  :     :- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :  :     :  :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :  :     :  :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  :     +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :        :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :  :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :        :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$11], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $12)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($9, $10)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $9)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalUnion(all=[false])
   :           :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
   :           :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :           :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :  +- LogicalUnion(all=[false])
   :           :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalUnion(all=[false])
   :           :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$9])
   :           :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :           :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :- LogicalUnion(all=[false])
   :           :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :           :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :           :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :- LogicalUnion(all=[false])
   :                 :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalUnion(all=[false])
            :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     +- LogicalUnion(all=[false])
            :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
            :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
            :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :  +- LogicalUnion(all=[false])
            :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  +- LogicalProject(X0=[$1], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalUnion(all=[false])
            :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$9])
            :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
            :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :- LogicalUnion(all=[false])
            :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
            :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
            :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
                  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :- LogicalUnion(all=[false])
                  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 31334.59657810385, cumulative cost = {7.649457084460516E8 rows, 2.4612581682216534E10 cpu, 1.0769490408E10 io, 3.083035733475341E9 network, 1.550805870644473E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 31334.59657810385, cumulative cost = {7.649143738494735E8 rows, 2.4612080328671284E10 cpu, 1.0769490408E10 io, 3.083035733475341E9 network, 1.5488004564634745E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 31334.59657810385, cumulative cost = {7.648830392528954E8 rows, 2.460656543967354E10 cpu, 1.0769490408E10 io, 3.0822837031574664E9 network, 1.5488004564634745E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 172862.17662494045, cumulative cost = {7.648517046563172E8 rows, 2.4603799644847538E10 cpu, 1.0769490408E10 io, 3.0822837031574664E9 network, 1.546795042282476E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 168375.02569701045, cumulative cost = {5.0108560400820553E8 rows, 1.6202983202418324E10 cpu, 7.077085968E9 io, 2.0308773010420566E9 network, 1.0289212724625028E9 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 5191.630762125691, cumulative cost = {2.2733621362606514E8 rows, 7.574100901011375E9 cpu, 3.230847144E9 io, 9.533881993956491E8 network, 5.041541156128851E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 5191.630762125691, cumulative cost = {2.27331021995303E8 rows, 7.574100901011375E9 cpu, 3.230847144E9 io, 9.533881993956491E8 network, 5.041541156128851E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 11117.463819655926, cumulative cost = {6.2934524766808555E7 rows, 1.5238974384810042E9 cpu, 9.23116644E8 io, 1.8854949678769696E8 network, 1.1381621595983349E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.29234073029889E7 rows, 1.5221186442698593E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1381621595983349E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11117.463819655926, cumulative cost = {6.291228983916925E7 rows, 1.5219407648487449E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1310469827537552E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.2901172375349596E7 rows, 1.5199840912164855E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1310469827537552E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 61331.218661920335, cumulative cost = {6.289005491152994E7 rows, 1.5190027917178948E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1239318059091754E8 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 4530.314115918301, cumulative cost = {1.786059115170309E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4530.314115918301, cumulative cost = {1.785606083758717E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 4011.1060576443224, cumulative cost = {9003511.77932582 rows, 1.5944410359415522E7 cpu, 1.53863136E8 io, 731359.5146065553 network, 3370942.5025231554 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 4011.1060576443224, cumulative cost = {8999500.673268177 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4011.1060576443224, cumulative cost = {8995489.567210533 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 56800.904546002035, cumulative cost = {4.4968132541164935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 56800.904546002035, cumulative cost = {4.4911331636618935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 3926.5060576443225, cumulative cost = {9002129.979325822 rows, 1.5652884410058787E7 cpu, 1.5385638E8 io, 722573.1146065553 network, 3350630.5025231554 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 3926.5060576443225, cumulative cost = {8998203.473268177 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 3926.5060576443225, cumulative cost = {8994276.967210533 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 23493.407927848682, cumulative cost = {1.6439130559773234E8 rows, 6.049926575556391E9 cpu, 2.3077305E9 io, 7.648387026079521E8 network, 3.897153216791509E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 23493.407927848682, cumulative cost = {1.643678121898045E8 rows, 6.049926575556391E9 cpu, 2.3077305E9 io, 7.648387026079521E8 network, 3.897153216791509E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 156057.71951899122, cumulative cost = {1.6434318878187665E8 rows, 6.048583193800239E9 cpu, 2.30772372E9 io, 7.648319226079521E8 network, 3.896949816791509E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 156057.71951899122, cumulative cost = {1.6418713106235766E8 rows, 6.046086270287934E9 cpu, 2.30772372E9 io, 7.648319226079521E8 network, 3.7970728762993544E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 156057.71951899122, cumulative cost = {1.6403107334283867E8 rows, 6.018620111652592E9 cpu, 2.30772372E9 io, 7.610865373394964E8 network, 3.7970728762993544E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 860916.687021528, cumulative cost = {1.638750156233197E8 rows, 6.004845444660247E9 cpu, 2.30772372E9 io, 7.610865373394964E8 network, 3.6971959358072E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 673406.785521528, cumulative cost = {1.3388699390329814E8 rows, 5.336343336813226E9 cpu, 1.846183296E9 io, 6.849166474994963E8 network, 2.9967992662072E8 memory}
         :  :           :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 482653.6797965281, cumulative cost = {8.787909916182663E7 rows, 3.386416485683704E9 cpu, 1.230807348E9 io, 4.278565575434964E8 network, 1.7460496901672006E8 memory}
         :  :           :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 194096.26949999997, cumulative cost = {5.93654987335E7 rows, 2.9219297664294996E9 cpu, 7.69245324E8 io, 3.8093433036E8 network, 1.1709389644E8 memory}
         :  :           :           :  :  :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 169119.33974999998, cumulative cost = {3.4459572674499996E7 rows, 1.5625783904399998E9 cpu, 4.61540424E8 io, 2.0399333435999998E8 network, 6.318333244E7 memory}
         :  :           :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, x0, y00], build=[right]): rowcount = 169119.33974999998, cumulative cost = {3.429045333475E7 rows, 1.5625783904399998E9 cpu, 4.61540424E8 io, 2.0399333435999998E8 network, 6.318333244E7 memory}
         :  :           :           :  :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :           :  :  :  :     :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     +- Exchange(distribution=[hash[y0]]): rowcount = 165947.86499999996, cumulative cost = {2.4826693794999998E7 rows, 1.38561401812E9 cpu, 3.0769812E8 io, 1.8091696476E8 network, 5.3890224E7 memory}
         :  :           :           :  :  :  :        +- Calc(select=[x, y0]): rowcount = 165947.86499999996, cumulative cost = {2.466074593E7 rows, 1.3577347768E9 cpu, 3.0769812E8 io, 1.76934216E8 network, 5.3890224E7 memory}
         :  :           :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 165947.86499999996, cumulative cost = {2.4494798065E7 rows, 1.3577347768E9 cpu, 3.0769812E8 io, 1.76934216E8 network, 5.3890224E7 memory}
         :  :           :           :  :  :  :              :- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :           :           :  :  :  :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :           :           :  :  :  :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :           :  :  :  :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :           :  :  :  :              :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :  :  :              :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :  :  :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 24976.929749999992, cumulative cost = {2.4711829789499998E7 rows, 1.35915727972E9 cpu, 3.077049E8 io, 1.76940996E8 network, 5.3910564E7 memory}
         :  :           :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 24976.929749999992, cumulative cost = {2.468685285975E7 rows, 1.35915727972E9 cpu, 3.077049E8 io, 1.76940996E8 network, 5.3910564E7 memory}
         :  :           :           :  :  :        :- Calc(select=[x, y0]): rowcount = 165947.86499999996, cumulative cost = {2.466074593E7 rows, 1.3577347768E9 cpu, 3.0769812E8 io, 1.76934216E8 network, 5.3890224E7 memory}
         :  :           :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 165947.86499999996, cumulative cost = {2.4494798065E7 rows, 1.3577347768E9 cpu, 3.0769812E8 io, 1.76934216E8 network, 5.3890224E7 memory}
         :  :           :           :  :  :        :     :- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :           :           :  :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :           :           :  :  :        :     :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :           :  :  :        :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :           :  :  :        :     :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :  :        :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :  :        :     :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  +- Calc(select=[X0, x AS X1]): rowcount = 288557.4102965281, cumulative cost = {2.8030946748530105E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :           :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 288557.4102965281, cumulative cost = {2.7742389338233575E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :           :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :           :  :        :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 962117.0686435205, cumulative cost = {1.815780992793705E7 rows, 2.3569002502525926E8 cpu, 3.07712964E8 io, 2.3837071183496352E7 network, 3641188.576720077 memory}
         :  :           :           :  :           +- Calc(select=[x, X0]): rowcount = 962117.0686435205, cumulative cost = {1.7195692859293528E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :           :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962117.0686435205, cumulative cost = {1.6233575790650006E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :           :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :  :           :           :  :                    +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :           :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :           :           :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :  :           :           :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :  :           :           :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :  :           :           :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :  :           :           :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :           :           :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :           :           :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :           :           :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :           :           :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[y01 AS X0, x AS X1]): rowcount = 190753.10572499997, cumulative cost = {4.533448795595E7 rows, 1.9492534443440003E9 cpu, 6.15375948E8 io, 2.57060089956E8 network, 1.25074957604E8 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y01], build=[right]): rowcount = 190753.10572499997, cumulative cost = {4.5143734850225E7 rows, 1.9492534443440003E9 cpu, 6.15375948E8 io, 2.57060089956E8 network, 1.25074957604E8 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x0]]): rowcount = 310088.37149999995, cumulative cost = {3.5656959744500004E7 rows, 1.7261556333720002E9 cpu, 4.61526888E8 io, 2.33974933956E8 network, 1.076896688E8 memory}
         :  :           :           :           +- Calc(select=[x0, y0 AS y01]): rowcount = 310088.37149999995, cumulative cost = {3.5346871373E7 rows, 1.6740607869600003E9 cpu, 4.61526888E8 io, 2.2653281304E8 network, 1.076896688E8 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 310088.37149999995, cumulative cost = {3.50367830015E7 rows, 1.6740607869600003E9 cpu, 4.61526888E8 io, 2.2653281304E8 network, 1.076896688E8 memory}
         :  :           :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :  :           :           :                 :  +- Calc(select=[y, x0]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :           :                 :        :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :        +- Exchange(distribution=[hash[y0]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :           :                 :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :           :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 187509.9015, cumulative cost = {2.9127105033000007E7 rows, 6.6764119116E8 cpu, 4.61540424E8 io, 7.616988983999999E7 network, 7.003966696E7 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 187509.9015, cumulative cost = {2.8939595131500006E7 rows, 6.6764119116E8 cpu, 4.61540424E8 io, 7.616988983999999E7 network, 7.003966696E7 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :                 :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y00]]): rowcount = 288467.00999999995, cumulative cost = {1.9456063230000004E7 rows, 4.4471635108E8 cpu, 3.07691364E8 io, 5.308473383999999E7 network, 5.38651744E7 memory}
         :  :           :                    +- Calc(select=[x, y0 AS y00]): rowcount = 288467.00999999995, cumulative cost = {1.9167596220000003E7 rows, 3.962538934E8 cpu, 3.07691364E8 io, 4.6161525599999994E7 network, 5.38651744E7 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 288467.00999999995, cumulative cost = {1.887912921E7 rows, 3.962538934E8 cpu, 3.07691364E8 io, 4.6161525599999994E7 network, 5.38651744E7 memory}
         :  :           :                          :- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :                          :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                          :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                          :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                          :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :                          :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :                             +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 163183.39493488477, cumulative cost = {2.7358101535644335E8 rows, 8.628713926381252E9 cpu, 3.846238824E9 io, 1.0774891016464076E9 network, 5.247671568496177E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], build=[right]): rowcount = 163183.39493488477, cumulative cost = {2.7341783196150845E8 rows, 8.628713926381252E9 cpu, 3.846238824E9 io, 1.0774891016464076E9 network, 5.247671568496177E8 memory}
         :        :- Exchange(distribution=[hash[y]]): rowcount = 963181.8695729483, cumulative cost = {7.223416537552741E7 rows, 1.7370816922798169E9 cpu, 1.076958924E9 io, 2.1166586165744773E8 network, 1.1443879393373422E8 memory}
         :        :  +- Calc(select=[y, X0]): rowcount = 963181.8695729483, cumulative cost = {7.127098350595446E7 rows, 1.5752671381915615E9 cpu, 1.076958924E9 io, 1.8854949678769696E8 network, 1.1443879393373422E8 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 963181.8695729483, cumulative cost = {7.03078016363815E7 rows, 1.5752671381915615E9 cpu, 1.076958924E9 io, 1.8854949678769696E8 network, 1.1443879393373422E8 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 11117.463819655926, cumulative cost = {6.2934524766808555E7 rows, 1.5238974384810042E9 cpu, 9.23116644E8 io, 1.8854949678769696E8 network, 1.1381621595983349E8 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.29234073029889E7 rows, 1.5221186442698593E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1381621595983349E8 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11117.463819655926, cumulative cost = {6.291228983916925E7 rows, 1.5219407648487449E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1310469827537552E8 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.2901172375349596E7 rows, 1.5199840912164855E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1310469827537552E8 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 61331.218661920335, cumulative cost = {6.289005491152994E7 rows, 1.5190027917178948E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1239318059091754E8 memory}
         :        :                       :- Calc(select=[X0, X00 AS X1]): rowcount = 4530.314115918301, cumulative cost = {1.786059115170309E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :        :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4530.314115918301, cumulative cost = {1.785606083758717E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :        :                       :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :        :                       :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :        :                       :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :        :                       :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :        :                       :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :     +- Exchange(distribution=[broadcast]): rowcount = 4011.1060576443224, cumulative cost = {9003511.77932582 rows, 1.5944410359415522E7 cpu, 1.53863136E8 io, 731359.5146065553 network, 3370942.5025231554 memory}
         :        :                       :        +- Calc(select=[X0, X1]): rowcount = 4011.1060576443224, cumulative cost = {8999500.673268177 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :        :                       :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4011.1060576443224, cumulative cost = {8995489.567210533 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :        :                       :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                       :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                       :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                       :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                       :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                       :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X0, X00 AS X1]): rowcount = 56800.904546002035, cumulative cost = {4.4968132541164935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 56800.904546002035, cumulative cost = {4.4911331636618935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :        :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                             :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 3926.5060576443225, cumulative cost = {9002129.979325822 rows, 1.5652884410058787E7 cpu, 1.5385638E8 io, 722573.1146065553 network, 3350630.5025231554 memory}
         :        :                                +- Calc(select=[X0, x]): rowcount = 3926.5060576443225, cumulative cost = {8998203.473268177 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 3926.5060576443225, cumulative cost = {8994276.967210533 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                                      :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                      :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X0]]): rowcount = 124707.42999295022, cumulative cost = {2.0102048319104615E8 rows, 6.882929119704907E9 cpu, 2.7692799E9 io, 8.658232399889599E8 network, 4.033447468362783E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 124707.42999295022, cumulative cost = {2.008957757610532E8 rows, 6.861978271466092E9 cpu, 2.7692799E9 io, 8.628302616691291E8 network, 4.033447468362783E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 124707.42999295022, cumulative cost = {2.0077106833106026E8 rows, 6.859982952586205E9 cpu, 2.7692799E9 io, 8.628302616691291E8 network, 3.953634713167295E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 124707.42999295022, cumulative cost = {2.0064636090106732E8 rows, 6.838034444907445E9 cpu, 2.7692799E9 io, 8.598372833492984E8 network, 3.953634713167295E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 687967.9378080012, cumulative cost = {2.0052165347107437E8 rows, 6.827026957902517E9 cpu, 2.7692799E9 io, 8.598372833492984E8 network, 3.8738219579718065E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 535296.2760123978, cumulative cost = {1.54211281221016E8 rows, 5.1331624396578045E9 cpu, 2.153896752E9 io, 6.49483255280025E8 network, 2.823800045562788E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 245577.20674305738, cumulative cost = {9.205083943241891E7 rows, 2.185543680798861E9 cpu, 1.38467808E9 io, 2.6201702812765712E8 network, 1.23553318915377E8 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 223267.18201196662, cumulative cost = {7.329294344760522E7 rows, 1.9370091645846202E9 cpu, 1.076959176E9 io, 2.3765434070133018E8 network, 1.1865278911445712E8 memory}
         :                       :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :                       :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :                       :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                       :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                       :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                       :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                       :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :                       :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :                       :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :                       :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :                       :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :                       :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :                       :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :                       :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                       :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                       :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 166452.4347310907, cumulative cost = {2.8242282296277907E7 rows, 4.487231161063196E8 cpu, 4.61554428E8 io, 5.0988320983301446E7 network, 1.3177653700527105E7 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 166452.4347310907, cumulative cost = {2.8075829861546814E7 rows, 4.487231161063196E8 cpu, 4.61554428E8 io, 5.0988320983301446E7 network, 1.3177653700527105E7 memory}
         :                       :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :  :  :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 148168.49820727165, cumulative cost = {1.8614737226815723E7 rows, 2.7190097872066146E8 cpu, 3.07712124E8 io, 2.791195138330145E7 network, 4880189.800919894 memory}
         :                       :  :  :           +- Calc(select=[y, X0]): rowcount = 148168.49820727165, cumulative cost = {1.846656872860845E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 148168.49820727165, cumulative cost = {1.831840023040118E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
         :                       :  :  :                 :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :                       :  :  :                 :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
         :                       :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :                       :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :                       :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :                       :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :                       :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y AS X1]): rowcount = 22310.024731090747, cumulative cost = {1.8512318778070636E7 rows, 2.4828893900749797E8 cpu, 3.07718904E8 io, 2.436268742632693E7 network, 4900529.800919894 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 22310.024731090747, cumulative cost = {1.8490008753339544E7 rows, 2.4828893900749797E8 cpu, 3.07718904E8 io, 2.436268742632693E7 network, 4900529.800919894 memory}
         :                       :  :        :- Calc(select=[y, X0]): rowcount = 148168.49820727165, cumulative cost = {1.846656872860845E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 148168.49820727165, cumulative cost = {1.831840023040118E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
         :                       :  :        :     :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :                       :  :        :     :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :     :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :     :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :     :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :        :     :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
         :                       :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :                       :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :                       :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :                       :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :                       :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 289719.0692693405, cumulative cost = {6.162514551258467E7 rows, 2.9470834625829315E9 cpu, 7.69218672E8 io, 3.8746622715236783E8 network, 1.5882668564090183E8 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 289719.0692693405, cumulative cost = {6.133542644331533E7 rows, 2.9470834625829315E9 cpu, 7.69218672E8 io, 3.8746622715236783E8 network, 1.5882668564090183E8 memory}
         :                       :        :- Exchange(distribution=[hash[y]]): rowcount = 969946.0617956033, cumulative cost = {5.175106717404598E7 rows, 2.7636871046885667E9 cpu, 6.15376368E8 io, 3.643898575523678E8 network, 1.0498185124090183E8 memory}
         :                       :        :  +- Calc(select=[y, X1]): rowcount = 969946.0617956033, cumulative cost = {5.078112111225038E7 rows, 2.6007361663069053E9 cpu, 6.15376368E8 io, 3.4111115206927335E8 network, 1.0498185124090183E8 memory}
         :                       :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 969946.0617956033, cumulative cost = {4.981117505045478E7 rows, 2.6007361663069053E9 cpu, 6.15376368E8 io, 3.4111115206927335E8 network, 1.0498185124090183E8 memory}
         :                       :        :        :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[hash[y]]): rowcount = 56212.07863735539, cumulative cost = {3.602103898865917E7 rows, 1.4721097496778064E9 cpu, 4.61534088E8 io, 1.8726887206927338E8 network, 1.0183397483720993E8 memory}
         :                       :        :           +- Calc(select=[X1, y]): rowcount = 56212.07863735539, cumulative cost = {3.596482691002182E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
         :                       :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908614831384465E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
         :                       :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                       :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                       :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                       :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                       :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :        :                 :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 152671.6617956033, cumulative cost = {4.5622404312250376E7 rows, 1.6931765503069053E9 cpu, 6.15383148E8 io, 2.1035402806927338E8 network, 1.0500219124090183E8 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 152671.6617956033, cumulative cost = {4.5469732650454774E7 rows, 1.6931765503069053E9 cpu, 6.15383148E8 io, 2.1035402806927338E8 network, 1.0500219124090183E8 memory}
         :                             :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :                             :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                             :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[hash[y]]): rowcount = 56212.07863735539, cumulative cost = {3.602103898865917E7 rows, 1.4721097496778064E9 cpu, 4.61534088E8 io, 1.8726887206927338E8 network, 1.0183397483720993E8 memory}
         :                                +- Calc(select=[X1, y]): rowcount = 56212.07863735539, cumulative cost = {3.596482691002182E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908614831384465E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                                      :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 4487.150927929996, cumulative cost = {2.6359323847148675E8 rows, 8.400643580252589E9 cpu, 3.69240444E9 io, 1.05140640211541E9 network, 5.17873769819973E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 4487.150927929996, cumulative cost = {2.6358875132055882E8 rows, 8.400643580252589E9 cpu, 3.69240444E9 io, 1.05140640211541E9 network, 5.17873769819973E8 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 11118.225020590779, cumulative cost = {6.2649696179579794E7 rows, 1.5373275346303978E9 cpu, 9.2311734E8 io, 1.8856894044628084E8 network, 1.1388480238254161E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.263857795455921E7 rows, 1.5355486186271033E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.1388480238254161E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11118.225020590779, cumulative cost = {6.262745972953862E7 rows, 1.535370727026774E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.131732359812238E8 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.261634150451803E7 rows, 1.53341391942315E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.131732359812238E8 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 61335.41794529453, cumulative cost = {6.2605223279497445E7 rows, 1.5324325527360253E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.12461669579906E8 memory}
               :              :- Calc(select=[X0, X10 AS X1]): rowcount = 56803.004187689134, cumulative cost = {4.4825714625507E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 56803.004187689134, cumulative cost = {4.476891162131931E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :              :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 3940.5036688916416, cumulative cost = {8859707.86438451 rows, 2.2367324227663238E7 cpu, 1.53856728E8 io, 732276.6750760621 network, 3384091.130787534 memory}
               :              :        +- Calc(select=[X1, x]): rowcount = 3940.5036688916416, cumulative cost = {8855767.360715618 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 3940.5036688916416, cumulative cost = {8851826.857046727 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :              :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, X10 AS X1]): rowcount = 4532.413757605399, cumulative cost = {1.771817323604515E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4532.413757605399, cumulative cost = {1.7713640822287545E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
               :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
               :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
               :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
               :                    :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                    :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 4025.1036688916415, cumulative cost = {8861089.664384509 rows, 2.2659503398878183E7 cpu, 1.53863484E8 io, 741063.075076062 network, 3404403.130787534 memory}
               :                       +- Calc(select=[X0, X1]): rowcount = 4025.1036688916415, cumulative cost = {8857064.560715618 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4025.1036688916415, cumulative cost = {8853039.457046727 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :                             :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                             :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                             :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                             :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[X0, X1]): rowcount = 18796.11449894253, cumulative cost = {2.009345679900511E8 rows, 6.863076730906035E9 cpu, 2.7692871E9 io, 8.628374616691291E8 network, 4.033663468362783E8 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 18796.11449894253, cumulative cost = {2.0091577187555215E8 rows, 6.863076730906035E9 cpu, 2.7692871E9 io, 8.628374616691291E8 network, 4.033663468362783E8 memory}
                     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 124707.42999295022, cumulative cost = {2.008957757610532E8 rows, 6.861978271466092E9 cpu, 2.7692799E9 io, 8.628302616691291E8 network, 4.033447468362783E8 memory}
                     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 124707.42999295022, cumulative cost = {2.0077106833106026E8 rows, 6.859982952586205E9 cpu, 2.7692799E9 io, 8.628302616691291E8 network, 3.953634713167295E8 memory}
                     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 124707.42999295022, cumulative cost = {2.0064636090106732E8 rows, 6.838034444907445E9 cpu, 2.7692799E9 io, 8.598372833492984E8 network, 3.953634713167295E8 memory}
                     :        +- Union(all=[true], union=[X0, X1]): rowcount = 687967.9378080012, cumulative cost = {2.0052165347107437E8 rows, 6.827026957902517E9 cpu, 2.7692799E9 io, 8.598372833492984E8 network, 3.8738219579718065E8 memory}
                     :           :- Union(all=[true], union=[X0, X1]): rowcount = 535296.2760123978, cumulative cost = {1.54211281221016E8 rows, 5.1331624396578045E9 cpu, 2.153896752E9 io, 6.49483255280025E8 network, 2.823800045562788E8 memory}
                     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 245577.20674305738, cumulative cost = {9.205083943241891E7 rows, 2.185543680798861E9 cpu, 1.38467808E9 io, 2.6201702812765712E8 network, 1.23553318915377E8 memory}
                     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 223267.18201196662, cumulative cost = {7.329294344760522E7 rows, 1.9370091645846202E9 cpu, 1.076959176E9 io, 2.3765434070133018E8 network, 1.1865278911445712E8 memory}
                     :           :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                     :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                     :           :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                     :           :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                     :           :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                     :           :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                     :           :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :           :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :           :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                     :           :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :           :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :           :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                     :           :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                     :           :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
                     :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                     :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                     :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
                     :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
                     :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
                     :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
                     :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                     :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                     :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                     :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                     :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 166452.4347310907, cumulative cost = {2.8242282296277907E7 rows, 4.487231161063196E8 cpu, 4.61554428E8 io, 5.0988320983301446E7 network, 1.3177653700527105E7 memory}
                     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 166452.4347310907, cumulative cost = {2.8075829861546814E7 rows, 4.487231161063196E8 cpu, 4.61554428E8 io, 5.0988320983301446E7 network, 1.3177653700527105E7 memory}
                     :           :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                     :           :  :  :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 148168.49820727165, cumulative cost = {1.8614737226815723E7 rows, 2.7190097872066146E8 cpu, 3.07712124E8 io, 2.791195138330145E7 network, 4880189.800919894 memory}
                     :           :  :  :           +- Calc(select=[y, X0]): rowcount = 148168.49820727165, cumulative cost = {1.846656872860845E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
                     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 148168.49820727165, cumulative cost = {1.831840023040118E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
                     :           :  :  :                 :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                     :           :  :  :                 :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :  :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
                     :           :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
                     :           :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
                     :           :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
                     :           :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
                     :           :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                     :           :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                     :           :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :  +- Calc(select=[X0, y AS X1]): rowcount = 22310.024731090747, cumulative cost = {1.8512318778070636E7 rows, 2.4828893900749797E8 cpu, 3.07718904E8 io, 2.436268742632693E7 network, 4900529.800919894 memory}
                     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 22310.024731090747, cumulative cost = {1.8490008753339544E7 rows, 2.4828893900749797E8 cpu, 3.07718904E8 io, 2.436268742632693E7 network, 4900529.800919894 memory}
                     :           :  :        :- Calc(select=[y, X0]): rowcount = 148168.49820727165, cumulative cost = {1.846656872860845E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
                     :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 148168.49820727165, cumulative cost = {1.831840023040118E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
                     :           :  :        :     :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                     :           :  :        :     :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :           :  :        :     :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :           :  :        :     :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :        :     :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :        :     :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :     +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
                     :           :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
                     :           :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
                     :           :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
                     :           :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
                     :           :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                     :           :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                     :           :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 289719.0692693405, cumulative cost = {6.162514551258467E7 rows, 2.9470834625829315E9 cpu, 7.69218672E8 io, 3.8746622715236783E8 network, 1.5882668564090183E8 memory}
                     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 289719.0692693405, cumulative cost = {6.133542644331533E7 rows, 2.9470834625829315E9 cpu, 7.69218672E8 io, 3.8746622715236783E8 network, 1.5882668564090183E8 memory}
                     :           :        :- Exchange(distribution=[hash[y]]): rowcount = 969946.0617956033, cumulative cost = {5.175106717404598E7 rows, 2.7636871046885667E9 cpu, 6.15376368E8 io, 3.643898575523678E8 network, 1.0498185124090183E8 memory}
                     :           :        :  +- Calc(select=[y, X1]): rowcount = 969946.0617956033, cumulative cost = {5.078112111225038E7 rows, 2.6007361663069053E9 cpu, 6.15376368E8 io, 3.4111115206927335E8 network, 1.0498185124090183E8 memory}
                     :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 969946.0617956033, cumulative cost = {4.981117505045478E7 rows, 2.6007361663069053E9 cpu, 6.15376368E8 io, 3.4111115206927335E8 network, 1.0498185124090183E8 memory}
                     :           :        :        :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                     :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :        :        +- Exchange(distribution=[hash[y]]): rowcount = 56212.07863735539, cumulative cost = {3.602103898865917E7 rows, 1.4721097496778064E9 cpu, 4.61534088E8 io, 1.8726887206927338E8 network, 1.0183397483720993E8 memory}
                     :           :        :           +- Calc(select=[X1, y]): rowcount = 56212.07863735539, cumulative cost = {3.596482691002182E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
                     :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908614831384465E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
                     :           :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                     :           :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                     :           :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                     :           :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                     :           :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :           :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :           :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                     :           :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :           :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :           :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                     :           :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                     :           :        :                 :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                     :           :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 152671.6617956033, cumulative cost = {4.5622404312250376E7 rows, 1.6931765503069053E9 cpu, 6.15383148E8 io, 2.1035402806927338E8 network, 1.0500219124090183E8 memory}
                     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 152671.6617956033, cumulative cost = {4.5469732650454774E7 rows, 1.6931765503069053E9 cpu, 6.15383148E8 io, 2.1035402806927338E8 network, 1.0500219124090183E8 memory}
                     :                 :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                     :                 :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :                 :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :                 +- Exchange(distribution=[hash[y]]): rowcount = 56212.07863735539, cumulative cost = {3.602103898865917E7 rows, 1.4721097496778064E9 cpu, 4.61534088E8 io, 1.8726887206927338E8 network, 1.0183397483720993E8 memory}
                     :                    +- Calc(select=[X1, y]): rowcount = 56212.07863735539, cumulative cost = {3.596482691002182E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
                     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908614831384465E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
                     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                     :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                     :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                     :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                     :                          :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#8] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[X0]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[X0, X1])\n         +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n            :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n            +- [#6] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[10])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[13])
         :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[2])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[14])
         :              :                 :- Exchange(distribution=[hash[x]])(reuse_id=[27])
         :              :                 :  +- Reused(reference_id=[1])
         :              :                 +- Exchange(distribution=[hash[y]])
         :              :                    +- Calc(select=[y, x0])(reuse_id=[3])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :              :                          :- Reused(reference_id=[1])
         :              :                          +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X1, x])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[x AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[2])
         :              :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :        :                 :- Reused(reference_id=[3])
         :              :        :                 +- Reused(reference_id=[4])
         :              :        +- Reused(reference_id=[5])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[17])
         :              :           :     :- Reused(reference_id=[2])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[6])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[9])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = y)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[16])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[6])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, X1])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[7])
         :                       +- Reused(reference_id=[6])
         :- Exchange(distribution=[broadcast])(reuse_id=[12])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- Reused(reference_id=[8])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[9])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[3])
         :              :        :           +- Reused(reference_id=[5])
         :              :        +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[11])
         :                       +- Reused(reference_id=[5])
         :- Exchange(distribution=[hash[y]])
         :  +- Calc(select=[y, X0])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[X0]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[2,1,3,2,1,0,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, y, X0], build=[right])\n:  :  :        :- [#4] Exchange(distribution=[hash[x]])\n:  :  :        +- [#10] Exchange(distribution=[hash[y]])\n:  :  +- Calc(select=[X0, y AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[y, X0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X1 AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X1, x, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[24])
         :              :  +- Calc(select=[x, y])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[6])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[15])
         :              :  +- Calc(select=[X1, y])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[13])
         :              :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :        :              +- Reused(reference_id=[14])
         :              :        +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]])
         :              :  +- Calc(select=[y, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], build=[right])
         :              :        :- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[15])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[21])
         :              :  +- Calc(select=[x, y0])(reuse_id=[19])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[5])
         :              :- Calc(select=[y, X0])(reuse_id=[22])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[x, y, X0, X1], build=[right])
         :              :     :- Exchange(distribution=[hash[x]])(reuse_id=[29])
         :              :     :  +- Calc(select=[x, y])(reuse_id=[25])
         :              :     :     +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :     :        :- Reused(reference_id=[1])
         :              :     :        +- Reused(reference_id=[6])
         :              :     +- Exchange(distribution=[hash[X1]])
         :              :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :              :           +- Exchange(distribution=[hash[X0, X1]])
         :              :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 +- Union(all=[true], union=[X0, X1])
         :              :                    :- Calc(select=[x0 AS X0, x AS X1])
         :              :                    :  +- Reused(reference_id=[16])
         :              :                    +- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :              :                       +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[6])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[28])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[21])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Reused(reference_id=[22])
         :- Reused(reference_id=[23])
         :- Reused(reference_id=[4])
         :- Reused(reference_id=[6])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[4,3,3,2,3,4,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[y0 AS X0, x0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, x0, y00], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[x]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[y0]])\n:  :  :  +- Calc(select=[y0 AS X0, x AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :- Calc(select=[x, y0])\n:  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :     :- [#10] Calc(select=[x, y0])\n:  :  :        :     +- [#9] Exchange(distribution=[broadcast])\n:  :  :        +- [#9] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, x AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:  :        :- [#3] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[y01 AS X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y01], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x0]])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y00]])\n])
                  :- Reused(reference_id=[24])
                  :- Exchange(distribution=[hash[y00]])
                  :  +- Calc(select=[x, y0 AS y00])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])(reuse_id=[26])
                  :        :  +- Reused(reference_id=[25])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x0]])
                  :  +- Calc(select=[x0, y0 AS y01])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])
                  :        :  +- Calc(select=[y, x0])
                  :        :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
                  :        :        :- Reused(reference_id=[27])
                  :        :        +- Exchange(distribution=[hash[y0]])
                  :        :           +- Reused(reference_id=[19])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[28])
                  :- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[y0]])
                  :  +- Calc(select=[x, y0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
                  :        :- Calc(select=[x, y0])(reuse_id=[30])
                  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :     :- Exchange(distribution=[hash[y]])
                  :        :     :  +- Reused(reference_id=[1])
                  :        :     +- Reused(reference_id=[29])
                  :        +- Reused(reference_id=[6])
                  :- Reused(reference_id=[6])
                  :- Reused(reference_id=[30])
                  +- Reused(reference_id=[6])

Job has been submitted with JobID b53c774edf33605ef10fc19781b4622e
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 51657b36_0147_4bee_81d1_cd9e31184bdd

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalUnion(all=[false])
   :  :        :  :  :- LogicalUnion(all=[false])
   :  :        :  :  :  :- LogicalProject(X0=[$9], X1=[$1])
   :  :        :  :  :  :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :  :  :  :     :- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :  :     :  :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :  :     :  :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  :     +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :        :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :  :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :        :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$11], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $12)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($9, $10)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $9)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalUnion(all=[false])
   :           :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
   :           :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :           :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :  +- LogicalUnion(all=[false])
   :           :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalUnion(all=[false])
   :           :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$9])
   :           :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :           :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :- LogicalUnion(all=[false])
   :           :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :           :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :           :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :- LogicalUnion(all=[false])
   :                 :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalUnion(all=[false])
            :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     +- LogicalUnion(all=[false])
            :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
            :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
            :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :  +- LogicalUnion(all=[false])
            :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  +- LogicalProject(X0=[$1], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalUnion(all=[false])
            :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$9])
            :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
            :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :- LogicalUnion(all=[false])
            :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
            :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
            :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
                  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :- LogicalUnion(all=[false])
                  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 31334.59657810385, cumulative cost = {7.649457084460516E8 rows, 2.4612581682216534E10 cpu, 1.0769490408E10 io, 3.083035733475341E9 network, 1.550805870644473E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 31334.59657810385, cumulative cost = {7.649143738494735E8 rows, 2.4612080328671284E10 cpu, 1.0769490408E10 io, 3.083035733475341E9 network, 1.5488004564634745E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 31334.59657810385, cumulative cost = {7.648830392528954E8 rows, 2.460656543967354E10 cpu, 1.0769490408E10 io, 3.0822837031574664E9 network, 1.5488004564634745E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 172862.17662494045, cumulative cost = {7.648517046563172E8 rows, 2.4603799644847538E10 cpu, 1.0769490408E10 io, 3.0822837031574664E9 network, 1.546795042282476E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 168375.02569701045, cumulative cost = {5.0108560400820553E8 rows, 1.6202983202418324E10 cpu, 7.077085968E9 io, 2.0308773010420566E9 network, 1.0289212724625028E9 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 5191.630762125691, cumulative cost = {2.2733621362606514E8 rows, 7.574100901011375E9 cpu, 3.230847144E9 io, 9.533881993956491E8 network, 5.041541156128851E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 5191.630762125691, cumulative cost = {2.27331021995303E8 rows, 7.574100901011375E9 cpu, 3.230847144E9 io, 9.533881993956491E8 network, 5.041541156128851E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 11117.463819655926, cumulative cost = {6.2934524766808555E7 rows, 1.5238974384810042E9 cpu, 9.23116644E8 io, 1.8854949678769696E8 network, 1.1381621595983349E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.29234073029889E7 rows, 1.5221186442698593E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1381621595983349E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11117.463819655926, cumulative cost = {6.291228983916925E7 rows, 1.5219407648487449E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1310469827537552E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.2901172375349596E7 rows, 1.5199840912164855E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1310469827537552E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 61331.218661920335, cumulative cost = {6.289005491152994E7 rows, 1.5190027917178948E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1239318059091754E8 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 4530.314115918301, cumulative cost = {1.786059115170309E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4530.314115918301, cumulative cost = {1.785606083758717E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 4011.1060576443224, cumulative cost = {9003511.77932582 rows, 1.5944410359415522E7 cpu, 1.53863136E8 io, 731359.5146065553 network, 3370942.5025231554 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 4011.1060576443224, cumulative cost = {8999500.673268177 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4011.1060576443224, cumulative cost = {8995489.567210533 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 56800.904546002035, cumulative cost = {4.4968132541164935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 56800.904546002035, cumulative cost = {4.4911331636618935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 3926.5060576443225, cumulative cost = {9002129.979325822 rows, 1.5652884410058787E7 cpu, 1.5385638E8 io, 722573.1146065553 network, 3350630.5025231554 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 3926.5060576443225, cumulative cost = {8998203.473268177 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 3926.5060576443225, cumulative cost = {8994276.967210533 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 23493.407927848682, cumulative cost = {1.6439130559773234E8 rows, 6.049926575556391E9 cpu, 2.3077305E9 io, 7.648387026079521E8 network, 3.897153216791509E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 23493.407927848682, cumulative cost = {1.643678121898045E8 rows, 6.049926575556391E9 cpu, 2.3077305E9 io, 7.648387026079521E8 network, 3.897153216791509E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 156057.71951899122, cumulative cost = {1.6434318878187665E8 rows, 6.048583193800239E9 cpu, 2.30772372E9 io, 7.648319226079521E8 network, 3.896949816791509E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 156057.71951899122, cumulative cost = {1.6418713106235766E8 rows, 6.046086270287934E9 cpu, 2.30772372E9 io, 7.648319226079521E8 network, 3.7970728762993544E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 156057.71951899122, cumulative cost = {1.6403107334283867E8 rows, 6.018620111652592E9 cpu, 2.30772372E9 io, 7.610865373394964E8 network, 3.7970728762993544E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 860916.687021528, cumulative cost = {1.638750156233197E8 rows, 6.004845444660247E9 cpu, 2.30772372E9 io, 7.610865373394964E8 network, 3.6971959358072E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 673406.785521528, cumulative cost = {1.3388699390329814E8 rows, 5.336343336813226E9 cpu, 1.846183296E9 io, 6.849166474994963E8 network, 2.9967992662072E8 memory}
         :  :           :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 482653.6797965281, cumulative cost = {8.787909916182663E7 rows, 3.386416485683704E9 cpu, 1.230807348E9 io, 4.278565575434964E8 network, 1.7460496901672006E8 memory}
         :  :           :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 194096.26949999997, cumulative cost = {5.93654987335E7 rows, 2.9219297664294996E9 cpu, 7.69245324E8 io, 3.8093433036E8 network, 1.1709389644E8 memory}
         :  :           :           :  :  :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 169119.33974999998, cumulative cost = {3.4459572674499996E7 rows, 1.5625783904399998E9 cpu, 4.61540424E8 io, 2.0399333435999998E8 network, 6.318333244E7 memory}
         :  :           :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, x0, y00], build=[right]): rowcount = 169119.33974999998, cumulative cost = {3.429045333475E7 rows, 1.5625783904399998E9 cpu, 4.61540424E8 io, 2.0399333435999998E8 network, 6.318333244E7 memory}
         :  :           :           :  :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :           :  :  :  :     :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     +- Exchange(distribution=[hash[y0]]): rowcount = 165947.86499999996, cumulative cost = {2.4826693794999998E7 rows, 1.38561401812E9 cpu, 3.0769812E8 io, 1.8091696476E8 network, 5.3890224E7 memory}
         :  :           :           :  :  :  :        +- Calc(select=[x, y0]): rowcount = 165947.86499999996, cumulative cost = {2.466074593E7 rows, 1.3577347768E9 cpu, 3.0769812E8 io, 1.76934216E8 network, 5.3890224E7 memory}
         :  :           :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 165947.86499999996, cumulative cost = {2.4494798065E7 rows, 1.3577347768E9 cpu, 3.0769812E8 io, 1.76934216E8 network, 5.3890224E7 memory}
         :  :           :           :  :  :  :              :- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :           :           :  :  :  :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :           :           :  :  :  :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :           :  :  :  :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :           :  :  :  :              :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :  :  :              :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :  :  :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 24976.929749999992, cumulative cost = {2.4711829789499998E7 rows, 1.35915727972E9 cpu, 3.077049E8 io, 1.76940996E8 network, 5.3910564E7 memory}
         :  :           :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 24976.929749999992, cumulative cost = {2.468685285975E7 rows, 1.35915727972E9 cpu, 3.077049E8 io, 1.76940996E8 network, 5.3910564E7 memory}
         :  :           :           :  :  :        :- Calc(select=[x, y0]): rowcount = 165947.86499999996, cumulative cost = {2.466074593E7 rows, 1.3577347768E9 cpu, 3.0769812E8 io, 1.76934216E8 network, 5.3890224E7 memory}
         :  :           :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 165947.86499999996, cumulative cost = {2.4494798065E7 rows, 1.3577347768E9 cpu, 3.0769812E8 io, 1.76934216E8 network, 5.3890224E7 memory}
         :  :           :           :  :  :        :     :- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :           :           :  :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :           :           :  :  :        :     :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :           :  :  :        :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :           :  :  :        :     :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :  :        :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :  :        :     :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  +- Calc(select=[X0, x AS X1]): rowcount = 288557.4102965281, cumulative cost = {2.8030946748530105E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :           :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 288557.4102965281, cumulative cost = {2.7742389338233575E7 rows, 4.6400406557440746E8 cpu, 4.61562024E8 io, 4.6922227183496356E7 network, 5.7511072576720074E7 memory}
         :  :           :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :           :  :        :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 962117.0686435205, cumulative cost = {1.815780992793705E7 rows, 2.3569002502525926E8 cpu, 3.07712964E8 io, 2.3837071183496352E7 network, 3641188.576720077 memory}
         :  :           :           :  :           +- Calc(select=[x, X0]): rowcount = 962117.0686435205, cumulative cost = {1.7195692859293528E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :           :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962117.0686435205, cumulative cost = {1.6233575790650006E7 rows, 7.40543574931478E7 cpu, 3.07712964E8 io, 746261.536051863 network, 3641188.576720077 memory}
         :  :           :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :  :           :           :  :                    +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :           :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :  :           :           :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :  :           :           :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :  :           :           :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :  :           :           :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :  :           :           :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :           :           :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :           :           :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :           :           :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :  :           :           :  :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :  :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :           :           :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[y01 AS X0, x AS X1]): rowcount = 190753.10572499997, cumulative cost = {4.533448795595E7 rows, 1.9492534443440003E9 cpu, 6.15375948E8 io, 2.57060089956E8 network, 1.25074957604E8 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y01], build=[right]): rowcount = 190753.10572499997, cumulative cost = {4.5143734850225E7 rows, 1.9492534443440003E9 cpu, 6.15375948E8 io, 2.57060089956E8 network, 1.25074957604E8 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x0]]): rowcount = 310088.37149999995, cumulative cost = {3.5656959744500004E7 rows, 1.7261556333720002E9 cpu, 4.61526888E8 io, 2.33974933956E8 network, 1.076896688E8 memory}
         :  :           :           :           +- Calc(select=[x0, y0 AS y01]): rowcount = 310088.37149999995, cumulative cost = {3.5346871373E7 rows, 1.6740607869600003E9 cpu, 4.61526888E8 io, 2.2653281304E8 network, 1.076896688E8 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 310088.37149999995, cumulative cost = {3.50367830015E7 rows, 1.6740607869600003E9 cpu, 4.61526888E8 io, 2.2653281304E8 network, 1.076896688E8 memory}
         :  :           :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :  :           :           :                 :  +- Calc(select=[y, x0]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :           :           :                 :        :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :           :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :        +- Exchange(distribution=[hash[y0]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :           :                 :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :           :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 187509.9015, cumulative cost = {2.9127105033000007E7 rows, 6.6764119116E8 cpu, 4.61540424E8 io, 7.616988983999999E7 network, 7.003966696E7 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 187509.9015, cumulative cost = {2.8939595131500006E7 rows, 6.6764119116E8 cpu, 4.61540424E8 io, 7.616988983999999E7 network, 7.003966696E7 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :                 :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y00]]): rowcount = 288467.00999999995, cumulative cost = {1.9456063230000004E7 rows, 4.4471635108E8 cpu, 3.07691364E8 io, 5.308473383999999E7 network, 5.38651744E7 memory}
         :  :           :                    +- Calc(select=[x, y0 AS y00]): rowcount = 288467.00999999995, cumulative cost = {1.9167596220000003E7 rows, 3.962538934E8 cpu, 3.07691364E8 io, 4.6161525599999994E7 network, 5.38651744E7 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 288467.00999999995, cumulative cost = {1.887912921E7 rows, 3.962538934E8 cpu, 3.07691364E8 io, 4.6161525599999994E7 network, 5.38651744E7 memory}
         :  :           :                          :- Exchange(distribution=[hash[y]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :           :                          :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                          :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :           :                          :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                          :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :           :                          :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :           :                             +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 163183.39493488477, cumulative cost = {2.7358101535644335E8 rows, 8.628713926381252E9 cpu, 3.846238824E9 io, 1.0774891016464076E9 network, 5.247671568496177E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], build=[right]): rowcount = 163183.39493488477, cumulative cost = {2.7341783196150845E8 rows, 8.628713926381252E9 cpu, 3.846238824E9 io, 1.0774891016464076E9 network, 5.247671568496177E8 memory}
         :        :- Exchange(distribution=[hash[y]]): rowcount = 963181.8695729483, cumulative cost = {7.223416537552741E7 rows, 1.7370816922798169E9 cpu, 1.076958924E9 io, 2.1166586165744773E8 network, 1.1443879393373422E8 memory}
         :        :  +- Calc(select=[y, X0]): rowcount = 963181.8695729483, cumulative cost = {7.127098350595446E7 rows, 1.5752671381915615E9 cpu, 1.076958924E9 io, 1.8854949678769696E8 network, 1.1443879393373422E8 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 963181.8695729483, cumulative cost = {7.03078016363815E7 rows, 1.5752671381915615E9 cpu, 1.076958924E9 io, 1.8854949678769696E8 network, 1.1443879393373422E8 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 11117.463819655926, cumulative cost = {6.2934524766808555E7 rows, 1.5238974384810042E9 cpu, 9.23116644E8 io, 1.8854949678769696E8 network, 1.1381621595983349E8 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.29234073029889E7 rows, 1.5221186442698593E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1381621595983349E8 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11117.463819655926, cumulative cost = {6.291228983916925E7 rows, 1.5219407648487449E9 cpu, 9.23116644E8 io, 1.882826776560252E8 network, 1.1310469827537552E8 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11117.463819655926, cumulative cost = {6.2901172375349596E7 rows, 1.5199840912164855E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1310469827537552E8 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 61331.218661920335, cumulative cost = {6.289005491152994E7 rows, 1.5190027917178948E9 cpu, 9.23116644E8 io, 1.8801585852435344E8 network, 1.1239318059091754E8 memory}
         :        :                       :- Calc(select=[X0, X00 AS X1]): rowcount = 4530.314115918301, cumulative cost = {1.786059115170309E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :        :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4530.314115918301, cumulative cost = {1.785606083758717E7 rows, 3.7967980237572215E7 cpu, 3.077262E8 io, 1373527.2277700198 network, 6988718.911956381 memory}
         :        :                       :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :        :                       :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :        :                       :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :        :                       :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :        :                       :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :        :                       :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :                       :     :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :     +- Exchange(distribution=[broadcast]): rowcount = 4011.1060576443224, cumulative cost = {9003511.77932582 rows, 1.5944410359415522E7 cpu, 1.53863136E8 io, 731359.5146065553 network, 3370942.5025231554 memory}
         :        :                       :        +- Calc(select=[X0, X1]): rowcount = 4011.1060576443224, cumulative cost = {8999500.673268177 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :        :                       :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4011.1060576443224, cumulative cost = {8995489.567210533 rows, 1.530263339019243E7 cpu, 1.53863136E8 io, 635092.9692230916 network, 3370942.5025231554 memory}
         :        :                       :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                       :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                       :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                       :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                       :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                       :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X0, X00 AS X1]): rowcount = 56800.904546002035, cumulative cost = {4.4968132541164935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 56800.904546002035, cumulative cost = {4.4911331636618935E7 rows, 1.4809734802616606E9 cpu, 6.15390444E8 io, 1.866423312965834E8 network, 1.0540446167896116E8 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :        :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :        :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                             :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 3926.5060576443225, cumulative cost = {9002129.979325822 rows, 1.5652884410058787E7 cpu, 1.5385638E8 io, 722573.1146065553 network, 3350630.5025231554 memory}
         :        :                                +- Calc(select=[X0, x]): rowcount = 3926.5060576443225, cumulative cost = {8998203.473268177 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 3926.5060576443225, cumulative cost = {8994276.967210533 rows, 1.5024643440835696E7 cpu, 1.5385638E8 io, 628336.9692230916 network, 3350630.5025231554 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.461152889 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101926 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050964 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000002 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000002 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                                      :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                      :           :        :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X0]]): rowcount = 124707.42999295022, cumulative cost = {2.0102048319104615E8 rows, 6.882929119704907E9 cpu, 2.7692799E9 io, 8.658232399889599E8 network, 4.033447468362783E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 124707.42999295022, cumulative cost = {2.008957757610532E8 rows, 6.861978271466092E9 cpu, 2.7692799E9 io, 8.628302616691291E8 network, 4.033447468362783E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 124707.42999295022, cumulative cost = {2.0077106833106026E8 rows, 6.859982952586205E9 cpu, 2.7692799E9 io, 8.628302616691291E8 network, 3.953634713167295E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 124707.42999295022, cumulative cost = {2.0064636090106732E8 rows, 6.838034444907445E9 cpu, 2.7692799E9 io, 8.598372833492984E8 network, 3.953634713167295E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 687967.9378080012, cumulative cost = {2.0052165347107437E8 rows, 6.827026957902517E9 cpu, 2.7692799E9 io, 8.598372833492984E8 network, 3.8738219579718065E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 535296.2760123978, cumulative cost = {1.54211281221016E8 rows, 5.1331624396578045E9 cpu, 2.153896752E9 io, 6.49483255280025E8 network, 2.823800045562788E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 245577.20674305738, cumulative cost = {9.205083943241891E7 rows, 2.185543680798861E9 cpu, 1.38467808E9 io, 2.6201702812765712E8 network, 1.23553318915377E8 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 223267.18201196662, cumulative cost = {7.329294344760522E7 rows, 1.9370091645846202E9 cpu, 1.076959176E9 io, 2.3765434070133018E8 network, 1.1865278911445712E8 memory}
         :                       :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :                       :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
         :                       :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                       :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                       :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                       :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                       :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
         :                       :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :                       :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
         :                       :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
         :                       :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
         :                       :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
         :                       :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
         :                       :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                       :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                       :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 166452.4347310907, cumulative cost = {2.8242282296277907E7 rows, 4.487231161063196E8 cpu, 4.61554428E8 io, 5.0988320983301446E7 network, 1.3177653700527105E7 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 166452.4347310907, cumulative cost = {2.8075829861546814E7 rows, 4.487231161063196E8 cpu, 4.61554428E8 io, 5.0988320983301446E7 network, 1.3177653700527105E7 memory}
         :                       :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :  :  :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 148168.49820727165, cumulative cost = {1.8614737226815723E7 rows, 2.7190097872066146E8 cpu, 3.07712124E8 io, 2.791195138330145E7 network, 4880189.800919894 memory}
         :                       :  :  :           +- Calc(select=[y, X0]): rowcount = 148168.49820727165, cumulative cost = {1.846656872860845E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 148168.49820727165, cumulative cost = {1.831840023040118E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
         :                       :  :  :                 :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :                       :  :  :                 :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
         :                       :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :                       :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :                       :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :                       :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :                       :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y AS X1]): rowcount = 22310.024731090747, cumulative cost = {1.8512318778070636E7 rows, 2.4828893900749797E8 cpu, 3.07718904E8 io, 2.436268742632693E7 network, 4900529.800919894 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 22310.024731090747, cumulative cost = {1.8490008753339544E7 rows, 2.4828893900749797E8 cpu, 3.07718904E8 io, 2.436268742632693E7 network, 4900529.800919894 memory}
         :                       :  :        :- Calc(select=[y, X0]): rowcount = 148168.49820727165, cumulative cost = {1.846656872860845E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 148168.49820727165, cumulative cost = {1.831840023040118E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
         :                       :  :        :     :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :                       :  :        :     :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :     :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :     :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :     :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :        :     :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
         :                       :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
         :                       :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
         :                       :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
         :                       :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
         :                       :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :                       :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 289719.0692693405, cumulative cost = {6.162514551258467E7 rows, 2.9470834625829315E9 cpu, 7.69218672E8 io, 3.8746622715236783E8 network, 1.5882668564090183E8 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 289719.0692693405, cumulative cost = {6.133542644331533E7 rows, 2.9470834625829315E9 cpu, 7.69218672E8 io, 3.8746622715236783E8 network, 1.5882668564090183E8 memory}
         :                       :        :- Exchange(distribution=[hash[y]]): rowcount = 969946.0617956033, cumulative cost = {5.175106717404598E7 rows, 2.7636871046885667E9 cpu, 6.15376368E8 io, 3.643898575523678E8 network, 1.0498185124090183E8 memory}
         :                       :        :  +- Calc(select=[y, X1]): rowcount = 969946.0617956033, cumulative cost = {5.078112111225038E7 rows, 2.6007361663069053E9 cpu, 6.15376368E8 io, 3.4111115206927335E8 network, 1.0498185124090183E8 memory}
         :                       :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 969946.0617956033, cumulative cost = {4.981117505045478E7 rows, 2.6007361663069053E9 cpu, 6.15376368E8 io, 3.4111115206927335E8 network, 1.0498185124090183E8 memory}
         :                       :        :        :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[hash[y]]): rowcount = 56212.07863735539, cumulative cost = {3.602103898865917E7 rows, 1.4721097496778064E9 cpu, 4.61534088E8 io, 1.8726887206927338E8 network, 1.0183397483720993E8 memory}
         :                       :        :           +- Calc(select=[X1, y]): rowcount = 56212.07863735539, cumulative cost = {3.596482691002182E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
         :                       :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908614831384465E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
         :                       :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                       :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                       :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                       :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                       :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                       :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                       :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :        :                 :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                       :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                       :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 152671.6617956033, cumulative cost = {4.5622404312250376E7 rows, 1.6931765503069053E9 cpu, 6.15383148E8 io, 2.1035402806927338E8 network, 1.0500219124090183E8 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 152671.6617956033, cumulative cost = {4.5469732650454774E7 rows, 1.6931765503069053E9 cpu, 6.15383148E8 io, 2.1035402806927338E8 network, 1.0500219124090183E8 memory}
         :                             :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :                             :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                             :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                             :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[hash[y]]): rowcount = 56212.07863735539, cumulative cost = {3.602103898865917E7 rows, 1.4721097496778064E9 cpu, 4.61534088E8 io, 1.8726887206927338E8 network, 1.0183397483720993E8 memory}
         :                                +- Calc(select=[X1, y]): rowcount = 56212.07863735539, cumulative cost = {3.596482691002182E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908614831384465E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                                      :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 4487.150927929996, cumulative cost = {2.6359323847148675E8 rows, 8.400643580252589E9 cpu, 3.69240444E9 io, 1.05140640211541E9 network, 5.17873769819973E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 4487.150927929996, cumulative cost = {2.6358875132055882E8 rows, 8.400643580252589E9 cpu, 3.69240444E9 io, 1.05140640211541E9 network, 5.17873769819973E8 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 11118.225020590779, cumulative cost = {6.2649696179579794E7 rows, 1.5373275346303978E9 cpu, 9.2311734E8 io, 1.8856894044628084E8 network, 1.1388480238254161E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.263857795455921E7 rows, 1.5355486186271033E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.1388480238254161E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 11118.225020590779, cumulative cost = {6.262745972953862E7 rows, 1.535370727026774E9 cpu, 9.2311734E8 io, 1.8830210304578665E8 network, 1.131732359812238E8 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11118.225020590779, cumulative cost = {6.261634150451803E7 rows, 1.53341391942315E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.131732359812238E8 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 61335.41794529453, cumulative cost = {6.2605223279497445E7 rows, 1.5324325527360253E9 cpu, 9.2311734E8 io, 1.8803526564529246E8 network, 1.12461669579906E8 memory}
               :              :- Calc(select=[X0, X10 AS X1]): rowcount = 56803.004187689134, cumulative cost = {4.4825714625507E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 56803.004187689134, cumulative cost = {4.476891162131931E7 rows, 1.4876880320601552E9 cpu, 6.15390792E8 io, 1.8665203485705292E8 network, 1.0543870617345539E8 memory}
               :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :              :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 3940.5036688916416, cumulative cost = {8859707.86438451 rows, 2.2367324227663238E7 cpu, 1.53856728E8 io, 732276.6750760621 network, 3384091.130787534 memory}
               :              :        +- Calc(select=[X1, x]): rowcount = 3940.5036688916416, cumulative cost = {8855767.360715618 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 3940.5036688916416, cumulative cost = {8851826.857046727 rows, 2.1736843640640575E7 cpu, 1.53856728E8 io, 637704.5870226626 network, 3384091.130787534 memory}
               :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :              :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, X10 AS X1]): rowcount = 4532.413757605399, cumulative cost = {1.771817323604515E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 4532.413757605399, cumulative cost = {1.7713640822287545E7 rows, 4.4683185257924855E7 cpu, 3.07726548E8 io, 1383230.7882395266 network, 7022963.40645061 memory}
               :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
               :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
               :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
               :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
               :                    :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
               :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
               :                    :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                    :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 4025.1036688916415, cumulative cost = {8861089.664384509 rows, 2.2659503398878183E7 cpu, 1.53863484E8 io, 741063.075076062 network, 3404403.130787534 memory}
               :                       +- Calc(select=[X0, X1]): rowcount = 4025.1036688916415, cumulative cost = {8857064.560715618 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4025.1036688916415, cumulative cost = {8853039.457046727 rows, 2.201548681185552E7 cpu, 1.53863484E8 io, 644460.5870226626 network, 3404403.130787534 memory}
               :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :                             :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                             :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :                             :                 :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                             :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[X0, X1]): rowcount = 18796.11449894253, cumulative cost = {2.009345679900511E8 rows, 6.863076730906035E9 cpu, 2.7692871E9 io, 8.628374616691291E8 network, 4.033663468362783E8 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 18796.11449894253, cumulative cost = {2.0091577187555215E8 rows, 6.863076730906035E9 cpu, 2.7692871E9 io, 8.628374616691291E8 network, 4.033663468362783E8 memory}
                     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 124707.42999295022, cumulative cost = {2.008957757610532E8 rows, 6.861978271466092E9 cpu, 2.7692799E9 io, 8.628302616691291E8 network, 4.033447468362783E8 memory}
                     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 124707.42999295022, cumulative cost = {2.0077106833106026E8 rows, 6.859982952586205E9 cpu, 2.7692799E9 io, 8.628302616691291E8 network, 3.953634713167295E8 memory}
                     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 124707.42999295022, cumulative cost = {2.0064636090106732E8 rows, 6.838034444907445E9 cpu, 2.7692799E9 io, 8.598372833492984E8 network, 3.953634713167295E8 memory}
                     :        +- Union(all=[true], union=[X0, X1]): rowcount = 687967.9378080012, cumulative cost = {2.0052165347107437E8 rows, 6.827026957902517E9 cpu, 2.7692799E9 io, 8.598372833492984E8 network, 3.8738219579718065E8 memory}
                     :           :- Union(all=[true], union=[X0, X1]): rowcount = 535296.2760123978, cumulative cost = {1.54211281221016E8 rows, 5.1331624396578045E9 cpu, 2.153896752E9 io, 6.49483255280025E8 network, 2.823800045562788E8 memory}
                     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 245577.20674305738, cumulative cost = {9.205083943241891E7 rows, 2.185543680798861E9 cpu, 1.38467808E9 io, 2.6201702812765712E8 network, 1.23553318915377E8 memory}
                     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 223267.18201196662, cumulative cost = {7.329294344760522E7 rows, 1.9370091645846202E9 cpu, 1.076959176E9 io, 2.3765434070133018E8 network, 1.1865278911445712E8 memory}
                     :           :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 56814.74728087593, cumulative cost = {4.482739396931534E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                     :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56814.74728087593, cumulative cost = {4.477057922203447E7 rows, 1.4880627812962885E9 cpu, 6.15404748E8 io, 1.8666601971802872E8 network, 1.0547513541393001E8 memory}
                     :           :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                     :           :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                     :           :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                     :           :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                     :           :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :           :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :           :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                     :           :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :           :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :           :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                     :           :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                     :           :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4018.7909568036034, cumulative cost = {8861363.722006485 rows, 2.2741447165493377E7 cpu, 1.53870684E8 io, 746261.536051863 network, 3416136.283139075 memory}
                     :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4018.7909568036034, cumulative cost = {8857344.93104968 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                     :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4018.7909568036034, cumulative cost = {8853326.140092876 rows, 2.20984406124048E7 cpu, 1.53870684E8 io, 649810.5530885765 network, 3416136.283139075 memory}
                     :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8848107.349136071 rows, 2.178810509470861E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 3394536.283139075 memory}
                     :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26191.939712024025, cumulative cost = {8821915.409424048 rows, 2.1369034059316225E7 cpu, 1.53863484E8 io, 642610.5530885765 network, 1718252.1415695376 memory}
                     :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26191.939712024025, cumulative cost = {8795723.469712025 rows, 1.6759252669999998E7 cpu, 1.53863484E8 io, 14004.0 network, 1718252.1415695376 memory}
                     :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144491.90999999997, cumulative cost = {8769531.530000001 rows, 1.444738211E7 cpu, 1.53863484E8 io, 14004.0 network, 41968.0 memory}
                     :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                     :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
                     :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                     :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                     :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 166452.4347310907, cumulative cost = {2.8242282296277907E7 rows, 4.487231161063196E8 cpu, 4.61554428E8 io, 5.0988320983301446E7 network, 1.3177653700527105E7 memory}
                     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 166452.4347310907, cumulative cost = {2.8075829861546814E7 rows, 4.487231161063196E8 cpu, 4.61554428E8 io, 5.0988320983301446E7 network, 1.3177653700527105E7 memory}
                     :           :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                     :           :  :  :        :  +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 148168.49820727165, cumulative cost = {1.8614737226815723E7 rows, 2.7190097872066146E8 cpu, 3.07712124E8 io, 2.791195138330145E7 network, 4880189.800919894 memory}
                     :           :  :  :           +- Calc(select=[y, X0]): rowcount = 148168.49820727165, cumulative cost = {1.846656872860845E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
                     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 148168.49820727165, cumulative cost = {1.831840023040118E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
                     :           :  :  :                 :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                     :           :  :  :                 :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :  :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
                     :           :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
                     :           :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
                     :           :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
                     :           :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
                     :           :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                     :           :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                     :           :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :  +- Calc(select=[X0, y AS X1]): rowcount = 22310.024731090747, cumulative cost = {1.8512318778070636E7 rows, 2.4828893900749797E8 cpu, 3.07718904E8 io, 2.436268742632693E7 network, 4900529.800919894 memory}
                     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 22310.024731090747, cumulative cost = {1.8490008753339544E7 rows, 2.4828893900749797E8 cpu, 3.07718904E8 io, 2.436268742632693E7 network, 4900529.800919894 memory}
                     :           :  :        :- Calc(select=[y, X0]): rowcount = 148168.49820727165, cumulative cost = {1.846656872860845E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
                     :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 148168.49820727165, cumulative cost = {1.831840023040118E7 rows, 2.470086710218398E8 cpu, 3.07712124E8 io, 2.435590742632693E7 network, 4880189.800919894 memory}
                     :           :  :        :     :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                     :           :  :        :     :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :           :  :        :     :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :           :  :        :     :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :        :     :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :        :     :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :     +- Exchange(distribution=[hash[X1]]): rowcount = 26190.988048477684, cumulative cost = {8874209.73219391 rows, 2.6182039117451966E7 cpu, 1.53863064E8 io, 1270751.426326929 network, 3393154.4702051436 memory}
                     :           :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8848018.744145432 rows, 2.1781953125307716E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 3393154.4702051436 memory}
                     :           :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26190.988048477684, cumulative cost = {8821827.756096955 rows, 2.136289731653207E7 cpu, 1.53863064E8 io, 642167.7131634644 network, 1716931.2351025718 memory}
                     :           :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26190.988048477684, cumulative cost = {8795636.768048478 rows, 1.6753283419999998E7 cpu, 1.53863064E8 io, 13584.0 network, 1716931.2351025718 memory}
                     :           :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 144486.65999999997, cumulative cost = {8769445.780000001 rows, 1.444149686E7 cpu, 1.53863064E8 io, 13584.0 network, 40708.0 memory}
                     :           :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                     :           :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
                     :           :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 174.75, cumulative cost = {2079.5 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 174.75, cumulative cost = {1904.75 rows, 99720.0 cpu, 13980.0 io, 6780.0 network, 20340.0 memory}
                     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :           :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 289719.0692693405, cumulative cost = {6.162514551258467E7 rows, 2.9470834625829315E9 cpu, 7.69218672E8 io, 3.8746622715236783E8 network, 1.5882668564090183E8 memory}
                     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 289719.0692693405, cumulative cost = {6.133542644331533E7 rows, 2.9470834625829315E9 cpu, 7.69218672E8 io, 3.8746622715236783E8 network, 1.5882668564090183E8 memory}
                     :           :        :- Exchange(distribution=[hash[y]]): rowcount = 969946.0617956033, cumulative cost = {5.175106717404598E7 rows, 2.7636871046885667E9 cpu, 6.15376368E8 io, 3.643898575523678E8 network, 1.0498185124090183E8 memory}
                     :           :        :  +- Calc(select=[y, X1]): rowcount = 969946.0617956033, cumulative cost = {5.078112111225038E7 rows, 2.6007361663069053E9 cpu, 6.15376368E8 io, 3.4111115206927335E8 network, 1.0498185124090183E8 memory}
                     :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 969946.0617956033, cumulative cost = {4.981117505045478E7 rows, 2.6007361663069053E9 cpu, 6.15376368E8 io, 3.4111115206927335E8 network, 1.0498185124090183E8 memory}
                     :           :        :        :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                     :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :        :        +- Exchange(distribution=[hash[y]]): rowcount = 56212.07863735539, cumulative cost = {3.602103898865917E7 rows, 1.4721097496778064E9 cpu, 4.61534088E8 io, 1.8726887206927338E8 network, 1.0183397483720993E8 memory}
                     :           :        :           +- Calc(select=[X1, y]): rowcount = 56212.07863735539, cumulative cost = {3.596482691002182E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
                     :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908614831384465E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
                     :           :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                     :           :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                     :           :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                     :           :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                     :           :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :           :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :           :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                     :           :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :           :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :           :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                     :           :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                     :           :        :                 :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                     :           :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 152671.6617956033, cumulative cost = {4.5622404312250376E7 rows, 1.6931765503069053E9 cpu, 6.15383148E8 io, 2.1035402806927338E8 network, 1.0500219124090183E8 memory}
                     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 152671.6617956033, cumulative cost = {4.5469732650454774E7 rows, 1.6931765503069053E9 cpu, 6.15383148E8 io, 2.1035402806927338E8 network, 1.0500219124090183E8 memory}
                     :                 :- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                     :                 :  +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                     :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :                 :        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                     :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                     :                 +- Exchange(distribution=[hash[y]]): rowcount = 56212.07863735539, cumulative cost = {3.602103898865917E7 rows, 1.4721097496778064E9 cpu, 4.61534088E8 io, 1.8726887206927338E8 network, 1.0183397483720993E8 memory}
                     :                    +- Calc(select=[X1, y]): rowcount = 56212.07863735539, cumulative cost = {3.596482691002182E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
                     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 56212.07863735539, cumulative cost = {3.5908614831384465E7 rows, 1.4626661204667306E9 cpu, 4.61534088E8 io, 1.8591978218197685E8 network, 1.0183397483720993E8 memory}
                     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
                     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
                     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
                     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
                     :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
                     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                     :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                     :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
                     :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                     :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
                     :                          :                    +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                     :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                     :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#8] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[X0]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[X0, X1])\n         +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n            :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n            +- [#6] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[10])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[13])
         :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[2])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[14])
         :              :                 :- Exchange(distribution=[hash[x]])(reuse_id=[27])
         :              :                 :  +- Reused(reference_id=[1])
         :              :                 +- Exchange(distribution=[hash[y]])
         :              :                    +- Calc(select=[y, x0])(reuse_id=[3])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :              :                          :- Reused(reference_id=[1])
         :              :                          +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X1, x])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[x AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[2])
         :              :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :        :                 :- Reused(reference_id=[3])
         :              :        :                 +- Reused(reference_id=[4])
         :              :        +- Reused(reference_id=[5])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[17])
         :              :           :     :- Reused(reference_id=[2])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[6])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[9])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = y)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[16])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[6])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, X1])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[7])
         :                       +- Reused(reference_id=[6])
         :- Exchange(distribution=[broadcast])(reuse_id=[12])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- Reused(reference_id=[8])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[9])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[3])
         :              :        :           +- Reused(reference_id=[5])
         :              :        +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[11])
         :                       +- Reused(reference_id=[5])
         :- Exchange(distribution=[hash[y]])
         :  +- Calc(select=[y, X0])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[X0]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[2,1,3,2,1,0,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, y, X0], build=[right])\n:  :  :        :- [#4] Exchange(distribution=[hash[x]])\n:  :  :        +- [#10] Exchange(distribution=[hash[y]])\n:  :  +- Calc(select=[X0, y AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[y, X0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X1 AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X1, x, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[24])
         :              :  +- Calc(select=[x, y])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[6])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[15])
         :              :  +- Calc(select=[X1, y])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[13])
         :              :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :        :              +- Reused(reference_id=[14])
         :              :        +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]])
         :              :  +- Calc(select=[y, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], build=[right])
         :              :        :- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[15])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[21])
         :              :  +- Calc(select=[x, y0])(reuse_id=[19])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[5])
         :              :- Calc(select=[y, X0])(reuse_id=[22])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[x, y, X0, X1], build=[right])
         :              :     :- Exchange(distribution=[hash[x]])(reuse_id=[29])
         :              :     :  +- Calc(select=[x, y])(reuse_id=[25])
         :              :     :     +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :     :        :- Reused(reference_id=[1])
         :              :     :        +- Reused(reference_id=[6])
         :              :     +- Exchange(distribution=[hash[X1]])
         :              :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :              :           +- Exchange(distribution=[hash[X0, X1]])
         :              :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 +- Union(all=[true], union=[X0, X1])
         :              :                    :- Calc(select=[x0 AS X0, x AS X1])
         :              :                    :  +- Reused(reference_id=[16])
         :              :                    +- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :              :                       +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[6])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[28])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[21])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Reused(reference_id=[22])
         :- Reused(reference_id=[23])
         :- Reused(reference_id=[4])
         :- Reused(reference_id=[6])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[4,3,3,2,3,4,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[y0 AS X0, x0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, x0, y00], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[x]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[y0]])\n:  :  :  +- Calc(select=[y0 AS X0, x AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :- Calc(select=[x, y0])\n:  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :     :- [#10] Calc(select=[x, y0])\n:  :  :        :     +- [#9] Exchange(distribution=[broadcast])\n:  :  :        +- [#9] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, x AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:  :        :- [#3] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[y01 AS X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y01], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x0]])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y00]])\n])
                  :- Reused(reference_id=[24])
                  :- Exchange(distribution=[hash[y00]])
                  :  +- Calc(select=[x, y0 AS y00])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])(reuse_id=[26])
                  :        :  +- Reused(reference_id=[25])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x0]])
                  :  +- Calc(select=[x0, y0 AS y01])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])
                  :        :  +- Calc(select=[y, x0])
                  :        :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
                  :        :        :- Reused(reference_id=[27])
                  :        :        +- Exchange(distribution=[hash[y0]])
                  :        :           +- Reused(reference_id=[19])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[28])
                  :- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[y0]])
                  :  +- Calc(select=[x, y0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
                  :        :- Calc(select=[x, y0])(reuse_id=[30])
                  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :     :- Exchange(distribution=[hash[y]])
                  :        :     :  +- Reused(reference_id=[1])
                  :        :     +- Reused(reference_id=[29])
                  :        +- Reused(reference_id=[6])
                  :- Reused(reference_id=[6])
                  :- Reused(reference_id=[30])
                  +- Reused(reference_id=[6])

Job has been submitted with JobID 311f0f724051b7020adbd638194c71bb
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: c30bb811_9c82_407c_8e05_18e4ffe3f77b

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalUnion(all=[false])
   :  :        :  :  :- LogicalUnion(all=[false])
   :  :        :  :  :  :- LogicalProject(X0=[$9], X1=[$1])
   :  :        :  :  :  :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :  :  :  :     :- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :  :     :  :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :  :     :  :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  :     +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :        :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :  :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :        :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$11], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $12)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($9, $10)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $9)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalUnion(all=[false])
   :           :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
   :           :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :           :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :  +- LogicalUnion(all=[false])
   :           :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalUnion(all=[false])
   :           :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$9])
   :           :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :           :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :- LogicalUnion(all=[false])
   :           :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :           :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :           :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :- LogicalUnion(all=[false])
   :                 :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalUnion(all=[false])
            :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     +- LogicalUnion(all=[false])
            :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
            :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
            :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :  +- LogicalUnion(all=[false])
            :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  +- LogicalProject(X0=[$1], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalUnion(all=[false])
            :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$9])
            :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
            :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :- LogicalUnion(all=[false])
            :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
            :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
            :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
                  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :- LogicalUnion(all=[false])
                  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 20051.186302124515, cumulative cost = {4.8702501691408014E8 rows, 1.5335987197519854E10 cpu, 6.891193896E9 io, 1.9137622025568366E9 network, 9.92564552998101E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 20051.186302124515, cumulative cost = {4.87004965727778E8 rows, 1.533566637853902E10 cpu, 6.891193896E9 io, 1.9137622025568366E9 network, 9.912812770747651E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 20051.186302124515, cumulative cost = {4.869849145414759E8 rows, 1.5332137369749847E10 cpu, 6.891193896E9 io, 1.9132809740855856E9 network, 9.912812770747651E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 110615.48852106454, cumulative cost = {4.8696486335517377E8 rows, 1.533036752193351E10 cpu, 6.891193896E9 io, 1.9132809740855856E9 network, 9.899980011514292E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 107741.62835649225, cumulative cost = {3.194118053611865E8 rows, 1.016151349090243E10 cpu, 4.528492512E9 io, 1.270019033576068E9 network, 6.585302058726273E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 3324.4915552753923, cumulative cost = {1.4547162053569177E8 rows, 4.846790234980651E9 cpu, 2.067358176E9 io, 6.100721726956213E8 network, 3.226675234869789E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 3324.4915552753923, cumulative cost = {1.454682960441365E8 rows, 4.846790234980651E9 cpu, 2.067358176E9 io, 6.100721726956213E8 network, 3.226675234869789E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 7114.528727429894, cumulative cost = {4.027196373845563E7 rows, 9.751808366134467E8 cpu, 5.90688108E8 io, 1.2065363309917484E8 network, 7.284677942869933E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.02648492097282E7 rows, 9.740425120170579E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.284677942869933E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7114.528727429894, cumulative cost = {4.025773468100078E7 rows, 9.739286795574191E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.239144959014381E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.025062015227335E7 rows, 9.726765225013914E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.239144959014381E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39248.404504546525, cumulative cost = {4.024350562354592E7 rows, 9.720485480293187E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.19361197515883E7 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 2902.503103769362, cumulative cost = {1.1429776453253599E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2902.503103769362, cumulative cost = {1.142687395014983E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 2582.6756235336693, cumulative cost = {5761689.509341273 rows, 1.022414546281028E7 cpu, 9.845652E7 io, 469752.31473019515 network, 2161399.198748731 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 2582.6756235336693, cumulative cost = {5759106.83371774 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2582.6756235336693, cumulative cost = {5756524.158094207 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 36345.90140077716, cumulative cost = {2.8774480765787777E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 36345.90140077716, cumulative cost = {2.8738134864386998E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 2513.375623533669, cumulative cost = {5760557.609341274 rows, 1.0018149600378709E7 cpu, 9.8450988E7 io, 462557.11473019514 network, 2144759.198748731 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 2513.375623533669, cumulative cost = {5758044.2337177405 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 2513.375623533669, cumulative cost = {5755530.858094207 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 15048.748307739388, cumulative cost = {1.0519300781412558E8 rows, 3.8714320921509233E9 cpu, 1.476670068E9 io, 4.8941853959644645E8 network, 2.4942233044954348E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 15048.748307739388, cumulative cost = {1.0517795906581785E8 rows, 3.8714320921509233E9 cpu, 1.476670068E9 io, 4.8941853959644645E8 network, 2.4942233044954348E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 99861.9887182626, cumulative cost = {1.0516198431751011E8 rows, 3.870555412241177E9 cpu, 1.476664512E9 io, 4.8941298359644645E8 network, 2.4940566244954348E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 99861.9887182626, cumulative cost = {1.0506212232879186E8 rows, 3.8689576204216847E9 cpu, 1.476664512E9 io, 4.8941298359644645E8 network, 2.4301449517157468E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 99861.9887182626, cumulative cost = {1.049622603400736E8 rows, 3.8513819104072704E9 cpu, 1.476664512E9 io, 4.870162958672081E8 network, 2.4301449517157468E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 550904.1959071144, cumulative cost = {1.0486239835135534E8 rows, 3.8425674432727566E9 cpu, 1.476664512E9 io, 4.870162958672081E8 network, 2.366233278936059E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 430919.18390711443, cumulative cost = {8.567335729144824E7 rows, 3.4147715357968493E9 cpu, 1.181335152E9 io, 4.3827406514720815E8 network, 1.917994402136059E8 memory}
         :  :           :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 308859.2777633645, cumulative cost = {5.623390166987862E7 rows, 2.1670475385909424E9 cpu, 7.87571916E8 io, 2.7378684014420813E8 network, 1.1176376418660593E8 memory}
         :  :           :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 124216.7173125, cumulative cost = {3.79875896488125E7 rows, 1.8697553964023123E9 cpu, 4.92224844E8 io, 2.43756514785E8 network, 7.4945987965E7 memory}
         :  :           :           :  :  :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 108217.11740624999, cumulative cost = {2.20502331579375E7 rows, 9.998901703899999E8 cpu, 2.9532936E8 io, 1.30532860785E8 network, 4.0438301965E7 memory}
         :  :           :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, x0, y00], build=[right]): rowcount = 108217.11740624999, cumulative cost = {2.194201604053125E7 rows, 9.998901703899999E8 cpu, 2.9532936E8 io, 1.30532860785E8 network, 4.0438301965E7 memory}
         :  :           :           :  :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :           :  :  :  :     :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     +- Exchange(distribution=[hash[y0]]): rowcount = 106200.999375, cumulative cost = {1.5886415573125001E7 rows, 8.866553851949999E8 cpu, 1.96889928E8 io, 1.15766921985E8 network, 3.4491018E7 memory}
         :  :           :           :  :  :  :        +- Calc(select=[x, y0]): rowcount = 106200.999375, cumulative cost = {1.578021457375E7 rows, 8.688136173E8 cpu, 1.96889928E8 io, 1.13218098E8 network, 3.4491018E7 memory}
         :  :           :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 106200.999375, cumulative cost = {1.5674013574375E7 rows, 8.688136173E8 cpu, 1.96889928E8 io, 1.13218098E8 network, 3.4491018E7 memory}
         :  :           :           :  :  :  :              :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :           :           :  :  :  :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :           :           :  :  :  :              :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :           :  :  :  :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :           :  :  :  :              :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :  :  :              :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :  :  :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 15999.59990625, cumulative cost = {1.5813139773562502E7 rows, 8.69741009295E8 cpu, 1.96895484E8 io, 1.13223654E8 network, 3.4507686E7 memory}
         :  :           :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 15999.59990625, cumulative cost = {1.5797140173656251E7 rows, 8.69741009295E8 cpu, 1.96895484E8 io, 1.13223654E8 network, 3.4507686E7 memory}
         :  :           :           :  :  :        :- Calc(select=[x, y0]): rowcount = 106200.999375, cumulative cost = {1.578021457375E7 rows, 8.688136173E8 cpu, 1.96889928E8 io, 1.13218098E8 network, 3.4491018E7 memory}
         :  :           :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 106200.999375, cumulative cost = {1.5674013574375E7 rows, 8.688136173E8 cpu, 1.96889928E8 io, 1.13218098E8 network, 3.4491018E7 memory}
         :  :           :           :  :  :        :     :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :           :           :  :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :           :           :  :  :        :     :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :           :  :  :        :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :           :  :  :        :     :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :  :        :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :  :        :     :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  +- Calc(select=[X0, x AS X1]): rowcount = 184642.56045086452, cumulative cost = {1.793745274330275E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :           :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 184642.56045086452, cumulative cost = {1.775281018285189E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :           :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :           :  :        :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615634.6530057634, cumulative cost = {1.1619652372401021E7 rows, 1.5087171368682057E8 cpu, 1.96902108E8 io, 1.525719135920814E7 network, 2343426.221605916 memory}
         :  :           :           :  :           +- Calc(select=[x, X0]): rowcount = 615634.6530057634, cumulative cost = {1.1004017719395258E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :           :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.6530057634, cumulative cost = {1.0388383066389494E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :           :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :  :           :           :  :                    +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :           :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :           :           :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :  :           :           :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :  :           :           :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :  :           :           :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :  :           :           :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :           :           :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :           :           :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :           :           :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :           :           :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[y01 AS X0, x AS X1]): rowcount = 122059.90614374998, cumulative cost = {2.9008536437662505E7 rows, 1.247293078022E9 cpu, 3.93763236E8 io, 1.6448722500300002E8 network, 8.003567602699998E7 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y01], build=[right]): rowcount = 122059.90614374998, cumulative cost = {2.8886476531518754E7 rows, 1.247293078022E9 cpu, 3.93763236E8 io, 1.6448722500300002E8 network, 8.003567602699998E7 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x0]]): rowcount = 198416.95762499995, cumulative cost = {2.2815901375375003E7 rows, 1.104519250361E9 cpu, 2.95318272E8 io, 1.4971409100300002E8 network, 6.890765839999999E7 memory}
         :  :           :           :           +- Calc(select=[x0, y0 AS y01]): rowcount = 198416.95762499995, cumulative cost = {2.261748441775E7 rows, 1.0711852014800001E9 cpu, 2.95318272E8 io, 1.4495208402E8 network, 6.890765839999999E7 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 198416.95762499995, cumulative cost = {2.2419067460125E7 rows, 1.0711852014800001E9 cpu, 2.95318272E8 io, 1.4495208402E8 network, 6.890765839999999E7 memory}
         :  :           :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :  :           :           :                 :  +- Calc(select=[y, x0]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :           :                 :        :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :        +- Exchange(distribution=[hash[y0]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :           :                 :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :           :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 119985.01199999999, cumulative cost = {1.8638136863999996E7 rows, 4.2724500328E8 cpu, 2.9532936E8 io, 4.874223072E7 network, 4.482388767999999E7 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 119985.01199999999, cumulative cost = {1.8518151851999998E7 rows, 4.2724500328E8 cpu, 2.9532936E8 io, 4.874223072E7 network, 4.482388767999999E7 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :                 :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y00]]): rowcount = 184584.33, cumulative cost = {1.244965159E7 rows, 2.8458183664E8 cpu, 1.96884396E8 io, 3.396909672E7 network, 3.4470497199999996E7 memory}
         :  :           :                    +- Calc(select=[x, y0 AS y00]): rowcount = 184584.33, cumulative cost = {1.226506726E7 rows, 2.535716692E8 cpu, 1.96884396E8 io, 2.9539072799999997E7 network, 3.4470497199999996E7 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 184584.33, cumulative cost = {1.208048293E7 rows, 2.535716692E8 cpu, 1.96884396E8 io, 2.9539072799999997E7 network, 3.4470497199999996E7 memory}
         :  :           :                          :- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :                          :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                          :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                          :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                          :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :                          :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :                             +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 104417.13680121685, cumulative cost = {1.7383244319713822E8 rows, 5.314615514293422E9 cpu, 2.461134336E9 io, 6.599468608804467E8 network, 3.358626823856483E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], build=[right]): rowcount = 104417.13680121685, cumulative cost = {1.73728026060337E8 rows, 5.314615514293422E9 cpu, 2.461134336E9 io, 6.599468608804467E8 network, 3.358626823856483E8 memory}
         :        :- Exchange(distribution=[hash[y]]): rowcount = 616313.4793091145, cumulative cost = {4.622254617638297E7 rows, 1.1115915533671973E9 cpu, 6.89127516E8 io, 1.354451566025936E8 network, 7.32451930374354E7 memory}
         :        :  +- Calc(select=[y, X0]): rowcount = 616313.4793091145, cumulative cost = {4.5606232697073855E7 rows, 1.0080508888432661E9 cpu, 6.89127516E8 io, 1.2065363309917484E8 network, 7.32451930374354E7 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 616313.4793091145, cumulative cost = {4.498991921776474E7 rows, 1.0080508888432661E9 cpu, 6.89127516E8 io, 1.2065363309917484E8 network, 7.32451930374354E7 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 7114.528727429894, cumulative cost = {4.027196373845563E7 rows, 9.751808366134467E8 cpu, 5.90688108E8 io, 1.2065363309917484E8 network, 7.284677942869933E7 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.02648492097282E7 rows, 9.740425120170579E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.284677942869933E7 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7114.528727429894, cumulative cost = {4.025773468100078E7 rows, 9.739286795574191E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.239144959014381E7 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.025062015227335E7 rows, 9.726765225013914E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.239144959014381E7 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 39248.404504546525, cumulative cost = {4.024350562354592E7 rows, 9.720485480293187E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.19361197515883E7 memory}
         :        :                       :- Calc(select=[X0, X00 AS X1]): rowcount = 2902.503103769362, cumulative cost = {1.1429776453253599E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :        :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2902.503103769362, cumulative cost = {1.142687395014983E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :        :                       :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :        :                       :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :        :                       :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :        :                       :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :        :                       :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :     +- Exchange(distribution=[broadcast]): rowcount = 2582.6756235336693, cumulative cost = {5761689.509341273 rows, 1.022414546281028E7 cpu, 9.845652E7 io, 469752.31473019515 network, 2161399.198748731 memory}
         :        :                       :        +- Calc(select=[X0, X1]): rowcount = 2582.6756235336693, cumulative cost = {5759106.83371774 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :        :                       :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2582.6756235336693, cumulative cost = {5756524.158094207 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :        :                       :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                       :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                       :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                       :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                       :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                       :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X0, X00 AS X1]): rowcount = 36345.90140077716, cumulative cost = {2.8774480765787777E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 36345.90140077716, cumulative cost = {2.8738134864386998E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :        :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                             :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 2513.375623533669, cumulative cost = {5760557.609341274 rows, 1.0018149600378709E7 cpu, 9.8450988E7 io, 462557.11473019514 network, 2144759.198748731 memory}
         :        :                                +- Calc(select=[X0, x]): rowcount = 2513.375623533669, cumulative cost = {5758044.2337177405 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 2513.375623533669, cumulative cost = {5755530.858094207 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                                      :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X0]]): rowcount = 79800.76603233113, cumulative cost = {1.2740106274715284E8 rows, 4.197455046963493E9 cpu, 1.77200682E9 io, 5.2450170427785313E8 network, 2.5814864645040238E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 79800.76603233113, cumulative cost = {1.273212619811205E8 rows, 4.184048518270061E9 cpu, 1.77200682E9 io, 5.225864858930772E8 network, 2.5814864645040238E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 79800.76603233113, cumulative cost = {1.2724146121508816E8 rows, 4.1827717060135436E9 cpu, 1.77200682E9 io, 5.225864858930772E8 network, 2.5304139742433318E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 79800.76603233113, cumulative cost = {1.2716166044905582E8 rows, 4.1687267711918535E9 cpu, 1.77200682E9 io, 5.2067126750830126E8 network, 2.5304139742433318E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 440233.34011345747, cumulative cost = {1.2708185968302348E8 rows, 4.161683037750038E9 cpu, 1.77200682E9 io, 5.2067126750830126E8 network, 2.47934148398264E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 342540.6208548704, cumulative cost = {9.744858516557616E7 rows, 3.0777871537253575E9 cpu, 1.37823768E9 io, 3.860685784177678E8 network, 1.8073818755954063E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 157157.40484108235, cumulative cost = {5.7673545303601265E7 rows, 1.1916683536304245E9 cpu, 8.86034664E8 io, 1.3813827676502827E8 network, 7.91050655208173E7 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 142866.08520204644, cumulative cost = {4.628500554818858E7 rows, 1.136069450339427E9 cpu, 6.89127696E8 io, 1.3731119620175168E8 network, 7.595317402825707E7 memory}
         :                       :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :                       :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :                       :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                       :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                       :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                       :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                       :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :                       :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :                       :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :                       :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :                       :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :                       :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :                       :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :                       :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                       :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                       :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 106508.83713903588, cumulative cost = {1.745708719983184E7 rows, 1.8367763308187646E8 cpu, 2.95340844E8 io, 1.7862962505522322E7 network, 8444749.491133625 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 106508.83713903588, cumulative cost = {1.7350578362692803E7 rows, 1.8367763308187646E8 cpu, 2.95340844E8 io, 1.7862962505522322E7 network, 8444749.491133625 memory}
         :                       :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :  :  :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 94812.46426023931, cumulative cost = {1.1296686175553767E7 rows, 7.053395616779456E7 cpu, 1.96901412E8 io, 3097023.705522323 network, 3135223.4925602227 memory}
         :                       :  :  :           +- Calc(select=[y, X0]): rowcount = 94812.46426023931, cumulative cost = {1.1201873711293528E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 94812.46426023931, cumulative cost = {1.1107061247033289E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
         :                       :  :  :                 :- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
         :                       :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :                       :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :                       :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :                       :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :                       :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y AS X1]): rowcount = 14291.319639035897, cumulative cost = {1.12313823505716E7 rows, 5.544174588615626E7 cpu, 1.96906968E8 io, 827080.5632765798 network, 3151891.4925602227 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 14291.319639035897, cumulative cost = {1.1217091030932564E7 rows, 5.544174588615626E7 cpu, 1.96906968E8 io, 827080.5632765798 network, 3151891.4925602227 memory}
         :                       :  :        :- Calc(select=[y, X0]): rowcount = 94812.46426023931, cumulative cost = {1.1201873711293528E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 94812.46426023931, cumulative cost = {1.1107061247033289E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
         :                       :  :        :     :- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
         :                       :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :                       :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :                       :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :                       :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :                       :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 185383.21601378804, cumulative cost = {3.943249924112003E7 rows, 1.8857762594740782E9 cpu, 4.92203016E8 io, 2.4793030165273955E8 network, 1.0163312203872335E8 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 185383.21601378804, cumulative cost = {3.9247116025106244E7 rows, 1.8857762594740782E9 cpu, 4.92203016E8 io, 2.4793030165273955E8 network, 1.0163312203872335E8 memory}
         :                       :        :- Exchange(distribution=[hash[y]]): rowcount = 620641.656758587, cumulative cost = {3.3114349459092453E7 rows, 1.7684259490200095E9 cpu, 3.93763584E8 io, 2.3316436285273954E8 network, 6.717929283872336E7 memory}
         :                       :        :  +- Calc(select=[y, X1]): rowcount = 620641.656758587, cumulative cost = {3.2493707802333865E7 rows, 1.664158150684567E9 cpu, 3.93763584E8 io, 2.1826896309053347E8 network, 6.717929283872336E7 memory}
         :                       :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 620641.656758587, cumulative cost = {3.1873066145575278E7 rows, 1.664158150684567E9 cpu, 3.93763584E8 io, 2.1826896309053347E8 network, 6.717929283872336E7 memory}
         :                       :        :        :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[hash[y]]): rowcount = 35969.04505724711, cumulative cost = {2.304914048881669E7 rows, 9.419814063241088E8 cpu, 2.95324176E8 io, 1.1982955509053347E8 network, 6.516502631551753E7 memory}
         :                       :        :           +- Calc(select=[X1, y]): rowcount = 35969.04505724711, cumulative cost = {2.301317144375944E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
         :                       :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977202398702193E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
         :                       :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                       :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                       :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                       :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                       :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :        :                 :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 97692.71925858707, cumulative cost = {2.9193041177333865E7 rows, 1.0834556506845667E9 cpu, 3.9376914E8 io, 1.3460268909053347E8 network, 6.719596083872336E7 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 97692.71925858707, cumulative cost = {2.9095348458075278E7 rows, 1.0834556506845667E9 cpu, 3.9376914E8 io, 1.3460268909053347E8 network, 6.719596083872336E7 memory}
         :                             :- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :                             :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                             :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[hash[y]]): rowcount = 35969.04505724711, cumulative cost = {2.304914048881669E7 rows, 9.419814063241088E8 cpu, 2.95324176E8 io, 1.1982955509053347E8 network, 6.516502631551753E7 memory}
         :                                +- Calc(select=[X1, y]): rowcount = 35969.04505724711, cumulative cost = {2.301317144375944E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977202398702193E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                                      :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 2873.860164572296, cumulative cost = {1.6744244250546622E8 rows, 5.168743415542558E9 cpu, 2.362701384E9 io, 6.432619405095176E8 network, 3.3146779527880186E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 2873.860164572296, cumulative cost = {1.6743956864530164E8 rows, 5.168743415542558E9 cpu, 2.362701384E9 io, 6.432619405095176E8 network, 3.3146779527880186E8 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 7115.152858965637, cumulative cost = {4.009036097420688E7 rows, 9.838205626021278E8 cpu, 5.9068866E8 io, 1.2066955061644031E8 network, 7.290298826829742E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0083245821347915E7 rows, 9.826821381446933E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.290298826829742E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7115.152858965637, cumulative cost = {4.007613066848895E7 rows, 9.825682956989498E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.244761848532362E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0069015515629984E7 rows, 9.813160287957718E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.244761848532362E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 39251.84762325718, cumulative cost = {4.006190036277102E7 rows, 9.806879992337997E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.199224870234983E7 memory}
               :              :- Calc(select=[X0, X10 AS X1]): rowcount = 36347.62296013249, cumulative cost = {2.868367641384097E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 36347.62296013249, cumulative cost = {2.8647328790880837E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :              :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :              :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :              :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :              :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :              :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 2524.8526859025365, cumulative cost = {5669749.814275759 rows, 1.4337513866439002E7 cpu, 9.8451264E7 io, 470500.8942060667 network, 2172180.958636831 memory}
               :              :        +- Calc(select=[X1, x]): rowcount = 2524.8526859025365, cumulative cost = {5667224.961589857 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2524.8526859025365, cumulative cost = {5664700.108903955 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :              :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :              :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :              :              :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :              :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :              :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, X10 AS X1]): rowcount = 2904.224663124692, cumulative cost = {1.1338972101306796E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2904.224663124692, cumulative cost = {1.133606787664367E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
               :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
               :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
               :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
               :                    :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                    :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                    :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                    :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                    :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 2594.152685902536, cumulative cost = {5670881.714275759 rows, 1.4544045325114453E7 cpu, 9.8456796E7 io, 477696.0942060667 network, 2188820.958636831 memory}
               :                       +- Calc(select=[X0, X1]): rowcount = 2594.152685902536, cumulative cost = {5668287.561589857 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2594.152685902536, cumulative cost = {5665693.408903955 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :                             :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                             :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                             :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                             :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[X0, X1]): rowcount = 12043.91490484967, cumulative cost = {1.2734633381093019E8 rows, 4.1847695803983197E9 cpu, 1.772012724E9 io, 5.225923898930772E8 network, 2.5816635845040238E8 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 12043.91490484967, cumulative cost = {1.2733428989602534E8 rows, 4.1847695803983197E9 cpu, 1.772012724E9 io, 5.225923898930772E8 network, 2.5816635845040238E8 memory}
                     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 79800.76603233113, cumulative cost = {1.273212619811205E8 rows, 4.184048518270061E9 cpu, 1.77200682E9 io, 5.225864858930772E8 network, 2.5814864645040238E8 memory}
                     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 79800.76603233113, cumulative cost = {1.2724146121508816E8 rows, 4.1827717060135436E9 cpu, 1.77200682E9 io, 5.225864858930772E8 network, 2.5304139742433318E8 memory}
                     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 79800.76603233113, cumulative cost = {1.2716166044905582E8 rows, 4.1687267711918535E9 cpu, 1.77200682E9 io, 5.2067126750830126E8 network, 2.5304139742433318E8 memory}
                     :        +- Union(all=[true], union=[X0, X1]): rowcount = 440233.34011345747, cumulative cost = {1.2708185968302348E8 rows, 4.161683037750038E9 cpu, 1.77200682E9 io, 5.2067126750830126E8 network, 2.47934148398264E8 memory}
                     :           :- Union(all=[true], union=[X0, X1]): rowcount = 342540.6208548704, cumulative cost = {9.744858516557616E7 rows, 3.0777871537253575E9 cpu, 1.37823768E9 io, 3.860685784177678E8 network, 1.8073818755954063E8 memory}
                     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 157157.40484108235, cumulative cost = {5.7673545303601265E7 rows, 1.1916683536304245E9 cpu, 8.86034664E8 io, 1.3813827676502827E8 network, 7.91050655208173E7 memory}
                     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 142866.08520204644, cumulative cost = {4.628500554818858E7 rows, 1.136069450339427E9 cpu, 6.89127696E8 io, 1.3731119620175168E8 network, 7.595317402825707E7 memory}
                     :           :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                     :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                     :           :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                     :           :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                     :           :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                     :           :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                     :           :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :           :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :           :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                     :           :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :           :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :           :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                     :           :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                     :           :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
                     :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                     :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                     :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
                     :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
                     :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
                     :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
                     :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                     :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                     :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                     :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                     :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 106508.83713903588, cumulative cost = {1.745708719983184E7 rows, 1.8367763308187646E8 cpu, 2.95340844E8 io, 1.7862962505522322E7 network, 8444749.491133625 memory}
                     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 106508.83713903588, cumulative cost = {1.7350578362692803E7 rows, 1.8367763308187646E8 cpu, 2.95340844E8 io, 1.7862962505522322E7 network, 8444749.491133625 memory}
                     :           :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                     :           :  :  :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 94812.46426023931, cumulative cost = {1.1296686175553767E7 rows, 7.053395616779456E7 cpu, 1.96901412E8 io, 3097023.705522323 network, 3135223.4925602227 memory}
                     :           :  :  :           +- Calc(select=[y, X0]): rowcount = 94812.46426023931, cumulative cost = {1.1201873711293528E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
                     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 94812.46426023931, cumulative cost = {1.1107061247033289E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
                     :           :  :  :                 :- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
                     :           :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
                     :           :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
                     :           :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
                     :           :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
                     :           :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                     :           :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                     :           :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :  +- Calc(select=[X0, y AS X1]): rowcount = 14291.319639035897, cumulative cost = {1.12313823505716E7 rows, 5.544174588615626E7 cpu, 1.96906968E8 io, 827080.5632765798 network, 3151891.4925602227 memory}
                     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 14291.319639035897, cumulative cost = {1.1217091030932564E7 rows, 5.544174588615626E7 cpu, 1.96906968E8 io, 827080.5632765798 network, 3151891.4925602227 memory}
                     :           :  :        :- Calc(select=[y, X0]): rowcount = 94812.46426023931, cumulative cost = {1.1201873711293528E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
                     :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 94812.46426023931, cumulative cost = {1.1107061247033289E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
                     :           :  :        :     :- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :           :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :           :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
                     :           :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
                     :           :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
                     :           :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
                     :           :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
                     :           :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                     :           :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                     :           :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 185383.21601378804, cumulative cost = {3.943249924112003E7 rows, 1.8857762594740782E9 cpu, 4.92203016E8 io, 2.4793030165273955E8 network, 1.0163312203872335E8 memory}
                     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 185383.21601378804, cumulative cost = {3.9247116025106244E7 rows, 1.8857762594740782E9 cpu, 4.92203016E8 io, 2.4793030165273955E8 network, 1.0163312203872335E8 memory}
                     :           :        :- Exchange(distribution=[hash[y]]): rowcount = 620641.656758587, cumulative cost = {3.3114349459092453E7 rows, 1.7684259490200095E9 cpu, 3.93763584E8 io, 2.3316436285273954E8 network, 6.717929283872336E7 memory}
                     :           :        :  +- Calc(select=[y, X1]): rowcount = 620641.656758587, cumulative cost = {3.2493707802333865E7 rows, 1.664158150684567E9 cpu, 3.93763584E8 io, 2.1826896309053347E8 network, 6.717929283872336E7 memory}
                     :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 620641.656758587, cumulative cost = {3.1873066145575278E7 rows, 1.664158150684567E9 cpu, 3.93763584E8 io, 2.1826896309053347E8 network, 6.717929283872336E7 memory}
                     :           :        :        :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                     :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :        :        +- Exchange(distribution=[hash[y]]): rowcount = 35969.04505724711, cumulative cost = {2.304914048881669E7 rows, 9.419814063241088E8 cpu, 2.95324176E8 io, 1.1982955509053347E8 network, 6.516502631551753E7 memory}
                     :           :        :           +- Calc(select=[X1, y]): rowcount = 35969.04505724711, cumulative cost = {2.301317144375944E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
                     :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977202398702193E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
                     :           :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                     :           :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                     :           :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                     :           :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                     :           :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :           :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :           :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                     :           :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :           :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :           :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                     :           :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                     :           :        :                 :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                     :           :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 97692.71925858707, cumulative cost = {2.9193041177333865E7 rows, 1.0834556506845667E9 cpu, 3.9376914E8 io, 1.3460268909053347E8 network, 6.719596083872336E7 memory}
                     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 97692.71925858707, cumulative cost = {2.9095348458075278E7 rows, 1.0834556506845667E9 cpu, 3.9376914E8 io, 1.3460268909053347E8 network, 6.719596083872336E7 memory}
                     :                 :- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                     :                 :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :                 :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :                 +- Exchange(distribution=[hash[y]]): rowcount = 35969.04505724711, cumulative cost = {2.304914048881669E7 rows, 9.419814063241088E8 cpu, 2.95324176E8 io, 1.1982955509053347E8 network, 6.516502631551753E7 memory}
                     :                    +- Calc(select=[X1, y]): rowcount = 35969.04505724711, cumulative cost = {2.301317144375944E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
                     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977202398702193E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
                     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                     :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                     :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                     :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                     :                          :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#8] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[X0]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[X0, X1])\n         +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n            :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n            +- [#6] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[10])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[13])
         :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[2])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[14])
         :              :                 :- Exchange(distribution=[hash[x]])(reuse_id=[27])
         :              :                 :  +- Reused(reference_id=[1])
         :              :                 +- Exchange(distribution=[hash[y]])
         :              :                    +- Calc(select=[y, x0])(reuse_id=[3])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :              :                          :- Reused(reference_id=[1])
         :              :                          +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X1, x])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[x AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[2])
         :              :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :        :                 :- Reused(reference_id=[3])
         :              :        :                 +- Reused(reference_id=[4])
         :              :        +- Reused(reference_id=[5])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[17])
         :              :           :     :- Reused(reference_id=[2])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[6])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[9])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = y)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[16])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[6])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, X1])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[7])
         :                       +- Reused(reference_id=[6])
         :- Exchange(distribution=[broadcast])(reuse_id=[12])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- Reused(reference_id=[8])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[9])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[3])
         :              :        :           +- Reused(reference_id=[5])
         :              :        +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[11])
         :                       +- Reused(reference_id=[5])
         :- Exchange(distribution=[hash[y]])
         :  +- Calc(select=[y, X0])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[X0]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[2,1,3,2,1,0,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, y, X0], build=[right])\n:  :  :        :- [#4] Exchange(distribution=[hash[x]])\n:  :  :        +- [#10] Exchange(distribution=[hash[y]])\n:  :  +- Calc(select=[X0, y AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[y, X0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X1 AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X1, x, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[24])
         :              :  +- Calc(select=[x, y])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[6])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[15])
         :              :  +- Calc(select=[X1, y])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[13])
         :              :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :        :              +- Reused(reference_id=[14])
         :              :        +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]])
         :              :  +- Calc(select=[y, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], build=[right])
         :              :        :- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[15])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[21])
         :              :  +- Calc(select=[x, y0])(reuse_id=[19])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[5])
         :              :- Calc(select=[y, X0])(reuse_id=[22])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :     :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :     :  +- Calc(select=[x, y])(reuse_id=[25])
         :              :     :     +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :     :        :- Reused(reference_id=[1])
         :              :     :        +- Reused(reference_id=[6])
         :              :     +- Exchange(distribution=[broadcast])
         :              :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :              :           +- Exchange(distribution=[hash[X0, X1]])
         :              :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 +- Union(all=[true], union=[X0, X1])
         :              :                    :- Calc(select=[x0 AS X0, x AS X1])
         :              :                    :  +- Reused(reference_id=[16])
         :              :                    +- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :              :                       +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[6])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[28])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[21])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Reused(reference_id=[22])
         :- Reused(reference_id=[23])
         :- Reused(reference_id=[4])
         :- Reused(reference_id=[6])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[4,3,3,2,3,4,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[y0 AS X0, x0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, x0, y00], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[x]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[y0]])\n:  :  :  +- Calc(select=[y0 AS X0, x AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :- Calc(select=[x, y0])\n:  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :     :- [#10] Calc(select=[x, y0])\n:  :  :        :     +- [#9] Exchange(distribution=[broadcast])\n:  :  :        +- [#9] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, x AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:  :        :- [#3] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[y01 AS X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y01], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x0]])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y00]])\n])
                  :- Reused(reference_id=[24])
                  :- Exchange(distribution=[hash[y00]])
                  :  +- Calc(select=[x, y0 AS y00])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])(reuse_id=[26])
                  :        :  +- Reused(reference_id=[25])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x0]])
                  :  +- Calc(select=[x0, y0 AS y01])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])
                  :        :  +- Calc(select=[y, x0])
                  :        :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
                  :        :        :- Reused(reference_id=[27])
                  :        :        +- Exchange(distribution=[hash[y0]])
                  :        :           +- Reused(reference_id=[19])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[28])
                  :- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[y0]])
                  :  +- Calc(select=[x, y0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
                  :        :- Calc(select=[x, y0])(reuse_id=[29])
                  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :     :- Exchange(distribution=[hash[y]])
                  :        :     :  +- Reused(reference_id=[1])
                  :        :     +- Exchange(distribution=[hash[x]])
                  :        :        +- Reused(reference_id=[25])
                  :        +- Reused(reference_id=[6])
                  :- Reused(reference_id=[6])
                  :- Reused(reference_id=[29])
                  +- Reused(reference_id=[6])

Job has been submitted with JobID 63c962c0d141fe642366c83da52ac6f8
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 7e7d477c_0f94_4ac2_bfd3_c99784ed9120

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalUnion(all=[false])
   :  :        :  :  :- LogicalUnion(all=[false])
   :  :        :  :  :  :- LogicalProject(X0=[$9], X1=[$1])
   :  :        :  :  :  :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :  :  :  :     :- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :  :     :  :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :  :     :  :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  :     +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :        :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :  :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :        :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$11], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $12)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($9, $10)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $9)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalUnion(all=[false])
   :           :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
   :           :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :           :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :  +- LogicalUnion(all=[false])
   :           :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalUnion(all=[false])
   :           :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$9])
   :           :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :           :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :- LogicalUnion(all=[false])
   :           :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :           :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :           :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :- LogicalUnion(all=[false])
   :                 :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalUnion(all=[false])
            :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     +- LogicalUnion(all=[false])
            :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
            :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
            :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :  +- LogicalUnion(all=[false])
            :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  +- LogicalProject(X0=[$1], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalUnion(all=[false])
            :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$9])
            :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
            :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :- LogicalUnion(all=[false])
            :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
            :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
            :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
                  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :- LogicalUnion(all=[false])
                  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 20051.186302124515, cumulative cost = {4.8702501691408014E8 rows, 1.5335987197519854E10 cpu, 6.891193896E9 io, 1.9137622025568366E9 network, 9.92564552998101E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 20051.186302124515, cumulative cost = {4.87004965727778E8 rows, 1.533566637853902E10 cpu, 6.891193896E9 io, 1.9137622025568366E9 network, 9.912812770747651E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 20051.186302124515, cumulative cost = {4.869849145414759E8 rows, 1.5332137369749847E10 cpu, 6.891193896E9 io, 1.9132809740855856E9 network, 9.912812770747651E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 110615.48852106454, cumulative cost = {4.8696486335517377E8 rows, 1.533036752193351E10 cpu, 6.891193896E9 io, 1.9132809740855856E9 network, 9.899980011514292E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 107741.62835649225, cumulative cost = {3.194118053611865E8 rows, 1.016151349090243E10 cpu, 4.528492512E9 io, 1.270019033576068E9 network, 6.585302058726273E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 3324.4915552753923, cumulative cost = {1.4547162053569177E8 rows, 4.846790234980651E9 cpu, 2.067358176E9 io, 6.100721726956213E8 network, 3.226675234869789E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 3324.4915552753923, cumulative cost = {1.454682960441365E8 rows, 4.846790234980651E9 cpu, 2.067358176E9 io, 6.100721726956213E8 network, 3.226675234869789E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 7114.528727429894, cumulative cost = {4.027196373845563E7 rows, 9.751808366134467E8 cpu, 5.90688108E8 io, 1.2065363309917484E8 network, 7.284677942869933E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.02648492097282E7 rows, 9.740425120170579E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.284677942869933E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7114.528727429894, cumulative cost = {4.025773468100078E7 rows, 9.739286795574191E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.239144959014381E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.025062015227335E7 rows, 9.726765225013914E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.239144959014381E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39248.404504546525, cumulative cost = {4.024350562354592E7 rows, 9.720485480293187E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.19361197515883E7 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 2902.503103769362, cumulative cost = {1.1429776453253599E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2902.503103769362, cumulative cost = {1.142687395014983E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 2582.6756235336693, cumulative cost = {5761689.509341273 rows, 1.022414546281028E7 cpu, 9.845652E7 io, 469752.31473019515 network, 2161399.198748731 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 2582.6756235336693, cumulative cost = {5759106.83371774 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2582.6756235336693, cumulative cost = {5756524.158094207 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 36345.90140077716, cumulative cost = {2.8774480765787777E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 36345.90140077716, cumulative cost = {2.8738134864386998E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 2513.375623533669, cumulative cost = {5760557.609341274 rows, 1.0018149600378709E7 cpu, 9.8450988E7 io, 462557.11473019514 network, 2144759.198748731 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 2513.375623533669, cumulative cost = {5758044.2337177405 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 2513.375623533669, cumulative cost = {5755530.858094207 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 15048.748307739388, cumulative cost = {1.0519300781412558E8 rows, 3.8714320921509233E9 cpu, 1.476670068E9 io, 4.8941853959644645E8 network, 2.4942233044954348E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 15048.748307739388, cumulative cost = {1.0517795906581785E8 rows, 3.8714320921509233E9 cpu, 1.476670068E9 io, 4.8941853959644645E8 network, 2.4942233044954348E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 99861.9887182626, cumulative cost = {1.0516198431751011E8 rows, 3.870555412241177E9 cpu, 1.476664512E9 io, 4.8941298359644645E8 network, 2.4940566244954348E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 99861.9887182626, cumulative cost = {1.0506212232879186E8 rows, 3.8689576204216847E9 cpu, 1.476664512E9 io, 4.8941298359644645E8 network, 2.4301449517157468E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 99861.9887182626, cumulative cost = {1.049622603400736E8 rows, 3.8513819104072704E9 cpu, 1.476664512E9 io, 4.870162958672081E8 network, 2.4301449517157468E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 550904.1959071144, cumulative cost = {1.0486239835135534E8 rows, 3.8425674432727566E9 cpu, 1.476664512E9 io, 4.870162958672081E8 network, 2.366233278936059E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 430919.18390711443, cumulative cost = {8.567335729144824E7 rows, 3.4147715357968493E9 cpu, 1.181335152E9 io, 4.3827406514720815E8 network, 1.917994402136059E8 memory}
         :  :           :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 308859.2777633645, cumulative cost = {5.623390166987862E7 rows, 2.1670475385909424E9 cpu, 7.87571916E8 io, 2.7378684014420813E8 network, 1.1176376418660593E8 memory}
         :  :           :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 124216.7173125, cumulative cost = {3.79875896488125E7 rows, 1.8697553964023123E9 cpu, 4.92224844E8 io, 2.43756514785E8 network, 7.4945987965E7 memory}
         :  :           :           :  :  :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 108217.11740624999, cumulative cost = {2.20502331579375E7 rows, 9.998901703899999E8 cpu, 2.9532936E8 io, 1.30532860785E8 network, 4.0438301965E7 memory}
         :  :           :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, x0, y00], build=[right]): rowcount = 108217.11740624999, cumulative cost = {2.194201604053125E7 rows, 9.998901703899999E8 cpu, 2.9532936E8 io, 1.30532860785E8 network, 4.0438301965E7 memory}
         :  :           :           :  :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :           :  :  :  :     :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     +- Exchange(distribution=[hash[y0]]): rowcount = 106200.999375, cumulative cost = {1.5886415573125001E7 rows, 8.866553851949999E8 cpu, 1.96889928E8 io, 1.15766921985E8 network, 3.4491018E7 memory}
         :  :           :           :  :  :  :        +- Calc(select=[x, y0]): rowcount = 106200.999375, cumulative cost = {1.578021457375E7 rows, 8.688136173E8 cpu, 1.96889928E8 io, 1.13218098E8 network, 3.4491018E7 memory}
         :  :           :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 106200.999375, cumulative cost = {1.5674013574375E7 rows, 8.688136173E8 cpu, 1.96889928E8 io, 1.13218098E8 network, 3.4491018E7 memory}
         :  :           :           :  :  :  :              :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :           :           :  :  :  :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :           :           :  :  :  :              :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :           :  :  :  :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :           :  :  :  :              :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :  :  :              :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :  :  :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 15999.59990625, cumulative cost = {1.5813139773562502E7 rows, 8.69741009295E8 cpu, 1.96895484E8 io, 1.13223654E8 network, 3.4507686E7 memory}
         :  :           :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 15999.59990625, cumulative cost = {1.5797140173656251E7 rows, 8.69741009295E8 cpu, 1.96895484E8 io, 1.13223654E8 network, 3.4507686E7 memory}
         :  :           :           :  :  :        :- Calc(select=[x, y0]): rowcount = 106200.999375, cumulative cost = {1.578021457375E7 rows, 8.688136173E8 cpu, 1.96889928E8 io, 1.13218098E8 network, 3.4491018E7 memory}
         :  :           :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 106200.999375, cumulative cost = {1.5674013574375E7 rows, 8.688136173E8 cpu, 1.96889928E8 io, 1.13218098E8 network, 3.4491018E7 memory}
         :  :           :           :  :  :        :     :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :           :           :  :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :           :           :  :  :        :     :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :           :  :  :        :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :           :  :  :        :     :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :  :        :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :  :        :     :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  +- Calc(select=[X0, x AS X1]): rowcount = 184642.56045086452, cumulative cost = {1.793745274330275E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :           :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 184642.56045086452, cumulative cost = {1.775281018285189E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :           :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :           :  :        :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615634.6530057634, cumulative cost = {1.1619652372401021E7 rows, 1.5087171368682057E8 cpu, 1.96902108E8 io, 1.525719135920814E7 network, 2343426.221605916 memory}
         :  :           :           :  :           +- Calc(select=[x, X0]): rowcount = 615634.6530057634, cumulative cost = {1.1004017719395258E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :           :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.6530057634, cumulative cost = {1.0388383066389494E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :           :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :  :           :           :  :                    +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :           :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :           :           :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :  :           :           :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :  :           :           :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :  :           :           :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :  :           :           :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :           :           :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :           :           :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :           :           :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :           :           :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[y01 AS X0, x AS X1]): rowcount = 122059.90614374998, cumulative cost = {2.9008536437662505E7 rows, 1.247293078022E9 cpu, 3.93763236E8 io, 1.6448722500300002E8 network, 8.003567602699998E7 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y01], build=[right]): rowcount = 122059.90614374998, cumulative cost = {2.8886476531518754E7 rows, 1.247293078022E9 cpu, 3.93763236E8 io, 1.6448722500300002E8 network, 8.003567602699998E7 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x0]]): rowcount = 198416.95762499995, cumulative cost = {2.2815901375375003E7 rows, 1.104519250361E9 cpu, 2.95318272E8 io, 1.4971409100300002E8 network, 6.890765839999999E7 memory}
         :  :           :           :           +- Calc(select=[x0, y0 AS y01]): rowcount = 198416.95762499995, cumulative cost = {2.261748441775E7 rows, 1.0711852014800001E9 cpu, 2.95318272E8 io, 1.4495208402E8 network, 6.890765839999999E7 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 198416.95762499995, cumulative cost = {2.2419067460125E7 rows, 1.0711852014800001E9 cpu, 2.95318272E8 io, 1.4495208402E8 network, 6.890765839999999E7 memory}
         :  :           :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :  :           :           :                 :  +- Calc(select=[y, x0]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :           :                 :        :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :        +- Exchange(distribution=[hash[y0]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :           :                 :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :           :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 119985.01199999999, cumulative cost = {1.8638136863999996E7 rows, 4.2724500328E8 cpu, 2.9532936E8 io, 4.874223072E7 network, 4.482388767999999E7 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 119985.01199999999, cumulative cost = {1.8518151851999998E7 rows, 4.2724500328E8 cpu, 2.9532936E8 io, 4.874223072E7 network, 4.482388767999999E7 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :                 :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y00]]): rowcount = 184584.33, cumulative cost = {1.244965159E7 rows, 2.8458183664E8 cpu, 1.96884396E8 io, 3.396909672E7 network, 3.4470497199999996E7 memory}
         :  :           :                    +- Calc(select=[x, y0 AS y00]): rowcount = 184584.33, cumulative cost = {1.226506726E7 rows, 2.535716692E8 cpu, 1.96884396E8 io, 2.9539072799999997E7 network, 3.4470497199999996E7 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 184584.33, cumulative cost = {1.208048293E7 rows, 2.535716692E8 cpu, 1.96884396E8 io, 2.9539072799999997E7 network, 3.4470497199999996E7 memory}
         :  :           :                          :- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :                          :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                          :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                          :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                          :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :                          :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :                             +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 104417.13680121685, cumulative cost = {1.7383244319713822E8 rows, 5.314615514293422E9 cpu, 2.461134336E9 io, 6.599468608804467E8 network, 3.358626823856483E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], build=[right]): rowcount = 104417.13680121685, cumulative cost = {1.73728026060337E8 rows, 5.314615514293422E9 cpu, 2.461134336E9 io, 6.599468608804467E8 network, 3.358626823856483E8 memory}
         :        :- Exchange(distribution=[hash[y]]): rowcount = 616313.4793091145, cumulative cost = {4.622254617638297E7 rows, 1.1115915533671973E9 cpu, 6.89127516E8 io, 1.354451566025936E8 network, 7.32451930374354E7 memory}
         :        :  +- Calc(select=[y, X0]): rowcount = 616313.4793091145, cumulative cost = {4.5606232697073855E7 rows, 1.0080508888432661E9 cpu, 6.89127516E8 io, 1.2065363309917484E8 network, 7.32451930374354E7 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 616313.4793091145, cumulative cost = {4.498991921776474E7 rows, 1.0080508888432661E9 cpu, 6.89127516E8 io, 1.2065363309917484E8 network, 7.32451930374354E7 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 7114.528727429894, cumulative cost = {4.027196373845563E7 rows, 9.751808366134467E8 cpu, 5.90688108E8 io, 1.2065363309917484E8 network, 7.284677942869933E7 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.02648492097282E7 rows, 9.740425120170579E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.284677942869933E7 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7114.528727429894, cumulative cost = {4.025773468100078E7 rows, 9.739286795574191E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.239144959014381E7 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.025062015227335E7 rows, 9.726765225013914E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.239144959014381E7 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 39248.404504546525, cumulative cost = {4.024350562354592E7 rows, 9.720485480293187E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.19361197515883E7 memory}
         :        :                       :- Calc(select=[X0, X00 AS X1]): rowcount = 2902.503103769362, cumulative cost = {1.1429776453253599E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :        :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2902.503103769362, cumulative cost = {1.142687395014983E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :        :                       :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :        :                       :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :        :                       :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :        :                       :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :        :                       :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :     +- Exchange(distribution=[broadcast]): rowcount = 2582.6756235336693, cumulative cost = {5761689.509341273 rows, 1.022414546281028E7 cpu, 9.845652E7 io, 469752.31473019515 network, 2161399.198748731 memory}
         :        :                       :        +- Calc(select=[X0, X1]): rowcount = 2582.6756235336693, cumulative cost = {5759106.83371774 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :        :                       :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2582.6756235336693, cumulative cost = {5756524.158094207 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :        :                       :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                       :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                       :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                       :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                       :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                       :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X0, X00 AS X1]): rowcount = 36345.90140077716, cumulative cost = {2.8774480765787777E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 36345.90140077716, cumulative cost = {2.8738134864386998E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :        :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                             :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 2513.375623533669, cumulative cost = {5760557.609341274 rows, 1.0018149600378709E7 cpu, 9.8450988E7 io, 462557.11473019514 network, 2144759.198748731 memory}
         :        :                                +- Calc(select=[X0, x]): rowcount = 2513.375623533669, cumulative cost = {5758044.2337177405 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 2513.375623533669, cumulative cost = {5755530.858094207 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                                      :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X0]]): rowcount = 79800.76603233113, cumulative cost = {1.2740106274715284E8 rows, 4.197455046963493E9 cpu, 1.77200682E9 io, 5.2450170427785313E8 network, 2.5814864645040238E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 79800.76603233113, cumulative cost = {1.273212619811205E8 rows, 4.184048518270061E9 cpu, 1.77200682E9 io, 5.225864858930772E8 network, 2.5814864645040238E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 79800.76603233113, cumulative cost = {1.2724146121508816E8 rows, 4.1827717060135436E9 cpu, 1.77200682E9 io, 5.225864858930772E8 network, 2.5304139742433318E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 79800.76603233113, cumulative cost = {1.2716166044905582E8 rows, 4.1687267711918535E9 cpu, 1.77200682E9 io, 5.2067126750830126E8 network, 2.5304139742433318E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 440233.34011345747, cumulative cost = {1.2708185968302348E8 rows, 4.161683037750038E9 cpu, 1.77200682E9 io, 5.2067126750830126E8 network, 2.47934148398264E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 342540.6208548704, cumulative cost = {9.744858516557616E7 rows, 3.0777871537253575E9 cpu, 1.37823768E9 io, 3.860685784177678E8 network, 1.8073818755954063E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 157157.40484108235, cumulative cost = {5.7673545303601265E7 rows, 1.1916683536304245E9 cpu, 8.86034664E8 io, 1.3813827676502827E8 network, 7.91050655208173E7 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 142866.08520204644, cumulative cost = {4.628500554818858E7 rows, 1.136069450339427E9 cpu, 6.89127696E8 io, 1.3731119620175168E8 network, 7.595317402825707E7 memory}
         :                       :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :                       :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :                       :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                       :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                       :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                       :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                       :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :                       :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :                       :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :                       :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :                       :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :                       :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :                       :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :                       :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                       :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                       :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 106508.83713903588, cumulative cost = {1.745708719983184E7 rows, 1.8367763308187646E8 cpu, 2.95340844E8 io, 1.7862962505522322E7 network, 8444749.491133625 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 106508.83713903588, cumulative cost = {1.7350578362692803E7 rows, 1.8367763308187646E8 cpu, 2.95340844E8 io, 1.7862962505522322E7 network, 8444749.491133625 memory}
         :                       :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :  :  :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 94812.46426023931, cumulative cost = {1.1296686175553767E7 rows, 7.053395616779456E7 cpu, 1.96901412E8 io, 3097023.705522323 network, 3135223.4925602227 memory}
         :                       :  :  :           +- Calc(select=[y, X0]): rowcount = 94812.46426023931, cumulative cost = {1.1201873711293528E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 94812.46426023931, cumulative cost = {1.1107061247033289E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
         :                       :  :  :                 :- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
         :                       :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :                       :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :                       :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :                       :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :                       :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y AS X1]): rowcount = 14291.319639035897, cumulative cost = {1.12313823505716E7 rows, 5.544174588615626E7 cpu, 1.96906968E8 io, 827080.5632765798 network, 3151891.4925602227 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 14291.319639035897, cumulative cost = {1.1217091030932564E7 rows, 5.544174588615626E7 cpu, 1.96906968E8 io, 827080.5632765798 network, 3151891.4925602227 memory}
         :                       :  :        :- Calc(select=[y, X0]): rowcount = 94812.46426023931, cumulative cost = {1.1201873711293528E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 94812.46426023931, cumulative cost = {1.1107061247033289E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
         :                       :  :        :     :- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
         :                       :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :                       :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :                       :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :                       :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :                       :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 185383.21601378804, cumulative cost = {3.943249924112003E7 rows, 1.8857762594740782E9 cpu, 4.92203016E8 io, 2.4793030165273955E8 network, 1.0163312203872335E8 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 185383.21601378804, cumulative cost = {3.9247116025106244E7 rows, 1.8857762594740782E9 cpu, 4.92203016E8 io, 2.4793030165273955E8 network, 1.0163312203872335E8 memory}
         :                       :        :- Exchange(distribution=[hash[y]]): rowcount = 620641.656758587, cumulative cost = {3.3114349459092453E7 rows, 1.7684259490200095E9 cpu, 3.93763584E8 io, 2.3316436285273954E8 network, 6.717929283872336E7 memory}
         :                       :        :  +- Calc(select=[y, X1]): rowcount = 620641.656758587, cumulative cost = {3.2493707802333865E7 rows, 1.664158150684567E9 cpu, 3.93763584E8 io, 2.1826896309053347E8 network, 6.717929283872336E7 memory}
         :                       :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 620641.656758587, cumulative cost = {3.1873066145575278E7 rows, 1.664158150684567E9 cpu, 3.93763584E8 io, 2.1826896309053347E8 network, 6.717929283872336E7 memory}
         :                       :        :        :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[hash[y]]): rowcount = 35969.04505724711, cumulative cost = {2.304914048881669E7 rows, 9.419814063241088E8 cpu, 2.95324176E8 io, 1.1982955509053347E8 network, 6.516502631551753E7 memory}
         :                       :        :           +- Calc(select=[X1, y]): rowcount = 35969.04505724711, cumulative cost = {2.301317144375944E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
         :                       :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977202398702193E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
         :                       :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                       :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                       :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                       :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                       :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :        :                 :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 97692.71925858707, cumulative cost = {2.9193041177333865E7 rows, 1.0834556506845667E9 cpu, 3.9376914E8 io, 1.3460268909053347E8 network, 6.719596083872336E7 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 97692.71925858707, cumulative cost = {2.9095348458075278E7 rows, 1.0834556506845667E9 cpu, 3.9376914E8 io, 1.3460268909053347E8 network, 6.719596083872336E7 memory}
         :                             :- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :                             :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                             :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[hash[y]]): rowcount = 35969.04505724711, cumulative cost = {2.304914048881669E7 rows, 9.419814063241088E8 cpu, 2.95324176E8 io, 1.1982955509053347E8 network, 6.516502631551753E7 memory}
         :                                +- Calc(select=[X1, y]): rowcount = 35969.04505724711, cumulative cost = {2.301317144375944E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977202398702193E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                                      :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 2873.860164572296, cumulative cost = {1.6744244250546622E8 rows, 5.168743415542558E9 cpu, 2.362701384E9 io, 6.432619405095176E8 network, 3.3146779527880186E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 2873.860164572296, cumulative cost = {1.6743956864530164E8 rows, 5.168743415542558E9 cpu, 2.362701384E9 io, 6.432619405095176E8 network, 3.3146779527880186E8 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 7115.152858965637, cumulative cost = {4.009036097420688E7 rows, 9.838205626021278E8 cpu, 5.9068866E8 io, 1.2066955061644031E8 network, 7.290298826829742E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0083245821347915E7 rows, 9.826821381446933E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.290298826829742E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7115.152858965637, cumulative cost = {4.007613066848895E7 rows, 9.825682956989498E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.244761848532362E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0069015515629984E7 rows, 9.813160287957718E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.244761848532362E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 39251.84762325718, cumulative cost = {4.006190036277102E7 rows, 9.806879992337997E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.199224870234983E7 memory}
               :              :- Calc(select=[X0, X10 AS X1]): rowcount = 36347.62296013249, cumulative cost = {2.868367641384097E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 36347.62296013249, cumulative cost = {2.8647328790880837E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :              :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :              :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :              :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :              :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :              :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 2524.8526859025365, cumulative cost = {5669749.814275759 rows, 1.4337513866439002E7 cpu, 9.8451264E7 io, 470500.8942060667 network, 2172180.958636831 memory}
               :              :        +- Calc(select=[X1, x]): rowcount = 2524.8526859025365, cumulative cost = {5667224.961589857 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2524.8526859025365, cumulative cost = {5664700.108903955 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :              :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :              :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :              :              :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :              :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :              :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, X10 AS X1]): rowcount = 2904.224663124692, cumulative cost = {1.1338972101306796E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2904.224663124692, cumulative cost = {1.133606787664367E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
               :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
               :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
               :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
               :                    :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                    :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                    :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                    :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                    :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 2594.152685902536, cumulative cost = {5670881.714275759 rows, 1.4544045325114453E7 cpu, 9.8456796E7 io, 477696.0942060667 network, 2188820.958636831 memory}
               :                       +- Calc(select=[X0, X1]): rowcount = 2594.152685902536, cumulative cost = {5668287.561589857 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2594.152685902536, cumulative cost = {5665693.408903955 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :                             :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                             :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                             :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                             :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[X0, X1]): rowcount = 12043.91490484967, cumulative cost = {1.2734633381093019E8 rows, 4.1847695803983197E9 cpu, 1.772012724E9 io, 5.225923898930772E8 network, 2.5816635845040238E8 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 12043.91490484967, cumulative cost = {1.2733428989602534E8 rows, 4.1847695803983197E9 cpu, 1.772012724E9 io, 5.225923898930772E8 network, 2.5816635845040238E8 memory}
                     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 79800.76603233113, cumulative cost = {1.273212619811205E8 rows, 4.184048518270061E9 cpu, 1.77200682E9 io, 5.225864858930772E8 network, 2.5814864645040238E8 memory}
                     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 79800.76603233113, cumulative cost = {1.2724146121508816E8 rows, 4.1827717060135436E9 cpu, 1.77200682E9 io, 5.225864858930772E8 network, 2.5304139742433318E8 memory}
                     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 79800.76603233113, cumulative cost = {1.2716166044905582E8 rows, 4.1687267711918535E9 cpu, 1.77200682E9 io, 5.2067126750830126E8 network, 2.5304139742433318E8 memory}
                     :        +- Union(all=[true], union=[X0, X1]): rowcount = 440233.34011345747, cumulative cost = {1.2708185968302348E8 rows, 4.161683037750038E9 cpu, 1.77200682E9 io, 5.2067126750830126E8 network, 2.47934148398264E8 memory}
                     :           :- Union(all=[true], union=[X0, X1]): rowcount = 342540.6208548704, cumulative cost = {9.744858516557616E7 rows, 3.0777871537253575E9 cpu, 1.37823768E9 io, 3.860685784177678E8 network, 1.8073818755954063E8 memory}
                     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 157157.40484108235, cumulative cost = {5.7673545303601265E7 rows, 1.1916683536304245E9 cpu, 8.86034664E8 io, 1.3813827676502827E8 network, 7.91050655208173E7 memory}
                     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 142866.08520204644, cumulative cost = {4.628500554818858E7 rows, 1.136069450339427E9 cpu, 6.89127696E8 io, 1.3731119620175168E8 network, 7.595317402825707E7 memory}
                     :           :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                     :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                     :           :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                     :           :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                     :           :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                     :           :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                     :           :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :           :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :           :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                     :           :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :           :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :           :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                     :           :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                     :           :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
                     :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                     :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                     :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
                     :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
                     :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
                     :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
                     :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                     :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                     :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                     :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                     :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 106508.83713903588, cumulative cost = {1.745708719983184E7 rows, 1.8367763308187646E8 cpu, 2.95340844E8 io, 1.7862962505522322E7 network, 8444749.491133625 memory}
                     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 106508.83713903588, cumulative cost = {1.7350578362692803E7 rows, 1.8367763308187646E8 cpu, 2.95340844E8 io, 1.7862962505522322E7 network, 8444749.491133625 memory}
                     :           :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                     :           :  :  :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 94812.46426023931, cumulative cost = {1.1296686175553767E7 rows, 7.053395616779456E7 cpu, 1.96901412E8 io, 3097023.705522323 network, 3135223.4925602227 memory}
                     :           :  :  :           +- Calc(select=[y, X0]): rowcount = 94812.46426023931, cumulative cost = {1.1201873711293528E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
                     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 94812.46426023931, cumulative cost = {1.1107061247033289E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
                     :           :  :  :                 :- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
                     :           :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
                     :           :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
                     :           :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
                     :           :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
                     :           :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                     :           :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                     :           :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :  +- Calc(select=[X0, y AS X1]): rowcount = 14291.319639035897, cumulative cost = {1.12313823505716E7 rows, 5.544174588615626E7 cpu, 1.96906968E8 io, 827080.5632765798 network, 3151891.4925602227 memory}
                     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 14291.319639035897, cumulative cost = {1.1217091030932564E7 rows, 5.544174588615626E7 cpu, 1.96906968E8 io, 827080.5632765798 network, 3151891.4925602227 memory}
                     :           :  :        :- Calc(select=[y, X0]): rowcount = 94812.46426023931, cumulative cost = {1.1201873711293528E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
                     :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 94812.46426023931, cumulative cost = {1.1107061247033289E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
                     :           :  :        :     :- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :           :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :           :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
                     :           :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
                     :           :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
                     :           :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
                     :           :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
                     :           :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                     :           :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                     :           :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 185383.21601378804, cumulative cost = {3.943249924112003E7 rows, 1.8857762594740782E9 cpu, 4.92203016E8 io, 2.4793030165273955E8 network, 1.0163312203872335E8 memory}
                     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 185383.21601378804, cumulative cost = {3.9247116025106244E7 rows, 1.8857762594740782E9 cpu, 4.92203016E8 io, 2.4793030165273955E8 network, 1.0163312203872335E8 memory}
                     :           :        :- Exchange(distribution=[hash[y]]): rowcount = 620641.656758587, cumulative cost = {3.3114349459092453E7 rows, 1.7684259490200095E9 cpu, 3.93763584E8 io, 2.3316436285273954E8 network, 6.717929283872336E7 memory}
                     :           :        :  +- Calc(select=[y, X1]): rowcount = 620641.656758587, cumulative cost = {3.2493707802333865E7 rows, 1.664158150684567E9 cpu, 3.93763584E8 io, 2.1826896309053347E8 network, 6.717929283872336E7 memory}
                     :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 620641.656758587, cumulative cost = {3.1873066145575278E7 rows, 1.664158150684567E9 cpu, 3.93763584E8 io, 2.1826896309053347E8 network, 6.717929283872336E7 memory}
                     :           :        :        :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                     :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :        :        +- Exchange(distribution=[hash[y]]): rowcount = 35969.04505724711, cumulative cost = {2.304914048881669E7 rows, 9.419814063241088E8 cpu, 2.95324176E8 io, 1.1982955509053347E8 network, 6.516502631551753E7 memory}
                     :           :        :           +- Calc(select=[X1, y]): rowcount = 35969.04505724711, cumulative cost = {2.301317144375944E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
                     :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977202398702193E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
                     :           :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                     :           :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                     :           :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                     :           :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                     :           :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :           :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :           :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                     :           :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :           :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :           :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                     :           :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                     :           :        :                 :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                     :           :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 97692.71925858707, cumulative cost = {2.9193041177333865E7 rows, 1.0834556506845667E9 cpu, 3.9376914E8 io, 1.3460268909053347E8 network, 6.719596083872336E7 memory}
                     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 97692.71925858707, cumulative cost = {2.9095348458075278E7 rows, 1.0834556506845667E9 cpu, 3.9376914E8 io, 1.3460268909053347E8 network, 6.719596083872336E7 memory}
                     :                 :- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                     :                 :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :                 :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :                 +- Exchange(distribution=[hash[y]]): rowcount = 35969.04505724711, cumulative cost = {2.304914048881669E7 rows, 9.419814063241088E8 cpu, 2.95324176E8 io, 1.1982955509053347E8 network, 6.516502631551753E7 memory}
                     :                    +- Calc(select=[X1, y]): rowcount = 35969.04505724711, cumulative cost = {2.301317144375944E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
                     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977202398702193E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
                     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                     :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                     :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                     :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                     :                          :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#8] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[X0]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[X0, X1])\n         +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n            :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n            +- [#6] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[10])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[13])
         :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[2])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[14])
         :              :                 :- Exchange(distribution=[hash[x]])(reuse_id=[27])
         :              :                 :  +- Reused(reference_id=[1])
         :              :                 +- Exchange(distribution=[hash[y]])
         :              :                    +- Calc(select=[y, x0])(reuse_id=[3])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :              :                          :- Reused(reference_id=[1])
         :              :                          +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X1, x])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[x AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[2])
         :              :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :        :                 :- Reused(reference_id=[3])
         :              :        :                 +- Reused(reference_id=[4])
         :              :        +- Reused(reference_id=[5])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[17])
         :              :           :     :- Reused(reference_id=[2])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[6])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[9])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = y)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[16])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[6])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, X1])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[7])
         :                       +- Reused(reference_id=[6])
         :- Exchange(distribution=[broadcast])(reuse_id=[12])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- Reused(reference_id=[8])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[9])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[3])
         :              :        :           +- Reused(reference_id=[5])
         :              :        +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[11])
         :                       +- Reused(reference_id=[5])
         :- Exchange(distribution=[hash[y]])
         :  +- Calc(select=[y, X0])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[X0]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[2,1,3,2,1,0,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, y, X0], build=[right])\n:  :  :        :- [#4] Exchange(distribution=[hash[x]])\n:  :  :        +- [#10] Exchange(distribution=[hash[y]])\n:  :  +- Calc(select=[X0, y AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[y, X0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X1 AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X1, x, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[24])
         :              :  +- Calc(select=[x, y])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[6])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[15])
         :              :  +- Calc(select=[X1, y])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[13])
         :              :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :        :              +- Reused(reference_id=[14])
         :              :        +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]])
         :              :  +- Calc(select=[y, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], build=[right])
         :              :        :- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[15])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[21])
         :              :  +- Calc(select=[x, y0])(reuse_id=[19])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[5])
         :              :- Calc(select=[y, X0])(reuse_id=[22])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :     :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :     :  +- Calc(select=[x, y])(reuse_id=[25])
         :              :     :     +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :     :        :- Reused(reference_id=[1])
         :              :     :        +- Reused(reference_id=[6])
         :              :     +- Exchange(distribution=[broadcast])
         :              :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :              :           +- Exchange(distribution=[hash[X0, X1]])
         :              :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 +- Union(all=[true], union=[X0, X1])
         :              :                    :- Calc(select=[x0 AS X0, x AS X1])
         :              :                    :  +- Reused(reference_id=[16])
         :              :                    +- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :              :                       +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[6])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[28])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[21])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Reused(reference_id=[22])
         :- Reused(reference_id=[23])
         :- Reused(reference_id=[4])
         :- Reused(reference_id=[6])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[4,3,3,2,3,4,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[y0 AS X0, x0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, x0, y00], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[x]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[y0]])\n:  :  :  +- Calc(select=[y0 AS X0, x AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :- Calc(select=[x, y0])\n:  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :     :- [#10] Calc(select=[x, y0])\n:  :  :        :     +- [#9] Exchange(distribution=[broadcast])\n:  :  :        +- [#9] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, x AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:  :        :- [#3] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[y01 AS X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y01], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x0]])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y00]])\n])
                  :- Reused(reference_id=[24])
                  :- Exchange(distribution=[hash[y00]])
                  :  +- Calc(select=[x, y0 AS y00])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])(reuse_id=[26])
                  :        :  +- Reused(reference_id=[25])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x0]])
                  :  +- Calc(select=[x0, y0 AS y01])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])
                  :        :  +- Calc(select=[y, x0])
                  :        :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
                  :        :        :- Reused(reference_id=[27])
                  :        :        +- Exchange(distribution=[hash[y0]])
                  :        :           +- Reused(reference_id=[19])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[28])
                  :- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[y0]])
                  :  +- Calc(select=[x, y0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
                  :        :- Calc(select=[x, y0])(reuse_id=[29])
                  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :     :- Exchange(distribution=[hash[y]])
                  :        :     :  +- Reused(reference_id=[1])
                  :        :     +- Exchange(distribution=[hash[x]])
                  :        :        +- Reused(reference_id=[25])
                  :        +- Reused(reference_id=[6])
                  :- Reused(reference_id=[6])
                  :- Reused(reference_id=[29])
                  +- Reused(reference_id=[6])

Job has been submitted with JobID b1f2937e76e1411202ee25ae9996de9b
WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: bdb90b51_1383_4469_a189_b17872795b23

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p41 AS (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x)), p45 AS (SELECT s_2.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN s AS s_2 ON r_1.x = s_2.y UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p42 AS (SELECT r_0.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN a AS a_1 ON r_0.x = a_1.x UNION (SELECT r_1.y AS X0, s_2.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_0.x = s_2.y)), p21 AS (SELECT s_2.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN b AS b_1 ON a_0.x = b_1.x)), p37 AS (SELECT p42_1.X1 AS X0, p21_2.X0 AS X1 FROM a AS a_0 INNER JOIN p42 AS p42_1 ON a_0.x = p42_1.X0 INNER JOIN p21 AS p21_2 ON a_0.x = p21_2.X1 UNION (SELECT p45_1.X0 AS X0, s_4.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p45_1.X0 AS X0, r_2.y AS X1 FROM b AS b_0 INNER JOIN p45 AS p45_1 ON b_0.x = p45_1.X1 INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p42_0.X1 AS X0, s_4.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x) UNION (SELECT p42_0.X1 AS X0, r_2.y AS X1 FROM p42 AS p42_0 INNER JOIN s AS s_1 ON p42_0.X0 = s_1.x INNER JOIN r AS r_2 ON s_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)), p3 AS (SELECT s_4.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_5 ON r_1.x = b_5.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT r_2.y AS X0, r_1.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.y INNER JOIN r AS r_2 ON b_0.x = r_2.x INNER JOIN b AS b_4 ON r_1.x = b_4.x INNER JOIN b AS b_3 ON r_2.y = b_3.x) UNION (SELECT p21_3.X0 AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x INNER JOIN p21 AS p21_3 ON r_1.y = p21_3.X1 INNER JOIN b AS b_4 ON r_0.x = b_4.x) UNION (SELECT s_5.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN r AS r_4 ON r_3.y = r_4.x INNER JOIN s AS s_5 ON r_4.y = s_5.x INNER JOIN b AS b_6 ON r_0.x = b_6.x) UNION (SELECT r_3.y AS X0, r_0.x AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN b AS b_4 ON r_3.y = b_4.x INNER JOIN b AS b_5 ON r_0.x = b_5.x)), p5 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p14 AS (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x UNION (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p15 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN a AS a_1 ON b_0.x = a_1.x UNION (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN b AS b_2 ON r_1.y = b_2.x)), p36 AS (SELECT p5_0.X0 AS X0, p41_2.X1 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p41 AS p41_2 ON s_1.y = p41_2.X0 UNION (SELECT p15_0.X0 AS X0, p41_2.X1 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p41 AS p41_2 ON p15_0.X1 = p41_2.X0)), p2 AS (SELECT p15_0.X0 AS X0, p14_2.X0 AS X1 FROM p15 AS p15_0 INNER JOIN b AS b_1 ON p15_0.X1 = b_1.x INNER JOIN p14 AS p14_2 ON p15_0.X1 = p14_2.X1 UNION (SELECT p5_0.X0 AS X0, p14_2.X0 AS X1 FROM p5 AS p5_0 INNER JOIN s AS s_1 ON p5_0.X1 = s_1.x INNER JOIN p14 AS p14_2 ON s_1.y = p14_2.X1)), p1 AS (SELECT p2_0.X0 AS X0, p3_2.X0 AS X1 FROM p2 AS p2_0 INNER JOIN b AS b_1 ON p2_0.X1 = b_1.x INNER JOIN p3 AS p3_2 ON p2_0.X1 = p3_2.X1 UNION (SELECT p2_0.X0 AS X0, p37_2.X1 AS X1 FROM p2 AS p2_0 INNER JOIN r AS r_1 ON p2_0.X1 = r_1.x INNER JOIN p37 AS p37_2 ON r_1.y = p37_2.X0) UNION (SELECT p36_0.X0 AS X0, p37_2.X1 AS X1 FROM p36 AS p36_0 INNER JOIN a AS a_1 ON p36_0.X1 = a_1.x INNER JOIN p37 AS p37_2 ON p36_0.X1 = p37_2.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :        :- LogicalUnion(all=[false])
   :  :     :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :- LogicalUnion(all=[false])
   :  :     :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :     :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        +- LogicalUnion(all=[false])
   :  :     :  :           :- LogicalUnion(all=[false])
   :  :     :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalUnion(all=[false])
   :  :        :  :- LogicalUnion(all=[false])
   :  :        :  :  :- LogicalUnion(all=[false])
   :  :        :  :  :  :- LogicalProject(X0=[$9], X1=[$1])
   :  :        :  :  :  :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :  :  :  :     :- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :  :     :  :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :  :     :  :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :  :     :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalProject(X0=[$4], X1=[$1])
   :  :        :  :  :     +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
   :  :        :  :  :        :- LogicalJoin(condition=[=($1, $5)], joinType=[inner])
   :  :        :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalProject(X0=[$5], X1=[$0])
   :  :        :  :     +- LogicalJoin(condition=[=($0, $7)], joinType=[inner])
   :  :        :  :        :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :        :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :        :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :        :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :        :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalProject(X0=[$11], X1=[$0])
   :  :        :     +- LogicalJoin(condition=[=($0, $12)], joinType=[inner])
   :  :        :        :- LogicalJoin(condition=[=($9, $10)], joinType=[inner])
   :  :        :        :  :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :        :        :  :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :        :        :  :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :  :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :  :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$7], X1=[$0])
   :  :           +- LogicalJoin(condition=[=($0, $9)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :  :              :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :              :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$5])
   :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :- LogicalUnion(all=[false])
   :        :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :        :- LogicalUnion(all=[false])
   :        :  :  :        :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :        :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :        :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :        :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :        :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :           +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :- LogicalUnion(all=[false])
   :        :  :        :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :        :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        +- LogicalUnion(all=[false])
   :        :  :           :- LogicalUnion(all=[false])
   :        :  :           :  :- LogicalProject(X0=[$2], X1=[$0])
   :        :  :           :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :           :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :  +- LogicalProject(X0=[$5], X1=[$0])
   :        :  :           :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :           :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :           :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalUnion(all=[false])
   :           :- LogicalUnion(all=[false])
   :           :  :- LogicalUnion(all=[false])
   :           :  :  :- LogicalUnion(all=[false])
   :           :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
   :           :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :           :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :  +- LogicalUnion(all=[false])
   :           :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
   :           :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
   :           :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :     +- LogicalUnion(all=[false])
   :           :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :           :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :           :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
   :           :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
   :           :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :  +- LogicalUnion(all=[false])
   :           :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :  +- LogicalProject(X0=[$1], X1=[$4])
   :           :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :           :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :           :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :  +- LogicalUnion(all=[false])
   :           :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
   :           :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :           :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :           :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :           :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :           :  +- LogicalProject(X0=[$1], X1=[$9])
   :           :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :           :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :           :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :           :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :- LogicalUnion(all=[false])
   :           :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :           :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :           :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :           :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :           :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :           :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :           :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :           +- LogicalProject(X0=[$1], X1=[$5])
   :              +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :                 :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :                 :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :- LogicalUnion(all=[false])
   :                 :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
   :                 :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :                 :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :                 :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
   :                 :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :                 :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :                 :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$4])
      +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :- LogicalUnion(all=[false])
         :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :     :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :     +- LogicalUnion(all=[false])
         :  :  :        :- LogicalProject(X0=[$0], X1=[$0])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :        +- LogicalProject(X0=[$0], X1=[$3])
         :  :  :           +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :              :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :              :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :     +- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :- LogicalUnion(all=[false])
         :  :        :  :  :- LogicalProject(X0=[$0], X1=[$0])
         :  :        :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :        :  :  +- LogicalProject(X0=[$0], X1=[$3])
         :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        +- LogicalUnion(all=[false])
         :  :           :- LogicalProject(X0=[$0], X1=[$0])
         :  :           :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :           +- LogicalProject(X0=[$0], X1=[$3])
         :  :              +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :                 :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :                 :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalUnion(all=[false])
            :  :- LogicalUnion(all=[false])
            :  :  :- LogicalUnion(all=[false])
            :  :  :  :- LogicalProject(X0=[$2], X1=[$3])
            :  :  :  :  +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
            :  :  :  :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :  +- LogicalUnion(all=[false])
            :  :  :  :     :     :- LogicalProject(X0=[$1], X1=[$0])
            :  :  :  :     :     :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :  :     :     :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :     :     +- LogicalProject(X0=[$3], X1=[$4])
            :  :  :  :     :        +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :  :  :  :     :           :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :  :  :  :     :           :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     :           +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :     +- LogicalUnion(all=[false])
            :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
            :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
            :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :  :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :  :              :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :  +- LogicalProject(X0=[$1], X1=[$8])
            :  :  :     +- LogicalJoin(condition=[=($6, $7)], joinType=[inner])
            :  :  :        :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :  :        :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :  :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :  +- LogicalUnion(all=[false])
            :  :  :        :  :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :  :        :  :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :  :        :  :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :  :        :  :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :  :        :  :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :  +- LogicalProject(X0=[$1], X1=[$4])
            :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
            :  :        :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :  :        :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :  +- LogicalUnion(all=[false])
            :  :        :  :     :- LogicalProject(X0=[$3], X1=[$0])
            :  :        :  :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :  :        :  :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :  :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :  :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
            :  :        :  :        +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :  :        :  :           :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :  :        :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :  +- LogicalProject(X0=[$1], X1=[$9])
            :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
            :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
            :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :- LogicalUnion(all=[false])
            :        :  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
            :        :  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        :  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
            :        :  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
            :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            +- LogicalProject(X0=[$1], X1=[$5])
               +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
                  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :- LogicalUnion(all=[false])
                  :  :  :  :- LogicalProject(X0=[$1], X1=[$0])
                  :  :  :  :  +- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
                  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  :  +- LogicalProject(X0=[$3], X1=[$4])
                  :  :  :     +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
                  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 20051.186302124515, cumulative cost = {4.8702501691408014E8 rows, 1.5335987197519854E10 cpu, 6.891193896E9 io, 1.9137622025568366E9 network, 9.92564552998101E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 20051.186302124515, cumulative cost = {4.87004965727778E8 rows, 1.533566637853902E10 cpu, 6.891193896E9 io, 1.9137622025568366E9 network, 9.912812770747651E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 20051.186302124515, cumulative cost = {4.869849145414759E8 rows, 1.5332137369749847E10 cpu, 6.891193896E9 io, 1.9132809740855856E9 network, 9.912812770747651E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 110615.48852106454, cumulative cost = {4.8696486335517377E8 rows, 1.533036752193351E10 cpu, 6.891193896E9 io, 1.9132809740855856E9 network, 9.899980011514292E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 107741.62835649225, cumulative cost = {3.194118053611865E8 rows, 1.016151349090243E10 cpu, 4.528492512E9 io, 1.270019033576068E9 network, 6.585302058726273E8 memory}
         :  :- Calc(select=[X0, X00 AS X1]): rowcount = 3324.4915552753923, cumulative cost = {1.4547162053569177E8 rows, 4.846790234980651E9 cpu, 2.067358176E9 io, 6.100721726956213E8 network, 3.226675234869789E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 3324.4915552753923, cumulative cost = {1.454682960441365E8 rows, 4.846790234980651E9 cpu, 2.067358176E9 io, 6.100721726956213E8 network, 3.226675234869789E8 memory}
         :  :     :- Exchange(distribution=[broadcast]): rowcount = 7114.528727429894, cumulative cost = {4.027196373845563E7 rows, 9.751808366134467E8 cpu, 5.90688108E8 io, 1.2065363309917484E8 network, 7.284677942869933E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.02648492097282E7 rows, 9.740425120170579E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.284677942869933E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7114.528727429894, cumulative cost = {4.025773468100078E7 rows, 9.739286795574191E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.239144959014381E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.025062015227335E7 rows, 9.726765225013914E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.239144959014381E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39248.404504546525, cumulative cost = {4.024350562354592E7 rows, 9.720485480293187E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.19361197515883E7 memory}
         :  :     :              :- Calc(select=[X0, X00 AS X1]): rowcount = 2902.503103769362, cumulative cost = {1.1429776453253599E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :  :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2902.503103769362, cumulative cost = {1.142687395014983E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :  :     :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :  :     :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :  :     :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :  :     :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :  :     :              :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :     :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 2582.6756235336693, cumulative cost = {5761689.509341273 rows, 1.022414546281028E7 cpu, 9.845652E7 io, 469752.31473019515 network, 2161399.198748731 memory}
         :  :     :              :        +- Calc(select=[X0, X1]): rowcount = 2582.6756235336693, cumulative cost = {5759106.83371774 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2582.6756235336693, cumulative cost = {5756524.158094207 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :  :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :              :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[X0, X00 AS X1]): rowcount = 36345.90140077716, cumulative cost = {2.8774480765787777E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 36345.90140077716, cumulative cost = {2.8738134864386998E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :  :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :  :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :  :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :  :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :  :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :  :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :                    :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :                    :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                    :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                    :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[broadcast]): rowcount = 2513.375623533669, cumulative cost = {5760557.609341274 rows, 1.0018149600378709E7 cpu, 9.8450988E7 io, 462557.11473019514 network, 2144759.198748731 memory}
         :  :     :                       +- Calc(select=[X0, x]): rowcount = 2513.375623533669, cumulative cost = {5758044.2337177405 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :  :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 2513.375623533669, cumulative cost = {5755530.858094207 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :  :     :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :                             :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :                             :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                             :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                             :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     +- Calc(select=[X0, X1]): rowcount = 15048.748307739388, cumulative cost = {1.0519300781412558E8 rows, 3.8714320921509233E9 cpu, 1.476670068E9 io, 4.8941853959644645E8 network, 2.4942233044954348E8 memory}
         :  :        +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 15048.748307739388, cumulative cost = {1.0517795906581785E8 rows, 3.8714320921509233E9 cpu, 1.476670068E9 io, 4.8941853959644645E8 network, 2.4942233044954348E8 memory}
         :  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 99861.9887182626, cumulative cost = {1.0516198431751011E8 rows, 3.870555412241177E9 cpu, 1.476664512E9 io, 4.8941298359644645E8 network, 2.4940566244954348E8 memory}
         :  :           :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 99861.9887182626, cumulative cost = {1.0506212232879186E8 rows, 3.8689576204216847E9 cpu, 1.476664512E9 io, 4.8941298359644645E8 network, 2.4301449517157468E8 memory}
         :  :           :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 99861.9887182626, cumulative cost = {1.049622603400736E8 rows, 3.8513819104072704E9 cpu, 1.476664512E9 io, 4.870162958672081E8 network, 2.4301449517157468E8 memory}
         :  :           :        +- Union(all=[true], union=[X0, X1]): rowcount = 550904.1959071144, cumulative cost = {1.0486239835135534E8 rows, 3.8425674432727566E9 cpu, 1.476664512E9 io, 4.870162958672081E8 network, 2.366233278936059E8 memory}
         :  :           :           :- Union(all=[true], union=[X0, X1]): rowcount = 430919.18390711443, cumulative cost = {8.567335729144824E7 rows, 3.4147715357968493E9 cpu, 1.181335152E9 io, 4.3827406514720815E8 network, 1.917994402136059E8 memory}
         :  :           :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 308859.2777633645, cumulative cost = {5.623390166987862E7 rows, 2.1670475385909424E9 cpu, 7.87571916E8 io, 2.7378684014420813E8 network, 1.1176376418660593E8 memory}
         :  :           :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 124216.7173125, cumulative cost = {3.79875896488125E7 rows, 1.8697553964023123E9 cpu, 4.92224844E8 io, 2.43756514785E8 network, 7.4945987965E7 memory}
         :  :           :           :  :  :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 108217.11740624999, cumulative cost = {2.20502331579375E7 rows, 9.998901703899999E8 cpu, 2.9532936E8 io, 1.30532860785E8 network, 4.0438301965E7 memory}
         :  :           :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y0, x0, y00], build=[right]): rowcount = 108217.11740624999, cumulative cost = {2.194201604053125E7 rows, 9.998901703899999E8 cpu, 2.9532936E8 io, 1.30532860785E8 network, 4.0438301965E7 memory}
         :  :           :           :  :  :  :     :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :           :  :  :  :     :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :  :  :     :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :  :  :     :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :     +- Exchange(distribution=[hash[y0]]): rowcount = 106200.999375, cumulative cost = {1.5886415573125001E7 rows, 8.866553851949999E8 cpu, 1.96889928E8 io, 1.15766921985E8 network, 3.4491018E7 memory}
         :  :           :           :  :  :  :        +- Calc(select=[x, y0]): rowcount = 106200.999375, cumulative cost = {1.578021457375E7 rows, 8.688136173E8 cpu, 1.96889928E8 io, 1.13218098E8 network, 3.4491018E7 memory}
         :  :           :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 106200.999375, cumulative cost = {1.5674013574375E7 rows, 8.688136173E8 cpu, 1.96889928E8 io, 1.13218098E8 network, 3.4491018E7 memory}
         :  :           :           :  :  :  :              :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :           :           :  :  :  :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :           :           :  :  :  :              :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :           :  :  :  :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :           :  :  :  :              :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :  :  :              :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :  :  :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :  :  :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :  +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 15999.59990625, cumulative cost = {1.5813139773562502E7 rows, 8.69741009295E8 cpu, 1.96895484E8 io, 1.13223654E8 network, 3.4507686E7 memory}
         :  :           :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 15999.59990625, cumulative cost = {1.5797140173656251E7 rows, 8.69741009295E8 cpu, 1.96895484E8 io, 1.13223654E8 network, 3.4507686E7 memory}
         :  :           :           :  :  :        :- Calc(select=[x, y0]): rowcount = 106200.999375, cumulative cost = {1.578021457375E7 rows, 8.688136173E8 cpu, 1.96889928E8 io, 1.13218098E8 network, 3.4491018E7 memory}
         :  :           :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 106200.999375, cumulative cost = {1.5674013574375E7 rows, 8.688136173E8 cpu, 1.96889928E8 io, 1.13218098E8 network, 3.4491018E7 memory}
         :  :           :           :  :  :        :     :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :           :           :  :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :           :           :  :  :        :     :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :           :  :  :        :     :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :           :  :  :        :     :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :  :        :     :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :  :        :     :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :  :        :     :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :  :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :  +- Calc(select=[X0, x AS X1]): rowcount = 184642.56045086452, cumulative cost = {1.793745274330275E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :           :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[left]): rowcount = 184642.56045086452, cumulative cost = {1.775281018285189E7 rows, 2.969832829108667E8 cpu, 2.95347072E8 io, 3.003032535920814E7 network, 3.681777622160592E7 memory}
         :  :           :           :  :        :- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :           :  :        :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615634.6530057634, cumulative cost = {1.1619652372401021E7 rows, 1.5087171368682057E8 cpu, 1.96902108E8 io, 1.525719135920814E7 network, 2343426.221605916 memory}
         :  :           :           :  :           +- Calc(select=[x, X0]): rowcount = 615634.6530057634, cumulative cost = {1.1004017719395258E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :           :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.6530057634, cumulative cost = {1.0388383066389494E7 rows, 4.744509198185229E7 cpu, 1.96902108E8 io, 481959.6870698188 network, 2343426.221605916 memory}
         :  :           :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :  :           :           :  :                    +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :           :           :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :  :           :           :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :  :           :           :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :  :           :           :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :  :           :           :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :  :           :           :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :           :           :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :           :           :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :           :           :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :  :           :           :  :                          :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :  :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :           :           :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :           :           :  +- Calc(select=[y01 AS X0, x AS X1]): rowcount = 122059.90614374998, cumulative cost = {2.9008536437662505E7 rows, 1.247293078022E9 cpu, 3.93763236E8 io, 1.6448722500300002E8 network, 8.003567602699998E7 memory}
         :  :           :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y01], build=[right]): rowcount = 122059.90614374998, cumulative cost = {2.8886476531518754E7 rows, 1.247293078022E9 cpu, 3.93763236E8 io, 1.6448722500300002E8 network, 8.003567602699998E7 memory}
         :  :           :           :        :- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :           :        :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :           :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :        :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :           :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :           :        +- Exchange(distribution=[hash[x0]]): rowcount = 198416.95762499995, cumulative cost = {2.2815901375375003E7 rows, 1.104519250361E9 cpu, 2.95318272E8 io, 1.4971409100300002E8 network, 6.890765839999999E7 memory}
         :  :           :           :           +- Calc(select=[x0, y0 AS y01]): rowcount = 198416.95762499995, cumulative cost = {2.261748441775E7 rows, 1.0711852014800001E9 cpu, 2.95318272E8 io, 1.4495208402E8 network, 6.890765839999999E7 memory}
         :  :           :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 198416.95762499995, cumulative cost = {2.2419067460125E7 rows, 1.0711852014800001E9 cpu, 2.95318272E8 io, 1.4495208402E8 network, 6.890765839999999E7 memory}
         :  :           :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :  :           :           :                 :  +- Calc(select=[y, x0]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :           :           :                 :        :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :           :           :                 :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :        +- Exchange(distribution=[hash[y0]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :           :                 :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                 :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                 :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                 :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :           :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :           :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :           :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :           :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 119985.01199999999, cumulative cost = {1.8638136863999996E7 rows, 4.2724500328E8 cpu, 2.9532936E8 io, 4.874223072E7 network, 4.482388767999999E7 memory}
         :  :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x)], select=[x, y, x0, y00], build=[right]): rowcount = 119985.01199999999, cumulative cost = {1.8518151851999998E7 rows, 4.2724500328E8 cpu, 2.9532936E8 io, 4.874223072E7 network, 4.482388767999999E7 memory}
         :  :           :                 :- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :                 :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                 :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :                 +- Exchange(distribution=[hash[y00]]): rowcount = 184584.33, cumulative cost = {1.244965159E7 rows, 2.8458183664E8 cpu, 1.96884396E8 io, 3.396909672E7 network, 3.4470497199999996E7 memory}
         :  :           :                    +- Calc(select=[x, y0 AS y00]): rowcount = 184584.33, cumulative cost = {1.226506726E7 rows, 2.535716692E8 cpu, 1.96884396E8 io, 2.9539072799999997E7 network, 3.4470497199999996E7 memory}
         :  :           :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 184584.33, cumulative cost = {1.208048293E7 rows, 2.535716692E8 cpu, 1.96884396E8 io, 2.9539072799999997E7 network, 3.4470497199999996E7 memory}
         :  :           :                          :- Exchange(distribution=[hash[y]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :           :                          :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                          :     +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :           :                          :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                          :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :           :                          :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :           :                          +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :           :                             +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :           +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X1]): rowcount = 104417.13680121685, cumulative cost = {1.7383244319713822E8 rows, 5.314615514293422E9 cpu, 2.461134336E9 io, 6.599468608804467E8 network, 3.358626823856483E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(y, X00)], select=[y, X0, X00, X1], build=[right]): rowcount = 104417.13680121685, cumulative cost = {1.73728026060337E8 rows, 5.314615514293422E9 cpu, 2.461134336E9 io, 6.599468608804467E8 network, 3.358626823856483E8 memory}
         :        :- Exchange(distribution=[hash[y]]): rowcount = 616313.4793091145, cumulative cost = {4.622254617638297E7 rows, 1.1115915533671973E9 cpu, 6.89127516E8 io, 1.354451566025936E8 network, 7.32451930374354E7 memory}
         :        :  +- Calc(select=[y, X0]): rowcount = 616313.4793091145, cumulative cost = {4.5606232697073855E7 rows, 1.0080508888432661E9 cpu, 6.89127516E8 io, 1.2065363309917484E8 network, 7.32451930374354E7 memory}
         :        :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 616313.4793091145, cumulative cost = {4.498991921776474E7 rows, 1.0080508888432661E9 cpu, 6.89127516E8 io, 1.2065363309917484E8 network, 7.32451930374354E7 memory}
         :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :        +- Exchange(distribution=[broadcast]): rowcount = 7114.528727429894, cumulative cost = {4.027196373845563E7 rows, 9.751808366134467E8 cpu, 5.90688108E8 io, 1.2065363309917484E8 network, 7.284677942869933E7 memory}
         :        :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.02648492097282E7 rows, 9.740425120170579E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.284677942869933E7 memory}
         :        :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7114.528727429894, cumulative cost = {4.025773468100078E7 rows, 9.739286795574191E8 cpu, 5.90688108E8 io, 1.2048288440971653E8 network, 7.239144959014381E7 memory}
         :        :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7114.528727429894, cumulative cost = {4.025062015227335E7 rows, 9.726765225013914E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.239144959014381E7 memory}
         :        :                    +- Union(all=[true], union=[X0, X1]): rowcount = 39248.404504546525, cumulative cost = {4.024350562354592E7 rows, 9.720485480293187E8 cpu, 5.90688108E8 io, 1.2031213572025822E8 network, 7.19361197515883E7 memory}
         :        :                       :- Calc(select=[X0, X00 AS X1]): rowcount = 2902.503103769362, cumulative cost = {1.1429776453253599E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :        :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2902.503103769362, cumulative cost = {1.142687395014983E7 rows, 2.4354047828950964E7 cpu, 1.96912968E8 io, 883304.5963684851 network, 4485613.202404163 memory}
         :        :                       :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :        :                       :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :        :                       :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :        :                       :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :        :                       :     :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :        :                       :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :     :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :                       :     :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :     :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :     :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :     :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :     +- Exchange(distribution=[broadcast]): rowcount = 2582.6756235336693, cumulative cost = {5761689.509341273 rows, 1.022414546281028E7 cpu, 9.845652E7 io, 469752.31473019515 network, 2161399.198748731 memory}
         :        :                       :        +- Calc(select=[X0, X1]): rowcount = 2582.6756235336693, cumulative cost = {5759106.83371774 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :        :                       :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2582.6756235336693, cumulative cost = {5756524.158094207 rows, 9810917.363044893 cpu, 9.845652E7 io, 407768.0997653871 network, 2161399.198748731 memory}
         :        :                       :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                       :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                       :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                       :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                       :              :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                       :              :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                       :              :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                       :              :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                       :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                       :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                       :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                       +- Calc(select=[X0, X00 AS X1]): rowcount = 36345.90140077716, cumulative cost = {2.8774480765787777E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :        :                          +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 36345.90140077716, cumulative cost = {2.8738134864386998E7 rows, 9.476552517958632E8 cpu, 3.9377514E8 io, 1.1942883112388973E8 network, 6.745050654918414E7 memory}
         :        :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :        :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :        :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :        :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :        :                             :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :        :                             :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                             :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                             :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                             :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                             :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 2513.375623533669, cumulative cost = {5760557.609341274 rows, 1.0018149600378709E7 cpu, 9.8450988E7 io, 462557.11473019514 network, 2144759.198748731 memory}
         :        :                                +- Calc(select=[X0, x]): rowcount = 2513.375623533669, cumulative cost = {5758044.2337177405 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :        :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[X0, X1, x, y], build=[right]): rowcount = 2513.375623533669, cumulative cost = {5755530.858094207 rows, 9616009.500613322 cpu, 9.8450988E7 io, 402236.0997653871 network, 2144759.198748731 memory}
         :        :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                                      :           :  :- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                      :           :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :  +- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                      :           :        :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                      :           :        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :        :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[X0]]): rowcount = 79800.76603233113, cumulative cost = {1.2740106274715284E8 rows, 4.197455046963493E9 cpu, 1.77200682E9 io, 5.2450170427785313E8 network, 2.5814864645040238E8 memory}
         :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 79800.76603233113, cumulative cost = {1.273212619811205E8 rows, 4.184048518270061E9 cpu, 1.77200682E9 io, 5.225864858930772E8 network, 2.5814864645040238E8 memory}
         :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 79800.76603233113, cumulative cost = {1.2724146121508816E8 rows, 4.1827717060135436E9 cpu, 1.77200682E9 io, 5.225864858930772E8 network, 2.5304139742433318E8 memory}
         :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 79800.76603233113, cumulative cost = {1.2716166044905582E8 rows, 4.1687267711918535E9 cpu, 1.77200682E9 io, 5.2067126750830126E8 network, 2.5304139742433318E8 memory}
         :                    +- Union(all=[true], union=[X0, X1]): rowcount = 440233.34011345747, cumulative cost = {1.2708185968302348E8 rows, 4.161683037750038E9 cpu, 1.77200682E9 io, 5.2067126750830126E8 network, 2.47934148398264E8 memory}
         :                       :- Union(all=[true], union=[X0, X1]): rowcount = 342540.6208548704, cumulative cost = {9.744858516557616E7 rows, 3.0777871537253575E9 cpu, 1.37823768E9 io, 3.860685784177678E8 network, 1.8073818755954063E8 memory}
         :                       :  :- Union(all=[true], union=[X0, X1]): rowcount = 157157.40484108235, cumulative cost = {5.7673545303601265E7 rows, 1.1916683536304245E9 cpu, 8.86034664E8 io, 1.3813827676502827E8 network, 7.91050655208173E7 memory}
         :                       :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 142866.08520204644, cumulative cost = {4.628500554818858E7 rows, 1.136069450339427E9 cpu, 6.89127696E8 io, 1.3731119620175168E8 network, 7.595317402825707E7 memory}
         :                       :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :                       :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
         :                       :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                       :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                       :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                       :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                       :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
         :                       :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :                       :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
         :                       :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
         :                       :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
         :                       :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
         :                       :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
         :                       :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                       :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                       :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 106508.83713903588, cumulative cost = {1.745708719983184E7 rows, 1.8367763308187646E8 cpu, 2.95340844E8 io, 1.7862962505522322E7 network, 8444749.491133625 memory}
         :                       :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 106508.83713903588, cumulative cost = {1.7350578362692803E7 rows, 1.8367763308187646E8 cpu, 2.95340844E8 io, 1.7862962505522322E7 network, 8444749.491133625 memory}
         :                       :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :  :  :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 94812.46426023931, cumulative cost = {1.1296686175553767E7 rows, 7.053395616779456E7 cpu, 1.96901412E8 io, 3097023.705522323 network, 3135223.4925602227 memory}
         :                       :  :  :           +- Calc(select=[y, X0]): rowcount = 94812.46426023931, cumulative cost = {1.1201873711293528E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
         :                       :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 94812.46426023931, cumulative cost = {1.1107061247033289E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
         :                       :  :  :                 :- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
         :                       :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :                       :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :                       :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :                       :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :                       :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :  +- Calc(select=[X0, y AS X1]): rowcount = 14291.319639035897, cumulative cost = {1.12313823505716E7 rows, 5.544174588615626E7 cpu, 1.96906968E8 io, 827080.5632765798 network, 3151891.4925602227 memory}
         :                       :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 14291.319639035897, cumulative cost = {1.1217091030932564E7 rows, 5.544174588615626E7 cpu, 1.96906968E8 io, 827080.5632765798 network, 3151891.4925602227 memory}
         :                       :  :        :- Calc(select=[y, X0]): rowcount = 94812.46426023931, cumulative cost = {1.1201873711293528E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
         :                       :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 94812.46426023931, cumulative cost = {1.1107061247033289E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
         :                       :  :        :     :- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
         :                       :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
         :                       :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
         :                       :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
         :                       :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
         :                       :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :                       :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
         :                       :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                       :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                       :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 185383.21601378804, cumulative cost = {3.943249924112003E7 rows, 1.8857762594740782E9 cpu, 4.92203016E8 io, 2.4793030165273955E8 network, 1.0163312203872335E8 memory}
         :                       :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 185383.21601378804, cumulative cost = {3.9247116025106244E7 rows, 1.8857762594740782E9 cpu, 4.92203016E8 io, 2.4793030165273955E8 network, 1.0163312203872335E8 memory}
         :                       :        :- Exchange(distribution=[hash[y]]): rowcount = 620641.656758587, cumulative cost = {3.3114349459092453E7 rows, 1.7684259490200095E9 cpu, 3.93763584E8 io, 2.3316436285273954E8 network, 6.717929283872336E7 memory}
         :                       :        :  +- Calc(select=[y, X1]): rowcount = 620641.656758587, cumulative cost = {3.2493707802333865E7 rows, 1.664158150684567E9 cpu, 3.93763584E8 io, 2.1826896309053347E8 network, 6.717929283872336E7 memory}
         :                       :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 620641.656758587, cumulative cost = {3.1873066145575278E7 rows, 1.664158150684567E9 cpu, 3.93763584E8 io, 2.1826896309053347E8 network, 6.717929283872336E7 memory}
         :                       :        :        :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :        +- Exchange(distribution=[hash[y]]): rowcount = 35969.04505724711, cumulative cost = {2.304914048881669E7 rows, 9.419814063241088E8 cpu, 2.95324176E8 io, 1.1982955509053347E8 network, 6.516502631551753E7 memory}
         :                       :        :           +- Calc(select=[X1, y]): rowcount = 35969.04505724711, cumulative cost = {2.301317144375944E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
         :                       :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977202398702193E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
         :                       :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                       :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                       :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                       :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                       :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                       :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                       :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :        :                 :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                       :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                       :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 97692.71925858707, cumulative cost = {2.9193041177333865E7 rows, 1.0834556506845667E9 cpu, 3.9376914E8 io, 1.3460268909053347E8 network, 6.719596083872336E7 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 97692.71925858707, cumulative cost = {2.9095348458075278E7 rows, 1.0834556506845667E9 cpu, 3.9376914E8 io, 1.3460268909053347E8 network, 6.719596083872336E7 memory}
         :                             :- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :                             :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                             :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                             :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[hash[y]]): rowcount = 35969.04505724711, cumulative cost = {2.304914048881669E7 rows, 9.419814063241088E8 cpu, 2.95324176E8 io, 1.1982955509053347E8 network, 6.516502631551753E7 memory}
         :                                +- Calc(select=[X1, y]): rowcount = 35969.04505724711, cumulative cost = {2.301317144375944E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
         :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977202398702193E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
         :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :                                      :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                                      :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :                                      :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                                      :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                                      :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                                      :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                                      :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                                      :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                      :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                      :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                      :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                      :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 2873.860164572296, cumulative cost = {1.6744244250546622E8 rows, 5.168743415542558E9 cpu, 2.362701384E9 io, 6.432619405095176E8 network, 3.3146779527880186E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 2873.860164572296, cumulative cost = {1.6743956864530164E8 rows, 5.168743415542558E9 cpu, 2.362701384E9 io, 6.432619405095176E8 network, 3.3146779527880186E8 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 7115.152858965637, cumulative cost = {4.009036097420688E7 rows, 9.838205626021278E8 cpu, 5.9068866E8 io, 1.2066955061644031E8 network, 7.290298826829742E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0083245821347915E7 rows, 9.826821381446933E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.290298826829742E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7115.152858965637, cumulative cost = {4.007613066848895E7 rows, 9.825682956989498E8 cpu, 5.9068866E8 io, 1.2049878694782513E8 network, 7.244761848532362E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7115.152858965637, cumulative cost = {4.0069015515629984E7 rows, 9.813160287957718E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.244761848532362E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 39251.84762325718, cumulative cost = {4.006190036277102E7 rows, 9.806879992337997E8 cpu, 5.9068866E8 io, 1.2032802327920996E8 network, 7.199224870234983E7 memory}
               :              :- Calc(select=[X0, X10 AS X1]): rowcount = 36347.62296013249, cumulative cost = {2.868367641384097E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right]): rowcount = 36347.62296013249, cumulative cost = {2.8647328790880837E7 rows, 9.519747078784224E8 cpu, 3.93775416E8 io, 1.194367749033656E8 network, 6.74785710245649E7 memory}
               :              :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :              :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :              :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :              :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :     :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              :     :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :              :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :              :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :              :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :              :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :              :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :              :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 2524.8526859025365, cumulative cost = {5669749.814275759 rows, 1.4337513866439002E7 cpu, 9.8451264E7 io, 470500.8942060667 network, 2172180.958636831 memory}
               :              :        +- Calc(select=[X1, x]): rowcount = 2524.8526859025365, cumulative cost = {5667224.961589857 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 2524.8526859025365, cumulative cost = {5664700.108903955 rows, 1.3933537436694596E7 cpu, 9.8451264E7 io, 409904.4297444058 network, 2172180.958636831 memory}
               :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :              :              :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              :              :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              :              :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :              :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :              :              :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :              :              :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :              :              :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :              :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :              :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :              :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[X0, X10 AS X1]): rowcount = 2904.224663124692, cumulative cost = {1.1338972101306796E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2904.224663124692, cumulative cost = {1.133606787664367E7 rows, 2.8674039507754087E7 cpu, 1.96913244E8 io, 891248.3758443566 network, 4513677.67778492 memory}
               :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
               :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
               :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
               :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
               :                    :           :- Calc(select=[x0 AS X0, x0 AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                    :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
               :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                    :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                    :              +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
               :                    :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                    :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                    :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                    :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 2594.152685902536, cumulative cost = {5670881.714275759 rows, 1.4544045325114453E7 cpu, 9.8456796E7 io, 477696.0942060667 network, 2188820.958636831 memory}
               :                       +- Calc(select=[X0, X1]): rowcount = 2594.152685902536, cumulative cost = {5668287.561589857 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                          +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2594.152685902536, cumulative cost = {5665693.408903955 rows, 1.4128980895370048E7 cpu, 9.8456796E7 io, 415436.4297444058 network, 2188820.958636831 memory}
               :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :                             :           :- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                             :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                             :           +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :                             :                 :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :                 :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             :                 :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                             :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                             :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[X0, X1]): rowcount = 12043.91490484967, cumulative cost = {1.2734633381093019E8 rows, 4.1847695803983197E9 cpu, 1.772012724E9 io, 5.225923898930772E8 network, 2.5816635845040238E8 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 12043.91490484967, cumulative cost = {1.2733428989602534E8 rows, 4.1847695803983197E9 cpu, 1.772012724E9 io, 5.225923898930772E8 network, 2.5816635845040238E8 memory}
                     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 79800.76603233113, cumulative cost = {1.273212619811205E8 rows, 4.184048518270061E9 cpu, 1.77200682E9 io, 5.225864858930772E8 network, 2.5814864645040238E8 memory}
                     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 79800.76603233113, cumulative cost = {1.2724146121508816E8 rows, 4.1827717060135436E9 cpu, 1.77200682E9 io, 5.225864858930772E8 network, 2.5304139742433318E8 memory}
                     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 79800.76603233113, cumulative cost = {1.2716166044905582E8 rows, 4.1687267711918535E9 cpu, 1.77200682E9 io, 5.2067126750830126E8 network, 2.5304139742433318E8 memory}
                     :        +- Union(all=[true], union=[X0, X1]): rowcount = 440233.34011345747, cumulative cost = {1.2708185968302348E8 rows, 4.161683037750038E9 cpu, 1.77200682E9 io, 5.2067126750830126E8 network, 2.47934148398264E8 memory}
                     :           :- Union(all=[true], union=[X0, X1]): rowcount = 342540.6208548704, cumulative cost = {9.744858516557616E7 rows, 3.0777871537253575E9 cpu, 1.37823768E9 io, 3.860685784177678E8 network, 1.8073818755954063E8 memory}
                     :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 157157.40484108235, cumulative cost = {5.7673545303601265E7 rows, 1.1916683536304245E9 cpu, 8.86034664E8 io, 1.3813827676502827E8 network, 7.91050655208173E7 memory}
                     :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 142866.08520204644, cumulative cost = {4.628500554818858E7 rows, 1.136069450339427E9 cpu, 6.89127696E8 io, 1.3731119620175168E8 network, 7.595317402825707E7 memory}
                     :           :  :  :  :- Calc(select=[X1 AS X0, X00 AS X1]): rowcount = 36357.24806301055, cumulative cost = {2.8685052263154693E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                     :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.24806301055, cumulative cost = {2.8648695015091684E7 rows, 9.522489511723484E8 cpu, 3.93786852E8 io, 1.1944823369622935E8 network, 6.750842453712344E7 memory}
                     :           :  :  :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                     :           :  :  :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                     :           :  :  :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                     :           :  :  :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                     :           :  :  :  :     :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :           :  :  :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :           :  :  :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                     :           :  :  :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :           :  :  :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :           :  :  :  :     :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                     :           :  :  :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                     :           :  :  :  :     :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2589.020038422928, cumulative cost = {5671106.41338373 rows, 1.4611243821544906E7 cpu, 9.84627E7 io, 481959.6870698188 network, 2198441.099454232 memory}
                     :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2589.020038422928, cumulative cost = {5668517.393345307 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                     :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2589.020038422928, cumulative cost = {5665928.3733068835 rows, 1.4197000615397237E7 cpu, 9.84627E7 io, 419823.20614766853 network, 2198441.099454232 memory}
                     :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5662355.35326846 rows, 1.3980199546681348E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 2180729.099454232 memory}
                     :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16768.133589486188, cumulative cost = {5645587.219678974 rows, 1.3711909409249568E7 cpu, 9.8456796E7 io, 413919.20614766853 network, 1107568.549727116 memory}
                     :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16768.133589486188, cumulative cost = {5628819.086089487 rows, 1.0760717897499999E7 cpu, 9.8456796E7 io, 11484.0 network, 1107568.549727116 memory}
                     :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92504.01749999999, cumulative cost = {5612050.952500001 rows, 9280653.6175 cpu, 9.8456796E7 io, 11484.0 network, 34408.0 memory}
                     :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                     :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
                     :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                     :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :  :              :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :  :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :  :  :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                     :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :  +- Calc(select=[X0, y0 AS X1]): rowcount = 106508.83713903588, cumulative cost = {1.745708719983184E7 rows, 1.8367763308187646E8 cpu, 2.95340844E8 io, 1.7862962505522322E7 network, 8444749.491133625 memory}
                     :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, y0, y, X0], build=[right]): rowcount = 106508.83713903588, cumulative cost = {1.7350578362692803E7 rows, 1.8367763308187646E8 cpu, 2.95340844E8 io, 1.7862962505522322E7 network, 8444749.491133625 memory}
                     :           :  :  :        :- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                     :           :  :  :        :  +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :        :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :        :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :        :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :        +- Exchange(distribution=[hash[y]]): rowcount = 94812.46426023931, cumulative cost = {1.1296686175553767E7 rows, 7.053395616779456E7 cpu, 1.96901412E8 io, 3097023.705522323 network, 3135223.4925602227 memory}
                     :           :  :  :           +- Calc(select=[y, X0]): rowcount = 94812.46426023931, cumulative cost = {1.1201873711293528E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
                     :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 94812.46426023931, cumulative cost = {1.1107061247033289E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
                     :           :  :  :                 :- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :  :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
                     :           :  :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
                     :           :  :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
                     :           :  :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
                     :           :  :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
                     :           :  :  :                                :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                     :           :  :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                     :           :  :  :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :  :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :  :                                      +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :  :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :  +- Calc(select=[X0, y AS X1]): rowcount = 14291.319639035897, cumulative cost = {1.12313823505716E7 rows, 5.544174588615626E7 cpu, 1.96906968E8 io, 827080.5632765798 network, 3151891.4925602227 memory}
                     :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X0, x], isBroadcast=[true], build=[right]): rowcount = 14291.319639035897, cumulative cost = {1.1217091030932564E7 rows, 5.544174588615626E7 cpu, 1.96906968E8 io, 827080.5632765798 network, 3151891.4925602227 memory}
                     :           :  :        :- Calc(select=[y, X0]): rowcount = 94812.46426023931, cumulative cost = {1.1201873711293528E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
                     :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 94812.46426023931, cumulative cost = {1.1107061247033289E7 rows, 5.460546217207435E7 cpu, 1.96901412E8 io, 821524.5632765798 network, 3135223.4925602227 memory}
                     :           :  :        :     :- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :           :  :        :     :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :           :  :        :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :        :     :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :        :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :     +- Exchange(distribution=[broadcast]): rowcount = 16767.34506826208, cumulative cost = {5679049.28277305 rows, 1.665787741152825E7 cpu, 9.8456448E7 io, 815968.5632765798 network, 2179584.168737546 memory}
                     :           :  :        :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5662281.937704788 rows, 1.3975102200606318E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 2179584.168737546 memory}
                     :           :  :        :           +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16767.34506826208, cumulative cost = {5645514.592636526 rows, 1.3706824679514125E7 cpu, 9.8456448E7 io, 413552.2816382899 network, 1106474.084368773 memory}
                     :           :  :        :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16767.34506826208, cumulative cost = {5628747.247568264 rows, 1.07557719475E7 cpu, 9.8456448E7 io, 11136.0 network, 1106474.084368773 memory}
                     :           :  :        :                 +- Union(all=[true], union=[X0, X1]): rowcount = 92499.6675, cumulative cost = {5611979.902500002 rows, 9275777.2675 cpu, 9.8456448E7 io, 11136.0 network, 33364.0 memory}
                     :           :  :        :                    :- Calc(select=[x0 AS X0, x AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                     :           :  :        :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(x, y)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
                     :           :  :        :                    :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :  :        :                    :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :  :        :                    :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :        :                    :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                    +- Calc(select=[x AS X0, x AS X1]): rowcount = 143.25, cumulative cost = {1704.5 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0], isBroadcast=[true], build=[right]): rowcount = 143.25, cumulative cost = {1561.25 rows, 81720.0 cpu, 11460.0 io, 5556.0 network, 16668.0 memory}
                     :           :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :           :  :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :           :  +- Calc(select=[X1 AS X0, y0 AS X1]): rowcount = 185383.21601378804, cumulative cost = {3.943249924112003E7 rows, 1.8857762594740782E9 cpu, 4.92203016E8 io, 2.4793030165273955E8 network, 1.0163312203872335E8 memory}
                     :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, X1, x, y0], build=[right]): rowcount = 185383.21601378804, cumulative cost = {3.9247116025106244E7 rows, 1.8857762594740782E9 cpu, 4.92203016E8 io, 2.4793030165273955E8 network, 1.0163312203872335E8 memory}
                     :           :        :- Exchange(distribution=[hash[y]]): rowcount = 620641.656758587, cumulative cost = {3.3114349459092453E7 rows, 1.7684259490200095E9 cpu, 3.93763584E8 io, 2.3316436285273954E8 network, 6.717929283872336E7 memory}
                     :           :        :  +- Calc(select=[y, X1]): rowcount = 620641.656758587, cumulative cost = {3.2493707802333865E7 rows, 1.664158150684567E9 cpu, 3.93763584E8 io, 2.1826896309053347E8 network, 6.717929283872336E7 memory}
                     :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 620641.656758587, cumulative cost = {3.1873066145575278E7 rows, 1.664158150684567E9 cpu, 3.93763584E8 io, 2.1826896309053347E8 network, 6.717929283872336E7 memory}
                     :           :        :        :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                     :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :        :        +- Exchange(distribution=[hash[y]]): rowcount = 35969.04505724711, cumulative cost = {2.304914048881669E7 rows, 9.419814063241088E8 cpu, 2.95324176E8 io, 1.1982955509053347E8 network, 6.516502631551753E7 memory}
                     :           :        :           +- Calc(select=[X1, y]): rowcount = 35969.04505724711, cumulative cost = {2.301317144375944E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
                     :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977202398702193E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
                     :           :        :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                     :           :        :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                     :           :        :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                     :           :        :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                     :           :        :                 :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :           :        :                 :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :           :        :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                     :           :        :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :           :        :                 :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :           :        :                 :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                     :           :        :                 :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                     :           :        :                 :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :        :                 :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :        :                 :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                 :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                     :           :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :           +- Calc(select=[X1 AS X0, y AS X1]): rowcount = 97692.71925858707, cumulative cost = {2.9193041177333865E7 rows, 1.0834556506845667E9 cpu, 3.9376914E8 io, 1.3460268909053347E8 network, 6.719596083872336E7 memory}
                     :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, X1, y0], build=[right]): rowcount = 97692.71925858707, cumulative cost = {2.9095348458075278E7 rows, 1.0834556506845667E9 cpu, 3.9376914E8 io, 1.3460268909053347E8 network, 6.719596083872336E7 memory}
                     :                 :- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                     :                 :  +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :                 :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                     :                 :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :                 :        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                     :                 :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                     :                 +- Exchange(distribution=[hash[y]]): rowcount = 35969.04505724711, cumulative cost = {2.304914048881669E7 rows, 9.419814063241088E8 cpu, 2.95324176E8 io, 1.1982955509053347E8 network, 6.516502631551753E7 memory}
                     :                    +- Calc(select=[X1, y]): rowcount = 35969.04505724711, cumulative cost = {2.301317144375944E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
                     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x, y], build=[right]): rowcount = 35969.04505724711, cumulative cost = {2.2977202398702193E7 rows, 9.359386067544913E8 cpu, 2.95324176E8 io, 1.1896629800915954E8 network, 6.516502631551753E7 memory}
                     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
                     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
                     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
                     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
                     :                          :           :- Calc(select=[y AS X0, x AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
                     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                     :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                     :                          :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
                     :                          :                 :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                     :                          :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :                          :                 +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
                     :                          :                    +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :                          :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, y0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                     :                          :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                     :                          :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                          :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n:  :     :- [#2] Exchange(distribution=[broadcast])\n:  :     +- Calc(select=[X0, X1])\n:  :        +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:  :           :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :           :  +- [#8] Exchange(distribution=[hash[X0, X1]])\n:  :           +- [#7] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = X00)], select=[y, X0, X00, X1], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[X0]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[X0, X1])\n         +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n            :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n            +- [#6] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X10 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X10, x], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[10])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, y AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])(reuse_id=[13])
         :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[2])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])(reuse_id=[14])
         :              :                 :- Exchange(distribution=[hash[x]])(reuse_id=[27])
         :              :                 :  +- Reused(reference_id=[1])
         :              :                 +- Exchange(distribution=[hash[y]])
         :              :                    +- Calc(select=[y, x0])(reuse_id=[3])
         :              :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = y0)], select=[x, y, x0, y0], build=[right])
         :              :                          :- Reused(reference_id=[1])
         :              :                          +- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X1, x])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[x AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[2])
         :              :        :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :        :              +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :        :                 :- Reused(reference_id=[3])
         :              :        :                 +- Reused(reference_id=[4])
         :              :        +- Reused(reference_id=[5])
         :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :              :  +- Exchange(distribution=[hash[X0, X1]])
         :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        +- Union(all=[true], union=[X0, X1])
         :              :           :- Calc(select=[x0 AS X0, x0 AS X1])
         :              :           :  +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0], isBroadcast=[true], build=[right])(reuse_id=[17])
         :              :           :     :- Reused(reference_id=[2])
         :              :           :     +- Exchange(distribution=[broadcast])(reuse_id=[6])
         :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[9])
         :              :           +- Calc(select=[x0 AS X0, y AS X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = y)], select=[y, x0, x], isBroadcast=[true], build=[right])(reuse_id=[16])
         :              :                 :- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[6])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, X1])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                       :- Reused(reference_id=[7])
         :                       +- Reused(reference_id=[6])
         :- Exchange(distribution=[broadcast])(reuse_id=[12])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, X00 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X00 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, X00, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :              :- Reused(reference_id=[8])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- MultipleInput(readOrder=[1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[y AS X0, x AS X1])\n:  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n:  :     :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n:  :     +- [#2] Exchange(distribution=[broadcast])\n:  +- Calc(select=[y0 AS X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:        :- [#5] Calc(select=[y, x0])\n:        +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])\n      :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :        :           :- Reused(reference_id=[9])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[2])
         :              :        :           :- Reused(reference_id=[5])
         :              :        :           :- Reused(reference_id=[3])
         :              :        :           +- Reused(reference_id=[5])
         :              :        +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Calc(select=[X0, x])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X1)], select=[X0, X1, x, y], build=[right])
         :                       :- Reused(reference_id=[11])
         :                       +- Reused(reference_id=[5])
         :- Exchange(distribution=[hash[y]])
         :  +- Calc(select=[y, X0])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Reused(reference_id=[12])
         :- Exchange(distribution=[hash[X0]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[2,1,3,2,1,0,1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X1 AS X0, X00 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, y0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, y0, y, X0], build=[right])\n:  :  :        :- [#4] Exchange(distribution=[hash[x]])\n:  :  :        +- [#10] Exchange(distribution=[hash[y]])\n:  :  +- Calc(select=[X0, y AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X0, x], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[y, X0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X1 AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, X1, x, y0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X1 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y]])\n])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[24])
         :              :  +- Calc(select=[x, y])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[6])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[15])
         :              :  +- Calc(select=[X1, y])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x, y], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y AS X0, x AS X1])
         :              :        :           :  +- Reused(reference_id=[13])
         :              :        :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :        :              +- Reused(reference_id=[14])
         :              :        +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y]])
         :              :  +- Calc(select=[y, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, X1, y0], build=[right])
         :              :        :- Exchange(distribution=[hash[x]], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[15])
         :              :- Exchange(distribution=[hash[x]])(reuse_id=[21])
         :              :  +- Calc(select=[x, y0])(reuse_id=[19])
         :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[5])
         :              :- Calc(select=[y, X0])(reuse_id=[22])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :     :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :     :  +- Calc(select=[x, y])(reuse_id=[25])
         :              :     :     +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :     :        :- Reused(reference_id=[1])
         :              :     :        +- Reused(reference_id=[6])
         :              :     +- Exchange(distribution=[broadcast])
         :              :        +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :              :           +- Exchange(distribution=[hash[X0, X1]])
         :              :              +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 +- Union(all=[true], union=[X0, X1])
         :              :                    :- Calc(select=[x0 AS X0, x AS X1])
         :              :                    :  +- Reused(reference_id=[16])
         :              :                    +- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :              :                       +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[6])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[28])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[4])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[21])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Reused(reference_id=[22])
         :- Reused(reference_id=[23])
         :- Reused(reference_id=[4])
         :- Reused(reference_id=[6])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[4,3,3,2,3,4,2,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[y0 AS X0, x0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y0, x0, y00], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[x]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[y0]])\n:  :  :  +- Calc(select=[y0 AS X0, x AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :- Calc(select=[x, y0])\n:  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:  :  :        :     :- [#10] Calc(select=[x, y0])\n:  :  :        :     +- [#9] Exchange(distribution=[broadcast])\n:  :  :        +- [#9] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[X0, x AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[left])\n:  :        :- [#3] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[y01 AS X0, x AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y01], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y]])\n:        +- [#4] Exchange(distribution=[hash[x0]])\n+- Calc(select=[y AS X0, x0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x)], select=[x, y, x0, y00], build=[right])\n      :- [#1] Exchange(distribution=[hash[x]])\n      +- [#2] Exchange(distribution=[hash[y00]])\n])
                  :- Reused(reference_id=[24])
                  :- Exchange(distribution=[hash[y00]])
                  :  +- Calc(select=[x, y0 AS y00])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])(reuse_id=[26])
                  :        :  +- Reused(reference_id=[25])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x0]])
                  :  +- Calc(select=[x0, y0 AS y01])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])
                  :        :- Exchange(distribution=[hash[y]])
                  :        :  +- Calc(select=[y, x0])
                  :        :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
                  :        :        :- Reused(reference_id=[27])
                  :        :        +- Exchange(distribution=[hash[y0]])
                  :        :           +- Reused(reference_id=[19])
                  :        +- Reused(reference_id=[21])
                  :- Reused(reference_id=[26])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[28])
                  :- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[y0]])
                  :  +- Calc(select=[x, y0])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])
                  :        :- Calc(select=[x, y0])(reuse_id=[29])
                  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :        :     :- Exchange(distribution=[hash[y]])
                  :        :     :  +- Reused(reference_id=[1])
                  :        :     +- Exchange(distribution=[hash[x]])
                  :        :        +- Reused(reference_id=[25])
                  :        +- Reused(reference_id=[6])
                  :- Reused(reference_id=[6])
                  :- Reused(reference_id=[29])
                  +- Reused(reference_id=[6])

Job has been submitted with JobID 00b07efadda4bf3a77ac9caff9f10cb9
