WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 1098fca1_345b_4402_9921_71e7ba8a987a

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 4b635478b97977be685e44fbbc4a853e
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: a3a31adb_2187_4d9a_9048_e4a4cc10cfeb

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID ff7846f308868c041603ea67a4f9802a
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: d45862f2_2d0c_4aec_8078_b1de8c2ee487

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 932f66f79143694a4b31606fc6a60909
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: b8a1b609_29ad_4f54_9eff_8e60786effb0

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 3239d658be213731562bcaa1f0df10cb
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 04f06b4d_06bb_40ef_9224_8935fa8a2f8c

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 4ad78cbcdb27429ce45d8e4bae434309
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 218a9b40_260f_4a22_b506_5bc962d6c234

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 2f88a252d8c37fe7bdf10b0cb25a95c3
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 8dd03b8b_79e8_4ccd_9eb7_11ec67d4ecd3

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 57579cecdad69efc505929f9b6234a78
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: a3165d00_c5a5_4965_a55f_9cfc0d621329

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 31c3f32ba910308588796edb46f5e0f1
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 881514f0_a070_410c_8792_acac353c49b1

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID fa73e8ab65633bda393936ebe293d608
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 0091598d_8922_4342_8fe5_5df607093e9a

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID bddbcb20c92657de4925a7c4c97a2345
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: e1e7db29_f203_45ef_87b9_b714b7a9adce

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 1237dd7ef7e3fb2a1a61cf6bafd641c3
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: fb9af85d_9ece_44dd_8278_04f194222163

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 6c8017437c9524e2a5b2df471216090b
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 0037ad75_f74b_4d06_a186_6dadbaf62c94

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID ec2742696550ad01f07628c54b305032
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: da90a815_6374_4df1_9eb5_260cc0dc6618

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID dbff773ea837ac8a937155bdd4e79efa
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 7ebc99e9_155b_4b25_a603_1642bd1d7a79

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID c4e6cdfddf40e9026f099001413c90e3
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 72e62d61_7023_44e5_b206_95d9bc968f80

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 67abae51c74ccb99bb8808e8babcd841
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 6d4603b4_87b2_47d7_950f_dc7368a19b1a

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID b3a08ccc4bdbeb5aa9e2b23aba17cfe0
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 027c10a0_5b18_418f_9ee5_39d7c9486e21

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID fde2f2721c6650a3ef87c34f481965ef
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 1eb603f3_5a97_46ba_84c8_23728488f846

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 8c78e6be5c540b071d87d33246b2d794
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: cfceaccf_c7f7_45d7_b530_a6ffc7319a29

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 70e0928087dc49ca2752a78fdc10220c
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 9fcdb1c3_eb9f_4248_80db_4afcd3625ea9

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 4d10a458b2aabde0f490d2f602a08ed0
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: fd78c359_1c8d_47fe_b10b_00a601539599

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID e08b1a170a03fa1b669ff1ebafe63215
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...

------------> using sink uuid: 67003d89_230f_4351_a8a2_645860e59147

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID a6471239dffa598ccfd6130863602206
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: 3f5822f5_d059_458b_b5c8_8cfa72c4741c

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 7f4b7d5e29b58f1a158750beb89a083e
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: 24adbf47_6e99_4202_b901_13dba39cffb0

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 26d44b6b19745e39f8a46f27e9ac046b
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: e4efa267_f55c_4b62_b765_1831a69a167a

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 797757c683d7a4c683bb5190f62f65a4
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 948d0f33_f247_43bb_88ca_ea6078c49daa

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID f339dfff6d3e065b41d16c16af79548d
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 88a68d57_f41f_4920_adf7_d0541872eee8

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 153642e3ceacd1230b3bfaec695b7b19
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: b04c558a_fde7_4af4_9ebe_360d771d285d

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID dd7878b78b2120c31e65564e24aac625
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 4a9ca771_1e11_4452_85a8_668e341a3aad

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID d0f0e963aedd48ef9e9e493f7b14e01b
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 766937e3_f2a2_45f8_9868_d8f5b193dff6

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 6081b04dd72ef7d0083b8bfebecf216d
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: c4018e7a_37f3_4b35_8d25_1816dc0f7a81

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID c29ba1727039d8c2eec9224927969fbc
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: f05a6132_1295_4fb6_8b71_b995c68fca97

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 8207cec934b8df0e9d01d57f31e7ec54
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 3e2dd962_032d_4cf4_930b_1c71f37c2e46

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 322a1f112de747e17c5404c607381585
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: 54163142_d4ac_478d_b9c8_2c4f87ea9dba

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 52d726b269a3c20d33125c2b59d09f48
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: 48ae2eb1_c40a_401e_88e8_f2ccc89bdbfe

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID ebaba2ec5d5900d3e352a11023ab57d3
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: d06ee944_bce3_4bc1_913e_f0acb37715eb

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 00c9e1ae53c2d16de8d718be1c7120fc
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 77d054d7_57c1_4346_b84e_a28652bb3574

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 5b66c673e998c0c52214d993be35206d
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: a0c2899d_41c1_4652_a3f9_d203b11d831d

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID edf8e1232b0fcb2ffe1bc1c9888af536
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: e8684431_a855_4ad4_bfab_e836d59486a1

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID c30f3b2c00f9514ac06354e44a36b43c
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 8aff4ccc_2cbc_427b_b73d_0721d145ed90

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 767ac4dec07b0faf2c5e917811125222
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 95931c89_bf00_45ab_837b_639302871afb

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID d2289febc85dc5d683056af1465b4508
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 206819c7_6aa1_4092_a512_fe376809ce50

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 6456e94060b55268a66535729dd8eeae
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 19755e9f_1b80_4207_95af_cda62dc9ccd8

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 4afc721f2494539c36b0d9fbefedf629
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 51807bb7_c82d_4459_9698_5042eb471526

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 1ee48458435802678e54c0d3364897b0
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 0b33588f_67b1_4b17_a768_408e466abb2c

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 30e05ae6e40a85eb975574b56ec5331a
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: cbb4a7b2_2c5e_4da7_8f44_0bcf77e692ea

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 7e6cfc1ec8081278f0a9ae54e8361aee
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: 25e2770a_5cc6_4e83_8edd_497a3993a747

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID ca64a9dd13a438e753bee8c7e286bfc2
