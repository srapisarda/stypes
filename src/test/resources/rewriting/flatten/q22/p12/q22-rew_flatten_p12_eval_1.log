WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: ff1739ed_cfda_4c4d_a66c_76f21195ae9f

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 01fbe35e72adb3230b41c1f1937465c8
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 926c3338_f42a_4af0_9541_3ade1eb79a46

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 583f726ccb05b071e4b7fef7acf87151
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: a4c6f382_50a9_45b5_8e95_ee83dead03a5

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 3dfe1a1c82bcfe934fbf5ca87b5e3fa7
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: b9a15171_d8d3_4597_815d_1fefe6b63e04

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 8083944b915b37822332112c75aade90
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 43dec4b6_0cb3_4364_868f_0f5cefc7b612

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 1af9c0eb43c9c3dc29653392ab647379
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: f7bd901f_d2cc_4fd9_accd_1e05382ad2f7

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID bc4a64d96a5ee014e467033b7d2d911e
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: c740acb5_308e_4aae_9d9b_5c8c771251c1

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 61f557b01874d60a93761071930c6824
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 7c750df9_e030_4a18_8319_ee573cedb130

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 3cd95966bc234586e350cd0ffe533deb
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 3b595c6a_2154_4c2d_a060_a7db2186cc37

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID cf21f7f61baa68df3f706253742976c1
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 6d6ad038_c5d1_45a0_b6dd_99c9ac8b2cdc

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID ff61718030c5812ba4a36f9c726d7474
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 13323282_fe1e_4037_9bda_8651ec545e6f

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 6d2ea67b32d73480c08c7f8bb91a8d48
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: c9a121e3_8842_433b_abca_ab1aa256cccd

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID e254db01991bb3e23157f2baa4943c65
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: adcdb27a_f2b9_415f_a799_2b0025bed018

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 504eb255e307d40daefd16769cb33ecf
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 46d357f7_cf91_4775_83e0_37b010e2957b

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 68a045537f7982c69bd4c68a85ae677d
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: f1f56bea_39da_4c49_8f44_ac710821db36

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID fe630351b132359b3d26c713ea3e0834
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: f9060c70_37f6_43e8_934a_e61e7384e89e

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID c303cd94107a8db34f77c63528cc3a41
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 9c62453f_022d_4359_bf56_cba45f213360

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID dc13d3f91a777c33e09c2a1c51975623
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: ffed2df9_edf5_4a29_a697_9fbfc9afd279

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID cc5af82f769c6c41539cee426f6ed575
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 28e65bd1_19bb_41cb_bb36_5b2533d32ec5

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID a4cf8dc04835bdab677e2dc39038e01c
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: c7fe7f0d_425e_49ac_a0e0_1333a202dfe6

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 9bb0dae3ddbaa62df54a54e62f4875d7
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: f250004a_38ad_497f_8667_e3cca828cd3b

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 253fd4e573a4f32fe7270d64c89f51e0
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: 47670d48_da1e_4ee0_8268_8ba1db231843

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 5c86a67e8dfd0f06120ffb966041c8e6
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: c7d19437_b126_41bc_a8f4_98a04e7dc711

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID e14044ee4cedb7e87dca8ace216fcd79
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 93e16a43_1d64_4024_aa0a_a5af49981fc8

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 1a334112cd47fadcb0f46e30b8b45af4
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: c3850c63_6bac_4ae2_86a1_b69ae97cb1a1

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID facb052cc1ed5948a5a52e62409f1696
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 7dea33fd_66c4_4d5d_9c38_e6d0c1fed26f

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 8ce2ee0d7df20d23eae4333f3506bef3
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 858fb663_c224_4376_a0ab_c3037bd3f69f

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5561612.9960693065 rows, 2.8301998059229803E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.7049757521542434E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 3247.7445517732417, cumulative cost = {5558365.251517533 rows, 2.8296801667946965E8 cpu, 6.777054E7 io, 3.708397844809007E7 network, 1.6841901870228946E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 3247.7445517732417, cumulative cost = {5555117.50696576 rows, 2.823964136383576E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6841901870228946E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 17916.68805889847, cumulative cost = {5551869.762413987 rows, 2.821097466294152E8 cpu, 6.777054E7 io, 3.700603257884751E7 network, 1.6634046218915459E7 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 9023.241904449236, cumulative cost = {3091035.187927544 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left]): rowcount = 9023.241904449236, cumulative cost = {3082011.946023095 rows, 1.6663265929067814E8 cpu, 3.6965388E7 io, 2.2114418689423755E7 network, 9555854.709457729 memory}
         :     :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Calc(select=[x, y00 AS y000]): rowcount = 45146.939999999995, cumulative cost = {1622147.6799999997 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :        +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 45146.939999999995, cumulative cost = {1577000.7399999998 rows, 1.051851726E8 cpu, 1.8482352E7 io, 1.43084304E7 network, 4636021.6 memory}
         :           :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :           +- Exchange(distribution=[hash[x]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :              +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 8893.446154449237, cumulative cost = {2442917.8864275445 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left]): rowcount = 8893.446154449237, cumulative cost = {2434024.4402730954 rows, 1.1545917065067817E8 cpu, 3.0805152E7 io, 1.4891613889423756E7 network, 7078191.50945773 memory}
               :- Exchange(distribution=[broadcast]): rowcount = 15008.006029661574, cumulative cost = {1450841.024118646 rows, 6.0966247122440875E7 cpu, 1.8483036E7 io, 7805988.289423756 network, 4079384.771796681 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1435833.0180889845 rows, 5.8564966157695025E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 4079384.771796681 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15008.006029661574, cumulative cost = {1420825.012059323 rows, 5.832483806122044E7 cpu, 1.8483036E7 io, 7445796.144711878 network, 3118872.3858983405 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15008.006029661574, cumulative cost = {1405817.0060296615 rows, 5.5683429E7 cpu, 1.8483036E7 io, 7085604.0 network, 3118872.3858983405 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 82794.0, cumulative cost = {1390809.0 rows, 5.4358725E7 cpu, 1.8483036E7 io, 7085604.0 network, 2158360.0 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
                     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
                     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
                        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
                              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,0,2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[x, y00 AS y000])\n:        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])\n:           :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:           +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], isBroadcast=[true], build=[left])\n      :- [#1] Exchange(distribution=[broadcast])\n      +- Calc(select=[x, y0])\n         +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n            :- [#5] Exchange(distribution=[hash[y]])\n            +- [#6] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Reused(reference_id=[2])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y0 AS y00])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :        :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0])
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Reused(reference_id=[1])
         :                 +- Reused(reference_id=[3])
         :- Reused(reference_id=[4])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :- Reused(reference_id=[1])
                  +- Exchange(distribution=[broadcast])
                     +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID f8a8002d9ff8eefb5b8866897d8dc2ff
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 7be0413f_fc09_477f_abc0_5fa172c95eb2

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID d1aba93eb32c2730c83e99ccb1c54565
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: cfd3d2db_4874_4be5_8d2e_bacdcaa0fca8

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 456d0fc06efc13e489095fb4a1a53fcb
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 6ea4334d_9812_48b7_8bc3_f52db1fa0b9e

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.078698056213391E7 rows, 2.6807143400850782E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.532145252543524E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 29188.44340799737, cumulative cost = {5.075779211872591E7 rows, 2.6802473249905505E9 cpu, 6.09074676E8 io, 3.5257125740065163E8 network, 1.5134646487624055E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 29188.44340799737, cumulative cost = {5.072860367531791E7 rows, 2.675110158950743E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.5134646487624055E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 161022.58879331144, cumulative cost = {5.0699415231909916E7 rows, 2.6725337975300503E9 cpu, 6.09074676E8 io, 3.518707347588597E8 network, 1.494784044981287E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 81094.66525603073, cumulative cost = {2.8185598636714555E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 81094.66525603073, cumulative cost = {2.8104503971458524E7 rows, 1.5668034134456286E9 cpu, 3.32219856E8 io, 2.0848618596692985E8 network, 8.587436649906436E7 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 405753.125625, cumulative cost = {1.4984606639375001E7 rows, 1.013505162505E9 cpu, 1.66107912E8 io, 1.38333293115E8 network, 4.16654329E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 405753.125625, cumulative cost = {1.4578853513750002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 405753.125625, cumulative cost = {1.4173100388125002E7 rows, 9.453386374E8 cpu, 1.66107912E8 io, 1.285952181E8 network, 4.16654329E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 79927.92353728072, cumulative cost = {2.235279400640205E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 79927.92353728072, cumulative cost = {2.227286608286477E7 rows, 1.1055693614956286E9 cpu, 2.7685482E8 io, 1.4338454879192984E8 network, 6.360403799906435E7 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134877.9760818715, cumulative cost = {1.303880266682749E7 rows, 5.489732021269736E8 cpu, 1.66111944E8 io, 7.015289285192983E7 network, 3.665576693847955E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2903924690745618E7 rows, 5.2631370214521927E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 3.665576693847955E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134877.9760818715, cumulative cost = {1.2769046714663746E7 rows, 5.2415565452790934E8 cpu, 1.66111944E8 io, 6.6915821425964914E7 network, 2.8023576469239775E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134877.9760818715, cumulative cost = {1.2634168738581873E7 rows, 5.0041713073749995E8 cpu, 1.66111944E8 io, 6.367875E7 network, 2.8023576469239775E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744075.3374999999, cumulative cost = {1.2499290762500001E7 rows, 4.885119253375E8 cpu, 1.66111944E8 io, 6.367875E7 network, 1.9391386E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 397974.8475, cumulative cost = {9154135.4925 rows, 5.5233333678E8 cpu, 1.10742876E8 io, 7.323165594E7 network, 1.93951044E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
                           +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 881384a9589c2d58b3f2c605b1342c5b
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 1dc1ffaf_baa4_4fa0_a1b3_f24c0574ff71

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID ee9bf3c9478b21607277bcdf70bab565
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 9bad91c1_2c7b_4c5e_8332_4a249f1b81a4

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 66b9121179883308cb68321baddc3571
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: ae90cd21_e8d1_4830_8054_4d3299b9e6f3

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.4110761481140912E8 rows, 7.448095057938851E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.256563309805773E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 81098.64502811553, cumulative cost = {1.41026516166381E8 rows, 7.446797479618402E9 cpu, 1.692286332E9 io, 9.795949699245822E8 network, 4.204660176987779E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 81098.64502811553, cumulative cost = {1.409454175213529E8 rows, 7.432524118093453E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.204660176987779E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 447393.29149971076, cumulative cost = {1.4086431887632477E8 rows, 7.425365825429458E9 cpu, 1.692286332E9 io, 9.776486024439075E8 network, 4.1527570441697854E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 225318.24786235538, cumulative cost = {7.831215425388752E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 225318.24786235538, cumulative cost = {7.808683600602517E7 rows, 4.353265342660979E9 cpu, 9.23060928E8 io, 5.792694012799537E8 network, 2.3858608688848925E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 1127375.4615, cumulative cost = {4.163437081449999E7 rows, 2.8159997950920005E9 cpu, 4.61526864E8 io, 3.84355734516E8 network, 1.1576635335999998E8 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 1127375.4615, cumulative cost = {4.050699535299999E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 1127375.4615, cumulative cost = {3.9379619891499996E7 rows, 2.6266007175600004E9 cpu, 4.61526864E8 io, 3.5729872344E8 network, 1.1576635335999998E8 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 222075.04363735535, cumulative cost = {6.2104771330937535E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 222075.04363735535, cumulative cost = {6.188269628730018E7 rows, 3.0716530894769783E9 cpu, 7.69225404E8 io, 3.983792011639537E8 network, 1.766896175284893E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374746.1909157026, cumulative cost = {3.6227146943662815E7 rows, 1.525248574349653E9 cpu, 4.61534064E8 io, 1.9491366676395372E8 network, 1.0183394683720993E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.585240075274711E7 rows, 1.462291214275815E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 1.0183394683720993E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374746.1909157026, cumulative cost = {3.547765456183141E7 rows, 1.4562952752211637E9 cpu, 4.61534064E8 io, 1.8591975818197685E8 network, 7.785019061860496E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374746.1909157026, cumulative cost = {3.51029083709157E7 rows, 1.3903399456200001E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 7.785019061860496E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067345.66, cumulative cost = {3.472816218E7 rows, 1.3572624150600002E9 cpu, 4.61534064E8 io, 1.769258496E8 network, 5.38664344E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
                           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID e9d32e51e5e7a45bf0eecd2af4067dbe
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...

------------> using sink uuid: 055012a9_6934_4422_af24_5b7c24b77ad5

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 322f27c6a2a5c51692a5cd6af8a9c65f
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 805f0156_df8e_4050_83d2_651d71c86c2a

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID 9d8f7d5be8e27b59617a5b9ecd2b7e89
WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 35391400_4b51_4ab1_8b61_3a1855adf734

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p3 AS (SELECT a_0.x AS X0, r_1.y AS X1 FROM a AS a_0 INNER JOIN r AS r_1 ON a_0.x = r_1.x UNION (SELECT s_0.x AS X0, r_2.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x)), p1 AS (SELECT p3_0.X0 AS X0, s_4.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN r AS r_3 ON r_2.y = r_3.x INNER JOIN s AS s_4 ON r_3.y = s_4.x UNION (SELECT p3_0.X0 AS X0, r_2.y AS X1 FROM p3 AS p3_0 INNER JOIN r AS r_1 ON p3_0.X1 = r_1.x INNER JOIN r AS r_2 ON r_1.y = r_2.x INNER JOIN b AS b_3 ON r_2.y = b_3.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalProject(X0=[$0], X1=[$9])
   :  +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
   :     :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :     :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :- LogicalUnion(all=[false])
   :     :  :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :     :  :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :     :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :     :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :     :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :     :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :     :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   +- LogicalProject(X0=[$0], X1=[$5])
      +- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
         :  :  :  :  +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.029166457091333E7 rows, 4.765888870717165E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.723791172236461E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 51892.99559791552, cumulative cost = {9.023977157531542E7 rows, 4.765058582787599E9 cpu, 1.082850924E9 io, 6.268202004139881E8 network, 2.690579655053795E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 51892.99559791552, cumulative cost = {9.01878785797175E7 rows, 4.755925415562366E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.690579655053795E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 286275.78300824424, cumulative cost = {9.013598558411959E7 rows, 4.751345003034234E9 cpu, 1.082850924E9 io, 6.255747685196382E8 network, 2.657368137871129E8 memory}
         :- Calc(select=[X0, y000 AS X1]): rowcount = 144175.3385759971, cumulative cost = {5.011005468738692E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y000], build=[left]): rowcount = 144175.3385759971, cumulative cost = {4.9965879348810926E7 rows, 2.785553400996613E9 cpu, 5.906424E8 io, 3.706598814013191E8 network, 1.5266907798355645E8 memory}
         :     :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
         :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
         :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
         :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
         :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
         :     :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
         :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :     :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :     :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :     :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :     :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :     :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :     +- Exchange(distribution=[hash[x]]): rowcount = 721376.2901249999, cumulative cost = {2.6640680022875004E7 rows, 1.8018802330210001E9 cpu, 2.95318248E8 io, 2.45938584183E8 network, 7.407569217999999E7 memory}
         :        +- Calc(select=[x, y00 AS y000]): rowcount = 721376.2901249999, cumulative cost = {2.5919303732750002E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y00], build=[right]): rowcount = 721376.2901249999, cumulative cost = {2.5197927442625E7 rows, 1.6806890162800002E9 cpu, 2.95318248E8 io, 2.2862555322E8 network, 7.407569217999999E7 memory}
         :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[hash[x]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :                 +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :                       :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                       :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                       +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :                          +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, y0 AS X1]): rowcount = 142100.4444322471, cumulative cost = {3.973965511372442E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, y0], build=[left]): rowcount = 142100.4444322471, cumulative cost = {3.9597554669292174E7 rows, 1.965505326254613E9 cpu, 4.92208524E8 io, 2.549148871183191E8 network, 1.1306773580355646E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239792.63371498074, cumulative cost = {2.3181023987359926E7 rows, 9.759838165848931E8 cpu, 2.95324152E8 io, 1.2472129721831907E8 network, 6.516499831551753E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2941231353644945E7 rows, 9.356986541207763E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 6.516499831551753E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239792.63371498074, cumulative cost = {2.2701438719929963E7 rows, 9.318619719813366E8 cpu, 2.95324152E8 io, 1.1896627400915954E8 network, 4.981826975775877E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239792.63371498074, cumulative cost = {2.2461646086214982E7 rows, 8.896584684475E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 4.981826975775877E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322853.3675, cumulative cost = {2.22218534525E7 rows, 8.684928145675E8 cpu, 2.95324152E8 io, 1.132112508E8 network, 3.4471541199999996E7 memory}
               :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x0 AS X0, y AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, y0, x0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[y]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 707543.6625, cumulative cost = {1.6274430237499999E7 rows, 9.819428193E8 cpu, 1.96884372E8 io, 1.301935899E8 network, 3.447435E7 memory}
                  +- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
                        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
                           +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
                                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X0, y000 AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y000], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X1]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, y0], build=[left])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[3])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x0 AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x0 AS X0, y AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, y0, x0], build=[right])\n      :- [#3] Exchange(distribution=[hash[x]])\n      +- [#4] Exchange(distribution=[hash[y]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[y]])
         :                 +- Calc(select=[y, x0])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, y00 AS y000])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y00], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[x]])
         :           +- Calc(select=[x, y0 AS y00])
         :              +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                 :- Exchange(distribution=[hash[y]])(reuse_id=[4])
         :                 :  +- Reused(reference_id=[1])
         :                 +- Exchange(distribution=[hash[x]])
         :                    +- Calc(select=[x, y0])
         :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :                          :- Reused(reference_id=[1])
         :                          +- Reused(reference_id=[2])
         :- Reused(reference_id=[3])
         +- Exchange(distribution=[hash[x]])
            +- Calc(select=[x, y0])
               +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
                  :- Reused(reference_id=[4])
                  +- Exchange(distribution=[hash[x]])
                     +- Calc(select=[x, y])
                        +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                           :- Reused(reference_id=[1])
                           +- Exchange(distribution=[broadcast])
                              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])

Job has been submitted with JobID bd9be776554c9dde137469e82b4601e7
